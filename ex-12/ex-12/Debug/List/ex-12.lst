
AVRASM ver. 2.1.30  E:\University\Term 6\Micro\ex-12\ex-12\Debug\List\ex-12.asm Tue May 28 20:51:44 2024

E:\University\Term 6\Micro\ex-12\ex-12\Debug\List\ex-12.asm(1083): warning: Register r4 already defined by the .DEF directive
E:\University\Term 6\Micro\ex-12\ex-12\Debug\List\ex-12.asm(1084): warning: Register r5 already defined by the .DEF directive
E:\University\Term 6\Micro\ex-12\ex-12\Debug\List\ex-12.asm(1085): warning: Register r6 already defined by the .DEF directive
E:\University\Term 6\Micro\ex-12\ex-12\Debug\List\ex-12.asm(1086): warning: Register r7 already defined by the .DEF directive
E:\University\Term 6\Micro\ex-12\ex-12\Debug\List\ex-12.asm(1087): warning: Register r8 already defined by the .DEF directive
E:\University\Term 6\Micro\ex-12\ex-12\Debug\List\ex-12.asm(1088): warning: Register r9 already defined by the .DEF directive
E:\University\Term 6\Micro\ex-12\ex-12\Debug\List\ex-12.asm(1089): warning: Register r10 already defined by the .DEF directive
E:\University\Term 6\Micro\ex-12\ex-12\Debug\List\ex-12.asm(1090): warning: Register r11 already defined by the .DEF directive
                 
                 
                 ;CodeVisionAVR C Compiler V3.40 Advanced
                 ;(C) Copyright 1998-2020 Pavel Haiduc, HP InfoTech S.R.L.
                 ;http://www.hpinfotech.ro
                 
                 ;Build configuration    : Debug
                 ;Chip type              : ATmega32
                 ;Program type           : Application
                 ;Clock frequency        : 8.000000 MHz
                 ;Memory model           : Small
                 ;Optimize for           : Size
                 ;(s)printf features     : int, width
                 ;(s)scanf features      : int, width
                 ;External RAM size      : 0
                 ;Data Stack size        : 512 byte(s)
                 ;Heap size              : 0 byte(s)
                 ;Promote 'char' to 'int': Yes
                 ;'char' is unsigned     : Yes
                 ;8 bit enums            : Yes
                 ;Global 'const' stored in FLASH: Yes
                 ;Enhanced function parameter passing: Mode 2
                 ;Enhanced core instructions: On
                 ;Automatic register allocation for global variables: On
                 ;Smart register allocation: On
                 
                 	#define _MODEL_SMALL_
                 
                 	#pragma AVRPART ADMIN PART_NAME ATmega32
                 	#pragma AVRPART MEMORY PROG_FLASH 32768
                 	#pragma AVRPART MEMORY EEPROM 1024
                 	#pragma AVRPART MEMORY INT_SRAM SIZE 2048
                 	#pragma AVRPART MEMORY INT_SRAM START_ADDR 0x60
                 
                 	#define CALL_SUPPORTED 1
                 
                 	.LISTMAC
                 	.EQU UDRE=0x5
                 	.EQU RXC=0x7
                 	.EQU USR=0xB
                 	.EQU UDR=0xC
                 	.EQU SPSR=0xE
                 	.EQU SPDR=0xF
                 	.EQU EERE=0x0
                 	.EQU EEWE=0x1
                 	.EQU EEMWE=0x2
                 	.EQU EECR=0x1C
                 	.EQU EEDR=0x1D
                 	.EQU EEARL=0x1E
                 	.EQU EEARH=0x1F
                 	.EQU WDTCR=0x21
                 	.EQU MCUCR=0x35
                 	.EQU GICR=0x3B
                 	.EQU SPL=0x3D
                 	.EQU SPH=0x3E
                 	.EQU SREG=0x3F
                 
                 	.DEF R0X0=R0
                 	.DEF R0X1=R1
                 	.DEF R0X2=R2
                 	.DEF R0X3=R3
                 	.DEF R0X4=R4
                 	.DEF R0X5=R5
                 	.DEF R0X6=R6
                 	.DEF R0X7=R7
                 	.DEF R0X8=R8
                 	.DEF R0X9=R9
                 	.DEF R0XA=R10
                 	.DEF R0XB=R11
                 	.DEF R0XC=R12
                 	.DEF R0XD=R13
                 	.DEF R0XE=R14
                 	.DEF R0XF=R15
                 	.DEF R0X10=R16
                 	.DEF R0X11=R17
                 	.DEF R0X12=R18
                 	.DEF R0X13=R19
                 	.DEF R0X14=R20
                 	.DEF R0X15=R21
                 	.DEF R0X16=R22
                 	.DEF R0X17=R23
                 	.DEF R0X18=R24
                 	.DEF R0X19=R25
                 	.DEF R0X1A=R26
                 	.DEF R0X1B=R27
                 	.DEF R0X1C=R28
                 	.DEF R0X1D=R29
                 	.DEF R0X1E=R30
                 	.DEF R0X1F=R31
                 
                 	.EQU __SRAM_START=0x0060
                 	.EQU __SRAM_END=0x085F
                 	.EQU __DSTACK_SIZE=0x0200
                 	.EQU __HEAP_SIZE=0x0000
                 	.EQU __CLEAR_SRAM_SIZE=__SRAM_END-__SRAM_START+1
                 
                 	.MACRO __CPD1N
                 	CPI  R30,LOW(@0)
                 	LDI  R26,HIGH(@0)
                 	CPC  R31,R26
                 	LDI  R26,BYTE3(@0)
                 	CPC  R22,R26
                 	LDI  R26,BYTE4(@0)
                 	CPC  R23,R26
                 	.ENDM
                 
                 	.MACRO __CPD2N
                 	CPI  R26,LOW(@0)
                 	LDI  R30,HIGH(@0)
                 	CPC  R27,R30
                 	LDI  R30,BYTE3(@0)
                 	CPC  R24,R30
                 	LDI  R30,BYTE4(@0)
                 	CPC  R25,R30
                 	.ENDM
                 
                 	.MACRO __CPWRR
                 	CP   R@0,R@2
                 	CPC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __CPWRN
                 	CPI  R@0,LOW(@2)
                 	LDI  R30,HIGH(@2)
                 	CPC  R@1,R30
                 	.ENDM
                 
                 	.MACRO __ADDB1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDB2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	SBCI R31,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	SBCI R27,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	SBCI R22,BYTE3(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1N
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	SBCI R22,BYTE3(-@0)
                 	SBCI R23,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __ADDD2N
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	SBCI R24,BYTE3(-@0)
                 	SBCI R25,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __SUBD1N
                 	SUBI R30,LOW(@0)
                 	SBCI R31,HIGH(@0)
                 	SBCI R22,BYTE3(@0)
                 	SBCI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __SUBD2N
                 	SUBI R26,LOW(@0)
                 	SBCI R27,HIGH(@0)
                 	SBCI R24,BYTE3(@0)
                 	SBCI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDBMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ANDWMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ANDI R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ANDD1N
                 	ANDI R30,LOW(@0)
                 	ANDI R31,HIGH(@0)
                 	ANDI R22,BYTE3(@0)
                 	ANDI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDD2N
                 	ANDI R26,LOW(@0)
                 	ANDI R27,HIGH(@0)
                 	ANDI R24,BYTE3(@0)
                 	ANDI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORBMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ORWMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ORI  R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ORD1N
                 	ORI  R30,LOW(@0)
                 	ORI  R31,HIGH(@0)
                 	ORI  R22,BYTE3(@0)
                 	ORI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORD2N
                 	ORI  R26,LOW(@0)
                 	ORI  R27,HIGH(@0)
                 	ORI  R24,BYTE3(@0)
                 	ORI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __DELAY_USB
                 	LDI  R24,LOW(@0)
                 __DELAY_USB_LOOP:
                 	DEC  R24
                 	BRNE __DELAY_USB_LOOP
                 	.ENDM
                 
                 	.MACRO __DELAY_USW
                 	LDI  R24,LOW(@0)
                 	LDI  R25,HIGH(@0)
                 __DELAY_USW_LOOP:
                 	SBIW R24,1
                 	BRNE __DELAY_USW_LOOP
                 	.ENDM
                 
                 	.MACRO __GETD1S
                 	LDD  R30,Y+@0
                 	LDD  R31,Y+@0+1
                 	LDD  R22,Y+@0+2
                 	LDD  R23,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __GETD2S
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	LDD  R24,Y+@0+2
                 	LDD  R25,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __PUTD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R31
                 	STD  Y+@0+2,R22
                 	STD  Y+@0+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTD2S
                 	STD  Y+@0,R26
                 	STD  Y+@0+1,R27
                 	STD  Y+@0+2,R24
                 	STD  Y+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __PUTDZ2
                 	STD  Z+@0,R26
                 	STD  Z+@0+1,R27
                 	STD  Z+@0+2,R24
                 	STD  Z+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __CLRD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R30
                 	STD  Y+@0+2,R30
                 	STD  Y+@0+3,R30
                 	.ENDM
                 
                 	.MACRO __POINTB1MN
                 	LDI  R30,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW1MN
                 	LDI  R30,LOW(@0+(@1))
                 	LDI  R31,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1M
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __POINTW1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	LDI  R22,BYTE3(2*@0+(@1))
                 	LDI  R23,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTB2MN
                 	LDI  R26,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2MN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD2M
                 	LDI  R26,LOW(@0)
                 	LDI  R27,HIGH(@0)
                 	LDI  R24,BYTE3(@0)
                 	LDI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __POINTW2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	LDI  R24,BYTE3(2*@0+(@1))
                 	LDI  R25,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTBRM
                 	LDI  R@0,LOW(@1)
                 	.ENDM
                 
                 	.MACRO __POINTWRM
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __POINTBRMN
                 	LDI  R@0,LOW(@1+(@2))
                 	.ENDM
                 
                 	.MACRO __POINTWRMN
                 	LDI  R@0,LOW(@2+(@3))
                 	LDI  R@1,HIGH(@2+(@3))
                 	.ENDM
                 
                 	.MACRO __POINTWRFN
                 	LDI  R@0,LOW(@2*2+(@3))
                 	LDI  R@1,HIGH(@2*2+(@3))
                 	.ENDM
                 
                 	.MACRO __GETD1N
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETD2N
                 	LDI  R26,LOW(@0)
                 	LDI  R27,HIGH(@0)
                 	LDI  R24,BYTE3(@0)
                 	LDI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETB1MN
                 	LDS  R30,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETB1HMN
                 	LDS  R31,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	LDS  R22,@0+(@1)+2
                 	LDS  R23,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __GETBRMN
                 	LDS  R@0,@1+(@2)
                 	.ENDM
                 
                 	.MACRO __GETWRMN
                 	LDS  R@0,@2+(@3)
                 	LDS  R@1,@2+(@3)+1
                 	.ENDM
                 
                 	.MACRO __GETWRZ
                 	LDD  R@0,Z+@2
                 	LDD  R@1,Z+@2+1
                 	.ENDM
                 
                 	.MACRO __GETD2Z
                 	LDD  R26,Z+@0
                 	LDD  R27,Z+@0+1
                 	LDD  R24,Z+@0+2
                 	LDD  R25,Z+@0+3
                 	.ENDM
                 
                 	.MACRO __GETB2MN
                 	LDS  R26,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	LDS  R24,@0+(@1)+2
                 	LDS  R25,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __PUTB1MN
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __PUTW1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	STS  @0+(@1)+2,R22
                 	STS  @0+(@1)+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRB
                 	.ENDM
                 
                 	.MACRO __PUTW1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRW
                 	.ENDM
                 
                 	.MACRO __PUTD1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRD
                 	.ENDM
                 
                 	.MACRO __PUTBR0MN
                 	STS  @0+(@1),R0
                 	.ENDM
                 
                 	.MACRO __PUTBMRN
                 	STS  @0+(@1),R@2
                 	.ENDM
                 
                 	.MACRO __PUTWMRN
                 	STS  @0+(@1),R@2
                 	STS  @0+(@1)+1,R@3
                 	.ENDM
                 
                 	.MACRO __PUTBZR
                 	STD  Z+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWZR
                 	STD  Z+@2,R@0
                 	STD  Z+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __GETW1R
                 	MOV  R30,R@0
                 	MOV  R31,R@1
                 	.ENDM
                 
                 	.MACRO __GETW2R
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	.ENDM
                 
                 	.MACRO __GETWRN
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __PUTW1R
                 	MOV  R@0,R30
                 	MOV  R@1,R31
                 	.ENDM
                 
                 	.MACRO __PUTW2R
                 	MOV  R@0,R26
                 	MOV  R@1,R27
                 	.ENDM
                 
                 	.MACRO __ADDWRN
                 	SUBI R@0,LOW(-@2)
                 	SBCI R@1,HIGH(-@2)
                 	.ENDM
                 
                 	.MACRO __ADDWRR
                 	ADD  R@0,R@2
                 	ADC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __SUBWRN
                 	SUBI R@0,LOW(@2)
                 	SBCI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __SUBWRR
                 	SUB  R@0,R@2
                 	SBC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ANDWRN
                 	ANDI R@0,LOW(@2)
                 	ANDI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ANDWRR
                 	AND  R@0,R@2
                 	AND  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ORWRN
                 	ORI  R@0,LOW(@2)
                 	ORI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ORWRR
                 	OR   R@0,R@2
                 	OR   R@1,R@3
                 	.ENDM
                 
                 	.MACRO __EORWRR
                 	EOR  R@0,R@2
                 	EOR  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __GETWRS
                 	LDD  R@0,Y+@2
                 	LDD  R@1,Y+@2+1
                 	.ENDM
                 
                 	.MACRO __PUTBSR
                 	STD  Y+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSR
                 	STD  Y+@2,R@0
                 	STD  Y+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __MOVEWRR
                 	MOV  R@0,R@2
                 	MOV  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __INWR
                 	IN   R@0,@2
                 	IN   R@1,@2+1
                 	.ENDM
                 
                 	.MACRO __OUTWR
                 	OUT  @2+1,R@1
                 	OUT  @2,R@0
                 	.ENDM
                 
                 	.MACRO __CALL1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	CALL __GETW1PF
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EN
                 	PUSH R26
                 	PUSH R27
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMRDW
                 	POP  R27
                 	POP  R26
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EX
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	CALL __EEPROMRDD
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __GETW1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __NBST
                 	BST  R@0,@1
                 	IN   R30,SREG
                 	LDI  R31,0x40
                 	EOR  R30,R31
                 	OUT  SREG,R30
                 	.ENDM
                 
                 
                 	.MACRO __PUTB1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	CALL __PUTDP1
                 	.ENDM
                 
                 
                 	.MACRO __GETB1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R30,Z
                 	.ENDM
                 
                 	.MACRO __GETB1HSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	.ENDM
                 
                 	.MACRO __GETW1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	CALL __GETW1Z
                 	.ENDM
                 
                 	.MACRO __GETD1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	CALL __GETD1Z
                 	.ENDM
                 
                 	.MACRO __GETB2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R26,X
                 	.ENDM
                 
                 	.MACRO __GETW2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	CALL __GETW2X
                 	.ENDM
                 
                 	.MACRO __GETD2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	CALL __GETD2X
                 	.ENDM
                 
                 	.MACRO __GETBRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	LD   R@0,Z
                 	.ENDM
                 
                 	.MACRO __GETWRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	LD   R@0,Z+
                 	LD   R@1,Z
                 	.ENDM
                 
                 	.MACRO __GETBRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	LD   R@0,X
                 	.ENDM
                 
                 	.MACRO __GETWRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	LD   R@0,X+
                 	LD   R@1,X
                 	.ENDM
                 
                 	.MACRO __LSLW8SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __PUTB1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __CLRW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __CLRD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTB2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z,R26
                 	.ENDM
                 
                 	.MACRO __PUTW2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z,R27
                 	.ENDM
                 
                 	.MACRO __PUTD2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z+,R27
                 	ST   Z+,R24
                 	ST   Z,R25
                 	.ENDM
                 
                 	.MACRO __PUTBSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	ST   Z,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	ST   Z+,R@0
                 	ST   Z,R@1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __MULBRR
                 	MULS R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRRU
                 	MUL  R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRR0
                 	MULS R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBRRU0
                 	MUL  R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBNWRU
                 	LDI  R26,@2
                 	MUL  R26,R@0
                 	MOVW R30,R0
                 	MUL  R26,R@1
                 	ADD  R31,R0
                 	.ENDM
                 
                 ;NAME DEFINITIONS FOR GLOBAL VARIABLES ALLOCATED TO REGISTERS
                 	.DEF _ball_x=R4
                 	.DEF _ball_x_msb=R5
                 	.DEF _ball_y=R6
                 	.DEF _ball_y_msb=R7
                 	.DEF _speed_x=R8
                 	.DEF _speed_x_msb=R9
                 	.DEF _speed_y=R10
                 	.DEF _speed_y_msb=R11
                 
                 	.CSEG
                 	.ORG 0x00
                 
                 ;START OF CODE MARKER
                 __START_OF_CODE:
                 
                 ;INTERRUPT VECTORS
000000 940c 014d 	JMP  __RESET
000002 940c 0000 	JMP  0x00
000004 940c 0000 	JMP  0x00
000006 940c 0000 	JMP  0x00
000008 940c 0000 	JMP  0x00
00000a 940c 0000 	JMP  0x00
00000c 940c 0000 	JMP  0x00
00000e 940c 0000 	JMP  0x00
000010 940c 0000 	JMP  0x00
000012 940c 0000 	JMP  0x00
000014 940c 0000 	JMP  0x00
000016 940c 0000 	JMP  0x00
000018 940c 0000 	JMP  0x00
00001a 940c 0000 	JMP  0x00
00001c 940c 0000 	JMP  0x00
00001e 940c 0000 	JMP  0x00
000020 940c 0000 	JMP  0x00
000022 940c 0000 	JMP  0x00
000024 940c 0000 	JMP  0x00
000026 940c 0000 	JMP  0x00
000028 940c 0000 	JMP  0x00
                 
                 _font5x7:
00002a 0705
00002b 6020
00002c 0000
00002d 0000      	.DB  0x5,0x7,0x20,0x60,0x0,0x0,0x0,0x0
00002e 0000
00002f 5f00
000030 0000
000031 0700      	.DB  0x0,0x0,0x0,0x5F,0x0,0x0,0x0,0x7
000032 0700
000033 1400
000034 147f
000035 147f      	.DB  0x0,0x7,0x0,0x14,0x7F,0x14,0x7F,0x14
000036 2a24
000037 2a7f
000038 2312
000039 0813      	.DB  0x24,0x2A,0x7F,0x2A,0x12,0x23,0x13,0x8
00003a 6264
00003b 4936
00003c 2255
00003d 0050      	.DB  0x64,0x62,0x36,0x49,0x55,0x22,0x50,0x0
00003e 0305
00003f 0000
000040 1c00
000041 4122      	.DB  0x5,0x3,0x0,0x0,0x0,0x1C,0x22,0x41
000042 0000
000043 2241
000044 001c
000045 2a08      	.DB  0x0,0x0,0x41,0x22,0x1C,0x0,0x8,0x2A
000046 2a1c
000047 0808
000048 3e08
000049 0808      	.DB  0x1C,0x2A,0x8,0x8,0x8,0x3E,0x8,0x8
00004a 5000
00004b 0030
00004c 0800
00004d 0808      	.DB  0x0,0x50,0x30,0x0,0x0,0x8,0x8,0x8
00004e 0808
00004f 3000
000050 0030
000051 2000      	.DB  0x8,0x8,0x0,0x30,0x30,0x0,0x0,0x20
000052 0810
000053 0204
000054 513e
000055 4549      	.DB  0x10,0x8,0x4,0x2,0x3E,0x51,0x49,0x45
000056 003e
000057 7f42
000058 0040
000059 6142      	.DB  0x3E,0x0,0x42,0x7F,0x40,0x0,0x42,0x61
00005a 4951
00005b 2146
00005c 4541
00005d 314b      	.DB  0x51,0x49,0x46,0x21,0x41,0x45,0x4B,0x31
00005e 1418
00005f 7f12
000060 2710
000061 4545      	.DB  0x18,0x14,0x12,0x7F,0x10,0x27,0x45,0x45
000062 3945
000063 4a3c
000064 4949
000065 0130      	.DB  0x45,0x39,0x3C,0x4A,0x49,0x49,0x30,0x1
000066 0971
000067 0305
000068 4936
000069 4949      	.DB  0x71,0x9,0x5,0x3,0x36,0x49,0x49,0x49
00006a 0636
00006b 4949
00006c 1e29
00006d 3600      	.DB  0x36,0x6,0x49,0x49,0x29,0x1E,0x0,0x36
00006e 0036
00006f 0000
000070 3656
000071 0000      	.DB  0x36,0x0,0x0,0x0,0x56,0x36,0x0,0x0
000072 0800
000073 2214
000074 1441
000075 1414      	.DB  0x0,0x8,0x14,0x22,0x41,0x14,0x14,0x14
000076 1414
000077 2241
000078 0814
000079 0200      	.DB  0x14,0x14,0x41,0x22,0x14,0x8,0x0,0x2
00007a 5101
00007b 0609
00007c 4932
00007d 4179      	.DB  0x1,0x51,0x9,0x6,0x32,0x49,0x79,0x41
00007e 7e3e
00007f 1111
000080 7e11
000081 497f      	.DB  0x3E,0x7E,0x11,0x11,0x11,0x7E,0x7F,0x49
000082 4949
000083 3e36
000084 4141
000085 2241      	.DB  0x49,0x49,0x36,0x3E,0x41,0x41,0x41,0x22
000086 417f
000087 2241
000088 7f1c
000089 4949      	.DB  0x7F,0x41,0x41,0x22,0x1C,0x7F,0x49,0x49
00008a 4149
00008b 097f
00008c 0109
00008d 3e01      	.DB  0x49,0x41,0x7F,0x9,0x9,0x1,0x1,0x3E
00008e 4141
00008f 3251
000090 087f
000091 0808      	.DB  0x41,0x41,0x51,0x32,0x7F,0x8,0x8,0x8
000092 007f
000093 7f41
000094 0041
000095 4020      	.DB  0x7F,0x0,0x41,0x7F,0x41,0x0,0x20,0x40
000096 3f41
000097 7f01
000098 1408
000099 4122      	.DB  0x41,0x3F,0x1,0x7F,0x8,0x14,0x22,0x41
00009a 407f
00009b 4040
00009c 7f40
00009d 0402      	.DB  0x7F,0x40,0x40,0x40,0x40,0x7F,0x2,0x4
00009e 7f02
00009f 047f
0000a0 1008
0000a1 3e7f      	.DB  0x2,0x7F,0x7F,0x4,0x8,0x10,0x7F,0x3E
0000a2 4141
0000a3 3e41
0000a4 097f
0000a5 0909      	.DB  0x41,0x41,0x41,0x3E,0x7F,0x9,0x9,0x9
0000a6 3e06
0000a7 5141
0000a8 5e21
0000a9 097f      	.DB  0x6,0x3E,0x41,0x51,0x21,0x5E,0x7F,0x9
0000aa 2919
0000ab 4646
0000ac 4949
0000ad 3149      	.DB  0x19,0x29,0x46,0x46,0x49,0x49,0x49,0x31
0000ae 0101
0000af 017f
0000b0 3f01
0000b1 4040      	.DB  0x1,0x1,0x7F,0x1,0x1,0x3F,0x40,0x40
0000b2 3f40
0000b3 201f
0000b4 2040
0000b5 7f1f      	.DB  0x40,0x3F,0x1F,0x20,0x40,0x20,0x1F,0x7F
0000b6 1820
0000b7 7f20
0000b8 1463
0000b9 1408      	.DB  0x20,0x18,0x20,0x7F,0x63,0x14,0x8,0x14
0000ba 0363
0000bb 7804
0000bc 0304
0000bd 5161      	.DB  0x63,0x3,0x4,0x78,0x4,0x3,0x61,0x51
0000be 4549
0000bf 0043
0000c0 7f00
0000c1 4141      	.DB  0x49,0x45,0x43,0x0,0x0,0x7F,0x41,0x41
0000c2 0402
0000c3 1008
0000c4 4120
0000c5 7f41      	.DB  0x2,0x4,0x8,0x10,0x20,0x41,0x41,0x7F
0000c6 0000
0000c7 0204
0000c8 0201
0000c9 4004      	.DB  0x0,0x0,0x4,0x2,0x1,0x2,0x4,0x40
0000ca 4040
0000cb 4040
0000cc 0100
0000cd 0402      	.DB  0x40,0x40,0x40,0x40,0x0,0x1,0x2,0x4
0000ce 2000
0000cf 5454
0000d0 7854
0000d1 487f      	.DB  0x0,0x20,0x54,0x54,0x54,0x78,0x7F,0x48
0000d2 4444
0000d3 3838
0000d4 4444
0000d5 2044      	.DB  0x44,0x44,0x38,0x38,0x44,0x44,0x44,0x20
0000d6 4438
0000d7 4844
0000d8 387f
0000d9 5454      	.DB  0x38,0x44,0x44,0x48,0x7F,0x38,0x54,0x54
0000da 1854
0000db 7e08
0000dc 0109
0000dd 0802      	.DB  0x54,0x18,0x8,0x7E,0x9,0x1,0x2,0x8
0000de 5414
0000df 3c54
0000e0 087f
0000e1 0404      	.DB  0x14,0x54,0x54,0x3C,0x7F,0x8,0x4,0x4
0000e2 0078
0000e3 7d44
0000e4 0040
0000e5 4020      	.DB  0x78,0x0,0x44,0x7D,0x40,0x0,0x20,0x40
0000e6 3d44
0000e7 0000
0000e8 107f
0000e9 4428      	.DB  0x44,0x3D,0x0,0x0,0x7F,0x10,0x28,0x44
0000ea 4100
0000eb 407f
0000ec 7c00
0000ed 1804      	.DB  0x0,0x41,0x7F,0x40,0x0,0x7C,0x4,0x18
0000ee 7804
0000ef 087c
0000f0 0404
0000f1 3878      	.DB  0x4,0x78,0x7C,0x8,0x4,0x4,0x78,0x38
0000f2 4444
0000f3 3844
0000f4 147c
0000f5 1414      	.DB  0x44,0x44,0x44,0x38,0x7C,0x14,0x14,0x14
0000f6 0808
0000f7 1414
0000f8 7c18
0000f9 087c      	.DB  0x8,0x8,0x14,0x14,0x18,0x7C,0x7C,0x8
0000fa 0404
0000fb 4808
0000fc 5454
0000fd 2054      	.DB  0x4,0x4,0x8,0x48,0x54,0x54,0x54,0x20
0000fe 3f04
0000ff 4044
000100 3c20
000101 4040      	.DB  0x4,0x3F,0x44,0x40,0x20,0x3C,0x40,0x40
000102 7c20
000103 201c
000104 2040
000105 3c1c      	.DB  0x20,0x7C,0x1C,0x20,0x40,0x20,0x1C,0x3C
000106 3040
000107 3c40
000108 2844
000109 2810      	.DB  0x40,0x30,0x40,0x3C,0x44,0x28,0x10,0x28
00010a 0c44
00010b 5050
00010c 3c50
00010d 6444      	.DB  0x44,0xC,0x50,0x50,0x50,0x3C,0x44,0x64
00010e 4c54
00010f 0044
000110 3608
000111 0041      	.DB  0x54,0x4C,0x44,0x0,0x8,0x36,0x41,0x0
000112 0000
000113 007f
000114 0000
000115 3641      	.DB  0x0,0x0,0x7F,0x0,0x0,0x0,0x41,0x36
000116 0008
000117 0102
000118 0402
000119 7f02      	.DB  0x8,0x0,0x2,0x1,0x2,0x4,0x2,0x7F
00011a 4141
00011b 7f41      	.DB  0x41,0x41,0x41,0x7F
                 __glcd_mask:
00011c 0100
00011d 0703
00011e 1f0f
00011f 7f3f      	.DB  0x0,0x1,0x3,0x7,0xF,0x1F,0x3F,0x7F
E:\University\Term 6\Micro\ex-12\ex-12\Debug\List\ex-12.asm(1185): warning: .cseg .db misalignment - padding zero byte
000120 00ff      	.DB  0xFF
                 _tbl10_G105:
000121 2710
000122 03e8
000123 0064
000124 000a      	.DB  0x10,0x27,0xE8,0x3,0x64,0x0,0xA,0x0
000125 0001      	.DB  0x1,0x0
                 _tbl16_G105:
000126 1000
000127 0100
000128 0010
000129 0001      	.DB  0x0,0x10,0x0,0x1,0x10,0x0,0x1,0x0
                 
                 ;GLOBAL REGISTER VARIABLES INITIALIZATION
                 __REG_VARS:
00012a 0040
00012b 0020      	.DB  0x40,0x0,0x20,0x0
00012c 0001
00012d 0001      	.DB  0x1,0x0,0x1,0x0
                 
                 _0x0:
00012e 6c41
00012f 2069
000130 6853
000131 6b6f      	.DB  0x41,0x6C,0x69,0x20,0x53,0x68,0x6F,0x6B
000132 6f6f
000133 6968
000134 3400
000135 3030      	.DB  0x6F,0x6F,0x68,0x69,0x0,0x34,0x30,0x30
000136 3235
000137 3431
000138 3737
E:\University\Term 6\Micro\ex-12\ex-12\Debug\List\ex-12.asm(1200): warning: .cseg .db misalignment - padding zero byte
000139 0000      	.DB  0x35,0x32,0x31,0x34,0x37,0x37,0x0
                 _0x2100060:
E:\University\Term 6\Micro\ex-12\ex-12\Debug\List\ex-12.asm(1202): warning: .cseg .db misalignment - padding zero byte
00013a 0001      	.DB  0x1
                 _0x2100000:
00013b 4e2d
00013c 4e41
00013d 4900
00013e 464e      	.DB  0x2D,0x4E,0x41,0x4E,0x0,0x49,0x4E,0x46
E:\University\Term 6\Micro\ex-12\ex-12\Debug\List\ex-12.asm(1205): warning: .cseg .db misalignment - padding zero byte
00013f 0000      	.DB  0x0
                 
                 __GLOBAL_INI_TBL:
000140 0008      	.DW  0x08
000141 0004      	.DW  0x04
000142 0254      	.DW  __REG_VARS*2
                 
000143 000d      	.DW  0x0D
000144 0260      	.DW  _0x3
000145 025c      	.DW  _0x0*2
                 
000146 000a      	.DW  0x0A
000147 026d      	.DW  _0x3+13
000148 0269      	.DW  _0x0*2+13
                 
000149 0001      	.DW  0x01
00014a 0297      	.DW  __seed_G108
00014b 0274      	.DW  _0x2100060*2
                 
                 _0xFFFFFFFF:
00014c 0000      	.DW  0
                 
                 #define __GLOBAL_INI_TBL_PRESENT 1
                 
                 __RESET:
00014d 94f8      	CLI
00014e 27ee      	CLR  R30
00014f bbec      	OUT  EECR,R30
                 
                 ;INTERRUPT VECTORS ARE PLACED
                 ;AT THE START OF FLASH
000150 e0f1      	LDI  R31,1
000151 bffb      	OUT  GICR,R31
000152 bfeb      	OUT  GICR,R30
000153 bfe5      	OUT  MCUCR,R30
                 
                 ;CLEAR R2-R14
000154 e08d      	LDI  R24,(14-2)+1
000155 e0a2      	LDI  R26,2
000156 27bb      	CLR  R27
                 __CLEAR_REG:
000157 93ed      	ST   X+,R30
000158 958a      	DEC  R24
000159 f7e9      	BRNE __CLEAR_REG
                 
                 ;CLEAR SRAM
00015a e080      	LDI  R24,LOW(__CLEAR_SRAM_SIZE)
00015b e098      	LDI  R25,HIGH(__CLEAR_SRAM_SIZE)
00015c e6a0      	LDI  R26,__SRAM_START
                 __CLEAR_SRAM:
00015d 93ed      	ST   X+,R30
00015e 9701      	SBIW R24,1
00015f f7e9      	BRNE __CLEAR_SRAM
                 
                 ;GLOBAL VARIABLES INITIALIZATION
000160 e8e0      	LDI  R30,LOW(__GLOBAL_INI_TBL*2)
000161 e0f2      	LDI  R31,HIGH(__GLOBAL_INI_TBL*2)
                 __GLOBAL_INI_NEXT:
000162 9185      	LPM  R24,Z+
000163 9195      	LPM  R25,Z+
000164 9700      	SBIW R24,0
000165 f061      	BREQ __GLOBAL_INI_END
000166 91a5      	LPM  R26,Z+
000167 91b5      	LPM  R27,Z+
000168 9005      	LPM  R0,Z+
000169 9015      	LPM  R1,Z+
00016a 01bf      	MOVW R22,R30
00016b 01f0      	MOVW R30,R0
                 __GLOBAL_INI_LOOP:
00016c 9005      	LPM  R0,Z+
00016d 920d      	ST   X+,R0
00016e 9701      	SBIW R24,1
00016f f7e1      	BRNE __GLOBAL_INI_LOOP
000170 01fb      	MOVW R30,R22
000171 cff0      	RJMP __GLOBAL_INI_NEXT
                 __GLOBAL_INI_END:
                 
                 ;HARDWARE STACK POINTER INITIALIZATION
000172 e5ef      	LDI  R30,LOW(__SRAM_END-__HEAP_SIZE)
000173 bfed      	OUT  SPL,R30
000174 e0e8      	LDI  R30,HIGH(__SRAM_END-__HEAP_SIZE)
000175 bfee      	OUT  SPH,R30
                 
                 ;DATA STACK POINTER INITIALIZATION
000176 e6c0      	LDI  R28,LOW(__SRAM_START+__DSTACK_SIZE)
000177 e0d2      	LDI  R29,HIGH(__SRAM_START+__DSTACK_SIZE)
                 
000178 940c 017a 	JMP  _main
                 
                 	.ESEG
                 	.ORG 0x00
                 
                 	.DSEG
                 	.ORG 0x260
                 
                 	.CSEG
                 	#ifndef __SLEEP_DEFINED__
                 	#define __SLEEP_DEFINED__
                 	.EQU __se_bit=0x80
                 	.EQU __sm_mask=0x70
                 	.EQU __sm_powerdown=0x20
                 	.EQU __sm_powersave=0x30
                 	.EQU __sm_standby=0x60
                 	.EQU __sm_ext_standby=0x70
                 	.EQU __sm_adc_noise_red=0x10
                 	.SET power_ctrl_reg=mcucr
                 	#endif
                 ;int ball_x = 64;
                 ;int ball_y = 32;
                 ;int speed_x = 1;
                 ;int speed_y = 1;
                 ;void main(void)
                 ; 0000 0028 {
                 
                 	.CSEG
                 _main:
                 ; .FSTART _main
                 ; 0000 0029 // Declare your local variables here
                 ; 0000 002A // Variable used to store graphic display
                 ; 0000 002B // controller initialization data
                 ; 0000 002C GLCDINIT_t glcd_init_data;
                 ; 0000 002D 
                 ; 0000 002E // Input/Output Ports initialization
                 ; 0000 002F // Port A initialization
                 ; 0000 0030 // Function: Bit7=Out Bit6=Out Bit5=Out Bit4=Out Bit3=Out Bit2=Out Bit1=Out Bit0 ...
                 ; 0000 0031 DDRA=(1<<DDA7) | (1<<DDA6) | (1<<DDA5) | (1<<DDA4) | (1<<DDA3) | (1<<DDA2) | (1< ...
00017a 9726      	SBIW R28,6
                 ;	glcd_init_data -> Y+0
00017b efef      	LDI  R30,LOW(255)
00017c bbea      	OUT  0x1A,R30
                 ; 0000 0032 // State: Bit7=0 Bit6=0 Bit5=0 Bit4=0 Bit3=0 Bit2=0 Bit1=0 Bit0=0
                 ; 0000 0033 PORTA=(0<<PORTA7) | (0<<PORTA6) | (0<<PORTA5) | (0<<PORTA4) | (0<<PORTA3) | (0<< ...
00017d e0e0      	LDI  R30,LOW(0)
00017e bbeb      	OUT  0x1B,R30
                 ; 0000 0034 
                 ; 0000 0035 // Port B initialization
                 ; 0000 0036 // Function: Bit7=Out Bit6=Out Bit5=Out Bit4=Out Bit3=Out Bit2=Out Bit1=Out Bit0 ...
                 ; 0000 0037 DDRB=(1<<DDB7) | (1<<DDB6) | (1<<DDB5) | (1<<DDB4) | (1<<DDB3) | (1<<DDB2) | (1< ...
00017f efef      	LDI  R30,LOW(255)
000180 bbe7      	OUT  0x17,R30
                 ; 0000 0038 // State: Bit7=0 Bit6=0 Bit5=0 Bit4=0 Bit3=0 Bit2=0 Bit1=0 Bit0=0
                 ; 0000 0039 PORTB=(0<<PORTB7) | (0<<PORTB6) | (0<<PORTB5) | (0<<PORTB4) | (0<<PORTB3) | (0<< ...
000181 e0e0      	LDI  R30,LOW(0)
000182 bbe8      	OUT  0x18,R30
                 ; 0000 003A 
                 ; 0000 003B // Port C initialization
                 ; 0000 003C // Function: Bit7=In Bit6=In Bit5=In Bit4=In Bit3=In Bit2=In Bit1=In Bit0=In
                 ; 0000 003D DDRC=(0<<DDC7) | (0<<DDC6) | (0<<DDC5) | (0<<DDC4) | (0<<DDC3) | (0<<DDC2) | (0< ...
000183 bbe4      	OUT  0x14,R30
                 ; 0000 003E // State: Bit7=T Bit6=T Bit5=T Bit4=T Bit3=T Bit2=T Bit1=T Bit0=T
                 ; 0000 003F PORTC=(0<<PORTC7) | (0<<PORTC6) | (0<<PORTC5) | (0<<PORTC4) | (0<<PORTC3) | (0<< ...
000184 bbe5      	OUT  0x15,R30
                 ; 0000 0040 
                 ; 0000 0041 // Port D initialization
                 ; 0000 0042 // Function: Bit7=In Bit6=In Bit5=In Bit4=In Bit3=In Bit2=In Bit1=In Bit0=In
                 ; 0000 0043 DDRD=(0<<DDD7) | (0<<DDD6) | (0<<DDD5) | (0<<DDD4) | (0<<DDD3) | (0<<DDD2) | (0< ...
000185 bbe1      	OUT  0x11,R30
                 ; 0000 0044 // State: Bit7=T Bit6=T Bit5=T Bit4=T Bit3=T Bit2=T Bit1=T Bit0=T
                 ; 0000 0045 PORTD=(0<<PORTD7) | (0<<PORTD6) | (0<<PORTD5) | (0<<PORTD4) | (0<<PORTD3) | (0<< ...
000186 bbe2      	OUT  0x12,R30
                 ; 0000 0046 
                 ; 0000 0047 // Timer/Counter 0 initialization
                 ; 0000 0048 // Clock source: System Clock
                 ; 0000 0049 // Clock value: Timer 0 Stopped
                 ; 0000 004A // Mode: Normal top=0xFF
                 ; 0000 004B // OC0 output: Disconnected
                 ; 0000 004C TCCR0=(0<<WGM00) | (0<<COM01) | (0<<COM00) | (0<<WGM01) | (0<<CS02) | (0<<CS01)  ...
000187 bfe3      	OUT  0x33,R30
                 ; 0000 004D TCNT0=0x00;
000188 bfe2      	OUT  0x32,R30
                 ; 0000 004E OCR0=0x00;
000189 bfec      	OUT  0x3C,R30
                 ; 0000 004F 
                 ; 0000 0050 // Timer/Counter 1 initialization
                 ; 0000 0051 // Clock source: System Clock
                 ; 0000 0052 // Clock value: Timer1 Stopped
                 ; 0000 0053 // Mode: Normal top=0xFFFF
                 ; 0000 0054 // OC1A output: Disconnected
                 ; 0000 0055 // OC1B output: Disconnected
                 ; 0000 0056 // Noise Canceler: Off
                 ; 0000 0057 // Input Capture on Falling Edge
                 ; 0000 0058 // Timer1 Overflow Interrupt: Off
                 ; 0000 0059 // Input Capture Interrupt: Off
                 ; 0000 005A // Compare A Match Interrupt: Off
                 ; 0000 005B // Compare B Match Interrupt: Off
                 ; 0000 005C TCCR1A=(0<<COM1A1) | (0<<COM1A0) | (0<<COM1B1) | (0<<COM1B0) | (0<<WGM11) | (0<< ...
00018a bdef      	OUT  0x2F,R30
                 ; 0000 005D TCCR1B=(0<<ICNC1) | (0<<ICES1) | (0<<WGM13) | (0<<WGM12) | (0<<CS12) | (0<<CS11) ...
00018b bdee      	OUT  0x2E,R30
                 ; 0000 005E TCNT1H=0x00;
00018c bded      	OUT  0x2D,R30
                 ; 0000 005F TCNT1L=0x00;
00018d bdec      	OUT  0x2C,R30
                 ; 0000 0060 ICR1H=0x00;
00018e bde7      	OUT  0x27,R30
                 ; 0000 0061 ICR1L=0x00;
00018f bde6      	OUT  0x26,R30
                 ; 0000 0062 OCR1AH=0x00;
000190 bdeb      	OUT  0x2B,R30
                 ; 0000 0063 OCR1AL=0x00;
000191 bdea      	OUT  0x2A,R30
                 ; 0000 0064 OCR1BH=0x00;
000192 bde9      	OUT  0x29,R30
                 ; 0000 0065 OCR1BL=0x00;
000193 bde8      	OUT  0x28,R30
                 ; 0000 0066 
                 ; 0000 0067 // Timer/Counter 2 initialization
                 ; 0000 0068 // Clock source: System Clock
                 ; 0000 0069 // Clock value: Timer2 Stopped
                 ; 0000 006A // Mode: Normal top=0xFF
                 ; 0000 006B // OC2 output: Disconnected
                 ; 0000 006C ASSR=0<<AS2;
000194 bde2      	OUT  0x22,R30
                 ; 0000 006D TCCR2=(0<<PWM2) | (0<<COM21) | (0<<COM20) | (0<<CTC2) | (0<<CS22) | (0<<CS21) |  ...
000195 bde5      	OUT  0x25,R30
                 ; 0000 006E TCNT2=0x00;
000196 bde4      	OUT  0x24,R30
                 ; 0000 006F OCR2=0x00;
000197 bde3      	OUT  0x23,R30
                 ; 0000 0070 
                 ; 0000 0071 // Timer(s)/Counter(s) Interrupt(s) initialization
                 ; 0000 0072 TIMSK=(0<<OCIE2) | (0<<TOIE2) | (0<<TICIE1) | (0<<OCIE1A) | (0<<OCIE1B) | (0<<TO ...
000198 bfe9      	OUT  0x39,R30
                 ; 0000 0073 
                 ; 0000 0074 // External Interrupt(s) initialization
                 ; 0000 0075 // INT0: Off
                 ; 0000 0076 // INT1: Off
                 ; 0000 0077 // INT2: Off
                 ; 0000 0078 MCUCR=(0<<ISC11) | (0<<ISC10) | (0<<ISC01) | (0<<ISC00);
000199 bfe5      	OUT  0x35,R30
                 ; 0000 0079 MCUCSR=(0<<ISC2);
00019a bfe4      	OUT  0x34,R30
                 ; 0000 007A 
                 ; 0000 007B // USART initialization
                 ; 0000 007C // USART disabled
                 ; 0000 007D UCSRB=(0<<RXCIE) | (0<<TXCIE) | (0<<UDRIE) | (0<<RXEN) | (0<<TXEN) | (0<<UCSZ2)  ...
00019b b9ea      	OUT  0xA,R30
                 ; 0000 007E 
                 ; 0000 007F // Analog Comparator initialization
                 ; 0000 0080 // Analog Comparator: Off
                 ; 0000 0081 // The Analog Comparator's positive input is
                 ; 0000 0082 // connected to the AIN0 pin
                 ; 0000 0083 // The Analog Comparator's negative input is
                 ; 0000 0084 // connected to the AIN1 pin
                 ; 0000 0085 ACSR=(1<<ACD) | (0<<ACBG) | (0<<ACO) | (0<<ACI) | (0<<ACIE) | (0<<ACIC) | (0<<AC ...
00019c e8e0      	LDI  R30,LOW(128)
00019d b9e8      	OUT  0x8,R30
                 ; 0000 0086 SFIOR=(0<<ACME);
00019e e0e0      	LDI  R30,LOW(0)
00019f bfe0      	OUT  0x30,R30
                 ; 0000 0087 
                 ; 0000 0088 // ADC initialization
                 ; 0000 0089 // ADC disabled
                 ; 0000 008A ADCSRA=(0<<ADEN) | (0<<ADSC) | (0<<ADATE) | (0<<ADIF) | (0<<ADIE) | (0<<ADPS2) | ...
0001a0 b9e6      	OUT  0x6,R30
                 ; 0000 008B 
                 ; 0000 008C // SPI initialization
                 ; 0000 008D // SPI disabled
                 ; 0000 008E SPCR=(0<<SPIE) | (0<<SPE) | (0<<DORD) | (0<<MSTR) | (0<<CPOL) | (0<<CPHA) | (0<< ...
0001a1 b9ed      	OUT  0xD,R30
                 ; 0000 008F 
                 ; 0000 0090 // TWI initialization
                 ; 0000 0091 // TWI disabled
                 ; 0000 0092 TWCR=(0<<TWEA) | (0<<TWSTA) | (0<<TWSTO) | (0<<TWEN) | (0<<TWIE);
0001a2 bfe6      	OUT  0x36,R30
                 ; 0000 0093 
                 ; 0000 0094 // Graphic Display Controller initialization
                 ; 0000 0095 // The KS0108 connections are specified in the
                 ; 0000 0096 // Project|Configure|C Compiler|Libraries|Graphic Display menu:
                 ; 0000 0097 // DB0 - PORTA Bit 0
                 ; 0000 0098 // DB1 - PORTA Bit 1
                 ; 0000 0099 // DB2 - PORTA Bit 2
                 ; 0000 009A // DB3 - PORTA Bit 3
                 ; 0000 009B // DB4 - PORTA Bit 4
                 ; 0000 009C // DB5 - PORTA Bit 5
                 ; 0000 009D // DB6 - PORTA Bit 6
                 ; 0000 009E // DB7 - PORTA Bit 7
                 ; 0000 009F // E - PORTB Bit 0
                 ; 0000 00A0 // RD /WR - PORTB Bit 1
                 ; 0000 00A1 // RS - PORTB Bit 2
                 ; 0000 00A2 // /RST - PORTB Bit 3
                 ; 0000 00A3 // CS1 - PORTB Bit 4
                 ; 0000 00A4 // CS2 - PORTB Bit 5
                 ; 0000 00A5 
                 ; 0000 00A6 // Specify the current font for displaying text
                 ; 0000 00A7 glcd_init_data.font=font5x7;
0001a3 e5e4      	LDI  R30,LOW(_font5x7*2)
0001a4 e0f0      	LDI  R31,HIGH(_font5x7*2)
0001a5 83e8      	ST   Y,R30
0001a6 83f9      	STD  Y+1,R31
                 ; 0000 00A8 // No function is used for reading
                 ; 0000 00A9 // image data from external memory
                 ; 0000 00AA glcd_init_data.readxmem=NULL;
0001a7 e0e0      	LDI  R30,LOW(0)
0001a8 83ea      	STD  Y+2,R30
0001a9 83eb      	STD  Y+2+1,R30
                 ; 0000 00AB // No function is used for writing
                 ; 0000 00AC // image data to external memory
                 ; 0000 00AD glcd_init_data.writexmem=NULL;
0001aa 83ec      	STD  Y+4,R30
0001ab 83ed      	STD  Y+4+1,R30
                 ; 0000 00AE 
                 ; 0000 00AF glcd_init(&glcd_init_data);
0001ac 01de      	MOVW R26,R28
0001ad d114      	RCALL _glcd_init
                 ; 0000 00B0 
                 ; 0000 00B1 
                 ; 0000 00B2 glcd_clear();
0001ae d175      	RCALL _glcd_clear
                 ; 0000 00B3 delay_ms(50);
0001af e3a2      	LDI  R26,LOW(50)
0001b0 e0b0      	LDI  R27,0
0001b1 940e 0bcc 	CALL _delay_ms
                 ; 0000 00B4 glcd_outtext("Ali Shokoohi");
                +
0001b3 e6a0     +LDI R26 , LOW ( _0x3 + ( 0 ) )
0001b4 e0b2     +LDI R27 , HIGH ( _0x3 + ( 0 ) )
                 	__POINTW2MN _0x3,0
0001b5 940e 06b7 	CALL _glcd_outtext
                 ; 0000 00B5 glcd_moveto(0, 55);
0001b7 e0e0      	LDI  R30,LOW(0)
0001b8 93ea      	ST   -Y,R30
0001b9 e3a7      	LDI  R26,LOW(55)
0001ba 940e 06dc 	CALL _glcd_moveto
                 ; 0000 00B6 glcd_outtext("400521477");
                +
0001bc e6ad     +LDI R26 , LOW ( _0x3 + ( 13 ) )
0001bd e0b2     +LDI R27 , HIGH ( _0x3 + ( 13 ) )
                 	__POINTW2MN _0x3,13
0001be 940e 06b7 	CALL _glcd_outtext
                 ; 0000 00B7 
                 ; 0000 00B8 
                 ; 0000 00B9 delay_ms(1500);
0001c0 940e 0a4e 	CALL SUBOPT_0x0
                 ; 0000 00BA glcd_clear();
                 ; 0000 00BB glcd_line(20, 5, 44, 5);
0001c2 e1e4      	LDI  R30,LOW(20)
0001c3 93ea      	ST   -Y,R30
0001c4 e0e5      	LDI  R30,LOW(5)
0001c5 93ea      	ST   -Y,R30
0001c6 e2ec      	LDI  R30,LOW(44)
0001c7 93ea      	ST   -Y,R30
0001c8 e0a5      	LDI  R26,LOW(5)
0001c9 940e 06ea 	CALL _glcd_line
                 ; 0000 00BC glcd_line(44, 5, 44, 10);
0001cb e2ec      	LDI  R30,LOW(44)
0001cc 93ea      	ST   -Y,R30
0001cd e0e5      	LDI  R30,LOW(5)
0001ce 940e 0a54 	CALL SUBOPT_0x1
                 ; 0000 00BD glcd_line(20, 5, 20, 10);
0001d0 e0e5      	LDI  R30,LOW(5)
0001d1 93ea      	ST   -Y,R30
0001d2 e1e4      	LDI  R30,LOW(20)
0001d3 940e 0a5d 	CALL SUBOPT_0x2
                 ; 0000 00BE glcd_line(38, 10, 44, 10);
0001d5 940e 0a54 	CALL SUBOPT_0x1
                 ; 0000 00BF glcd_line(20, 10, 24, 10);
0001d7 e0ea      	LDI  R30,LOW(10)
0001d8 93ea      	ST   -Y,R30
0001d9 e1e8      	LDI  R30,LOW(24)
0001da 940e 0a5d 	CALL SUBOPT_0x2
                 ; 0000 00C0 glcd_line(38, 10, 38, 16);
0001dc 93ea      	ST   -Y,R30
0001dd e2e6      	LDI  R30,LOW(38)
0001de 93ea      	ST   -Y,R30
0001df e1a0      	LDI  R26,LOW(16)
0001e0 940e 06ea 	CALL _glcd_line
                 ; 0000 00C1 glcd_line(38, 16, 64, 4);
0001e2 e2e6      	LDI  R30,LOW(38)
0001e3 93ea      	ST   -Y,R30
0001e4 e1e0      	LDI  R30,LOW(16)
0001e5 940e 0a65 	CALL SUBOPT_0x3
                 ; 0000 00C2 glcd_line(125, 32, 64, 4);
0001e7 940e 0a65 	CALL SUBOPT_0x3
                 ; 0000 00C3 glcd_line(125, 32, 105, 32);
0001e9 93ea      	ST   -Y,R30
0001ea e6e9      	LDI  R30,LOW(105)
0001eb 93ea      	ST   -Y,R30
0001ec e2a0      	LDI  R26,LOW(32)
0001ed 940e 06ea 	CALL _glcd_line
                 ; 0000 00C4 glcd_line(105, 32, 105, 61);
0001ef e6e9      	LDI  R30,LOW(105)
0001f0 93ea      	ST   -Y,R30
0001f1 e2e0      	LDI  R30,LOW(32)
0001f2 93ea      	ST   -Y,R30
0001f3 e6e9      	LDI  R30,LOW(105)
0001f4 93ea      	ST   -Y,R30
0001f5 e3ad      	LDI  R26,LOW(61)
0001f6 940e 06ea 	CALL _glcd_line
                 ; 0000 00C5 glcd_line(105, 61, 23, 61);
0001f8 e6e9      	LDI  R30,LOW(105)
0001f9 93ea      	ST   -Y,R30
0001fa e3ed      	LDI  R30,LOW(61)
0001fb 93ea      	ST   -Y,R30
0001fc e1e7      	LDI  R30,LOW(23)
0001fd 93ea      	ST   -Y,R30
0001fe e3ad      	LDI  R26,LOW(61)
0001ff 940e 06ea 	CALL _glcd_line
                 ; 0000 00C6 glcd_line(23, 61, 23, 33);
000201 e1e7      	LDI  R30,LOW(23)
000202 93ea      	ST   -Y,R30
000203 e3ed      	LDI  R30,LOW(61)
000204 940e 0a6f 	CALL SUBOPT_0x4
                 ; 0000 00C7 glcd_line(4, 33, 23, 33);
000206 940e 0a6f 	CALL SUBOPT_0x4
                 ; 0000 00C8 glcd_line(4, 33, 24, 23);
000208 940e 0a79 	CALL SUBOPT_0x5
                 ; 0000 00C9 glcd_line(24, 10, 24, 23);
00020a e1e8      	LDI  R30,LOW(24)
00020b 93ea      	ST   -Y,R30
00020c e0ea      	LDI  R30,LOW(10)
00020d 940e 0a79 	CALL SUBOPT_0x5
                 ; 0000 00CA delay_ms(1500);
00020f 940e 0a4e 	CALL SUBOPT_0x0
                 ; 0000 00CB glcd_clear();
                 ; 0000 00CC while (1){
                 _0x4:
                 ; 0000 00CD // Place your code here
                 ; 0000 00CE glcd_circle(ball_x, ball_y, 5);
000211 924a      	ST   -Y,R4
000212 926a      	ST   -Y,R6
000213 e0a5      	LDI  R26,LOW(5)
000214 940e 09c1 	CALL _glcd_circle
                 ; 0000 00CF ball_x += speed_x;
                +
000216 0c48     +ADD R4 , R8
000217 1c59     +ADC R5 , R9
                 	__ADDWRR 4,5,8,9
                 ; 0000 00D0 ball_y += speed_y;
                +
000218 0c6a     +ADD R6 , R10
000219 1c7b     +ADC R7 , R11
                 	__ADDWRR 6,7,10,11
                 ; 0000 00D1 if (ball_x == 127 - 5) {
00021a e7ea      	LDI  R30,LOW(122)
00021b e0f0      	LDI  R31,HIGH(122)
00021c 15e4      	CP   R30,R4
00021d 05f5      	CPC  R31,R5
00021e f419      	BRNE _0x7
                 ; 0000 00D2 speed_x = -1;
00021f efef      	LDI  R30,LOW(65535)
000220 efff      	LDI  R31,HIGH(65535)
000221 014f      	MOVW R8,R30
                 ; 0000 00D3 }
                 ; 0000 00D4 if (ball_y == 63 - 5) {
                 _0x7:
000222 e3ea      	LDI  R30,LOW(58)
000223 e0f0      	LDI  R31,HIGH(58)
000224 15e6      	CP   R30,R6
000225 05f7      	CPC  R31,R7
000226 f419      	BRNE _0x8
                 ; 0000 00D5 speed_y = -1;
000227 efef      	LDI  R30,LOW(65535)
000228 efff      	LDI  R31,HIGH(65535)
000229 015f      	MOVW R10,R30
                 ; 0000 00D6 }
                 ; 0000 00D7 if (ball_x == 5) {
                 _0x8:
00022a e0e5      	LDI  R30,LOW(5)
00022b e0f0      	LDI  R31,HIGH(5)
00022c 15e4      	CP   R30,R4
00022d 05f5      	CPC  R31,R5
00022e f419      	BRNE _0x9
                 ; 0000 00D8 speed_x = 1;
00022f e0e1      	LDI  R30,LOW(1)
000230 e0f0      	LDI  R31,HIGH(1)
000231 014f      	MOVW R8,R30
                 ; 0000 00D9 }
                 ; 0000 00DA if (ball_y == 5) {
                 _0x9:
000232 e0e5      	LDI  R30,LOW(5)
000233 e0f0      	LDI  R31,HIGH(5)
000234 15e6      	CP   R30,R6
000235 05f7      	CPC  R31,R7
000236 f419      	BRNE _0xA
                 ; 0000 00DB speed_y = 1;
000237 e0e1      	LDI  R30,LOW(1)
000238 e0f0      	LDI  R31,HIGH(1)
000239 015f      	MOVW R10,R30
                 ; 0000 00DC }
                 ; 0000 00DD delay_ms(100);
                 _0xA:
00023a e6a4      	LDI  R26,LOW(100)
00023b e0b0      	LDI  R27,0
00023c 940e 0bcc 	CALL _delay_ms
                 ; 0000 00DE glcd_clear();
00023e d0e5      	RCALL _glcd_clear
                 ; 0000 00DF 
                 ; 0000 00E0 }
00023f cfd1      	RJMP _0x4
                 ; 0000 00E1 }
                 _0xB:
000240 cfff      	RJMP _0xB
                 ; .FEND
                 
                 	.DSEG
                 _0x3:
000260           	.BYTE 0x17
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 
                 	.CSEG
                 _ks0108_enable_G100:
                 ; .FSTART _ks0108_enable_G100
000241 0000      	NOP
000242 9ac0      	SBI  0x18,0
000243 0000      	NOP
000244 9508      	RET
                 ; .FEND
                 _ks0108_disable_G100:
                 ; .FSTART _ks0108_disable_G100
000245 98c0      	CBI  0x18,0
000246 98c4      	CBI  0x18,4
000247 98c5      	CBI  0x18,5
000248 9508      	RET
                 ; .FEND
                 _ks0108_rdbus_G100:
                 ; .FSTART _ks0108_rdbus_G100
000249 931a      	ST   -Y,R17
00024a dff6      	RCALL _ks0108_enable_G100
00024b b319      	IN   R17,25
00024c 98c0      	CBI  0x18,0
00024d 2fe1      	MOV  R30,R17
00024e c05e      	RJMP _0x212000F
                 ; .FEND
                 _ks0108_busy_G100:
                 ; .FSTART _ks0108_busy_G100
00024f 931a      	ST   -Y,R17
000250 930a      	ST   -Y,R16
000251 2f0a      	MOV  R16,R26
000252 e0e0      	LDI  R30,LOW(0)
000253 bbea      	OUT  0x1A,R30
000254 9ac1      	SBI  0x18,1
000255 98c2      	CBI  0x18,2
000256 2fe0      	MOV  R30,R16
000257 5fef      	SUBI R30,-LOW(1)
000258 2f1e      	MOV  R17,R30
000259 ff10      	SBRS R17,0
00025a c002      	RJMP _0x2000003
00025b 9ac4      	SBI  0x18,4
00025c c001      	RJMP _0x2000004
                 _0x2000003:
00025d 98c4      	CBI  0x18,4
                 _0x2000004:
00025e ff11      	SBRS R17,1
00025f c002      	RJMP _0x2000005
000260 9ac5      	SBI  0x18,5
000261 c001      	RJMP _0x2000006
                 _0x2000005:
000262 98c5      	CBI  0x18,5
                 _0x2000006:
                 _0x2000007:
000263 dfe5      	RCALL _ks0108_rdbus_G100
000264 78e0      	ANDI R30,LOW(0x80)
000265 f7e9      	BRNE _0x2000007
000266 940c 05b8 	JMP  _0x212000A
                 ; .FEND
                 _ks0108_wrcmd_G100:
                 ; .FSTART _ks0108_wrcmd_G100
000268 940e 0a7f 	CALL SUBOPT_0x6
00026a 2fa0      	MOV  R26,R16
00026b dfe3      	RCALL _ks0108_busy_G100
00026c 940e 0a84 	CALL SUBOPT_0x7
00026e c112      	RJMP _0x212000D
                 ; .FEND
                 _ks0108_setloc_G100:
                 ; .FSTART _ks0108_setloc_G100
                +
00026f 91e0 0295+LDS R30 , _ks0108_coord_G100 + ( 1 )
                 	__GETB1MN _ks0108_coord_G100,1
000271 93ea      	ST   -Y,R30
000272 91e0 0294 	LDS  R30,_ks0108_coord_G100
000274 73ef      	ANDI R30,LOW(0x3F)
000275 64e0      	ORI  R30,0x40
000276 2fae      	MOV  R26,R30
000277 dff0      	RCALL _ks0108_wrcmd_G100
                +
000278 91e0 0295+LDS R30 , _ks0108_coord_G100 + ( 1 )
                 	__GETB1MN _ks0108_coord_G100,1
00027a 93ea      	ST   -Y,R30
                +
00027b 91e0 0296+LDS R30 , _ks0108_coord_G100 + ( 2 )
                 	__GETB1MN _ks0108_coord_G100,2
00027d 6be8      	ORI  R30,LOW(0xB8)
00027e 2fae      	MOV  R26,R30
00027f dfe8      	RCALL _ks0108_wrcmd_G100
000280 9508      	RET
                 ; .FEND
                 _ks0108_gotoxp_G100:
                 ; .FSTART _ks0108_gotoxp_G100
000281 940e 0a7f 	CALL SUBOPT_0x6
000283 9300 0294 	STS  _ks0108_coord_G100,R16
000285 2fe0      	MOV  R30,R16
000286 95e2      	SWAP R30
000287 70ef      	ANDI R30,0xF
000288 95e6      	LSR  R30
000289 95e6      	LSR  R30
                +
00028a 93e0 0295+STS _ks0108_coord_G100 + ( 1 ) , R30
                 	__PUTB1MN _ks0108_coord_G100,1
                +
00028c 9310 0296+STS _ks0108_coord_G100 + ( 2 ) , R17
                 	__PUTBMRN _ks0108_coord_G100,2,17
00028e dfe0      	RCALL _ks0108_setloc_G100
00028f c0f1      	RJMP _0x212000D
                 ; .FEND
                 _ks0108_nextx_G100:
                 ; .FSTART _ks0108_nextx_G100
000290 91a0 0294 	LDS  R26,_ks0108_coord_G100
000292 5faf      	SUBI R26,-LOW(1)
000293 93a0 0294 	STS  _ks0108_coord_G100,R26
000295 38a0      	CPI  R26,LOW(0x80)
000296 f018      	BRLO _0x200000A
000297 e0e0      	LDI  R30,LOW(0)
000298 93e0 0294 	STS  _ks0108_coord_G100,R30
                 _0x200000A:
00029a 91e0 0294 	LDS  R30,_ks0108_coord_G100
00029c 73ef      	ANDI R30,LOW(0x3F)
00029d f431      	BRNE _0x200000B
00029e 91e0 0294 	LDS  R30,_ks0108_coord_G100
0002a0 93ea      	ST   -Y,R30
                +
0002a1 91a0 0296+LDS R26 , _ks0108_coord_G100 + ( 2 )
                 	__GETB2MN _ks0108_coord_G100,2
0002a3 dfdd      	RCALL _ks0108_gotoxp_G100
                 _0x200000B:
0002a4 9508      	RET
                 ; .FEND
                 _ks0108_wrdata_G100:
                 ; .FSTART _ks0108_wrdata_G100
0002a5 931a      	ST   -Y,R17
0002a6 2f1a      	MOV  R17,R26
                +
0002a7 91a0 0295+LDS R26 , _ks0108_coord_G100 + ( 1 )
                 	__GETB2MN _ks0108_coord_G100,1
0002a9 dfa5      	RCALL _ks0108_busy_G100
0002aa 9ac2      	SBI  0x18,2
0002ab 940e 0a84 	CALL SUBOPT_0x7
                 _0x212000F:
0002ad 9119      	LD   R17,Y+
0002ae 9508      	RET
                 ; .FEND
                 _ks0108_rddata_G100:
                 ; .FSTART _ks0108_rddata_G100
                +
0002af 91a0 0295+LDS R26 , _ks0108_coord_G100 + ( 1 )
                 	__GETB2MN _ks0108_coord_G100,1
0002b1 df9d      	RCALL _ks0108_busy_G100
0002b2 e0e0      	LDI  R30,LOW(0)
0002b3 bbea      	OUT  0x1A,R30
0002b4 9ac1      	SBI  0x18,1
0002b5 9ac2      	SBI  0x18,2
0002b6 df92      	RCALL _ks0108_rdbus_G100
0002b7 9508      	RET
                 ; .FEND
                 _ks0108_rdbyte_G100:
                 ; .FSTART _ks0108_rdbyte_G100
0002b8 940e 0a7f 	CALL SUBOPT_0x6
0002ba 930a      	ST   -Y,R16
0002bb 2fe1      	MOV  R30,R17
0002bc 940e 0a8c 	CALL SUBOPT_0x8
0002be dff0      	RCALL _ks0108_rddata_G100
0002bf dfaf      	RCALL _ks0108_setloc_G100
0002c0 dfee      	RCALL _ks0108_rddata_G100
0002c1 c0bf      	RJMP _0x212000D
                 ; .FEND
                 _glcd_init:
                 ; .FSTART _glcd_init
0002c2 940e 0b79 	CALL __SAVELOCR4
0002c4 019d      	MOVW R18,R26
0002c5 9ab8      	SBI  0x17,0
0002c6 9ab9      	SBI  0x17,1
0002c7 9aba      	SBI  0x17,2
0002c8 9abb      	SBI  0x17,3
0002c9 9ac3      	SBI  0x18,3
0002ca 9abc      	SBI  0x17,4
0002cb 9abd      	SBI  0x17,5
0002cc df78      	RCALL _ks0108_disable_G100
0002cd 98c3      	CBI  0x18,3
0002ce e6a4      	LDI  R26,LOW(100)
0002cf e0b0      	LDI  R27,0
0002d0 940e 0bcc 	CALL _delay_ms
0002d2 9ac3      	SBI  0x18,3
0002d3 e010      	LDI  R17,LOW(0)
                 _0x200000C:
0002d4 3012      	CPI  R17,2
0002d5 f440      	BRSH _0x200000E
0002d6 931a      	ST   -Y,R17
0002d7 e3af      	LDI  R26,LOW(63)
0002d8 df8f      	RCALL _ks0108_wrcmd_G100
0002d9 931a      	ST   -Y,R17
0002da 9513      	INC  R17
0002db eca0      	LDI  R26,LOW(192)
0002dc df8b      	RCALL _ks0108_wrcmd_G100
0002dd cff6      	RJMP _0x200000C
                 _0x200000E:
0002de e0e1      	LDI  R30,LOW(1)
0002df 93e0 0277 	STS  _glcd_state,R30
0002e1 e0e0      	LDI  R30,LOW(0)
                +
0002e2 93e0 0278+STS _glcd_state + ( 1 ) , R30
                 	__PUTB1MN _glcd_state,1
0002e4 2e02      	MOV  R0,R18
0002e5 2a03      	OR   R0,R19
0002e6 f0a1      	BREQ _0x200000F
0002e7 01d9      	MOVW R26,R18
0002e8 91ed      	LD   R30,X+
0002e9 91fd      	LD   R31,X+
                +
0002ea 93e0 027b+STS _glcd_state + ( 4 ) , R30
0002ec 93f0 027c+STS _glcd_state + ( 4 ) + 1 , R31
                 	__PUTW1MN _glcd_state,4
0002ee 01d9      	MOVW R26,R18
0002ef 9612      	ADIW R26,2
0002f0 91ed      	LD   R30,X+
0002f1 91fd      	LD   R31,X+
                +
0002f2 93e0 0290+STS _glcd_state + ( 25 ) , R30
0002f4 93f0 0291+STS _glcd_state + ( 25 ) + 1 , R31
                 	__PUTW1MN _glcd_state,25
0002f6 01d9      	MOVW R26,R18
0002f7 9614      	ADIW R26,4
0002f8 940e 0bab 	CALL __GETW1P
0002fa c00a      	RJMP _0x20000AC
                 _0x200000F:
0002fb e0e0      	LDI  R30,LOW(0)
0002fc e0f0      	LDI  R31,HIGH(0)
                +
0002fd 93e0 027b+STS _glcd_state + ( 4 ) , R30
0002ff 93f0 027c+STS _glcd_state + ( 4 ) + 1 , R31
                 	__PUTW1MN _glcd_state,4
                +
000301 93e0 0290+STS _glcd_state + ( 25 ) , R30
000303 93f0 0291+STS _glcd_state + ( 25 ) + 1 , R31
                 	__PUTW1MN _glcd_state,25
                 _0x20000AC:
                +
000305 93e0 0292+STS _glcd_state + ( 27 ) , R30
000307 93f0 0293+STS _glcd_state + ( 27 ) + 1 , R31
                 	__PUTW1MN _glcd_state,27
000309 e0e1      	LDI  R30,LOW(1)
                +
00030a 93e0 027d+STS _glcd_state + ( 6 ) , R30
                 	__PUTB1MN _glcd_state,6
                +
00030c 93e0 027e+STS _glcd_state + ( 7 ) , R30
                 	__PUTB1MN _glcd_state,7
                +
00030e 93e0 027f+STS _glcd_state + ( 8 ) , R30
                 	__PUTB1MN _glcd_state,8
000310 efef      	LDI  R30,LOW(255)
                +
000311 93e0 0280+STS _glcd_state + ( 9 ) , R30
                 	__PUTB1MN _glcd_state,9
000313 e0e1      	LDI  R30,LOW(1)
                +
000314 93e0 0287+STS _glcd_state + ( 16 ) , R30
                 	__PUTB1MN _glcd_state,16
                +
000316 e8e8     +LDI R30 , LOW ( _glcd_state + ( 17 ) )
000317 e0f2     +LDI R31 , HIGH ( _glcd_state + ( 17 ) )
                 	__POINTW1MN _glcd_state,17
000318 93fa      	ST   -Y,R31
000319 93ea      	ST   -Y,R30
00031a efef      	LDI  R30,LOW(255)
00031b 93ea      	ST   -Y,R30
00031c e0a8      	LDI  R26,LOW(8)
00031d e0b0      	LDI  R27,0
00031e 940e 09ca 	CALL _memset
000320 d003      	RCALL _glcd_clear
000321 e0e1      	LDI  R30,LOW(1)
000322 940c 06c4 	JMP  _0x2120008
                 ; .FEND
                 _glcd_clear:
                 ; .FSTART _glcd_clear
000324 940e 0b79 	CALL __SAVELOCR4
000326 e000      	LDI  R16,0
000327 e030      	LDI  R19,0
                +
000328 91e0 0278+LDS R30 , _glcd_state + ( 1 )
                 	__GETB1MN _glcd_state,1
00032a 30e0      	CPI  R30,0
00032b f009      	BREQ _0x2000015
00032c ef0f      	LDI  R16,LOW(255)
                 _0x2000015:
                 _0x2000016:
00032d 3038      	CPI  R19,8
00032e f478      	BRSH _0x2000018
00032f e0e0      	LDI  R30,LOW(0)
000330 93ea      	ST   -Y,R30
000331 2fa3      	MOV  R26,R19
000332 5f3f      	SUBI R19,-1
000333 df4d      	RCALL _ks0108_gotoxp_G100
000334 e010      	LDI  R17,LOW(0)
                 _0x2000019:
000335 2fa1      	MOV  R26,R17
000336 5f1f      	SUBI R17,-1
000337 38a0      	CPI  R26,LOW(0x80)
000338 f420      	BRSH _0x200001B
000339 2fa0      	MOV  R26,R16
00033a 940e 0a92 	CALL SUBOPT_0x9
00033c cff8      	RJMP _0x2000019
                 _0x200001B:
00033d cfef      	RJMP _0x2000016
                 _0x2000018:
00033e e0e0      	LDI  R30,LOW(0)
00033f 93ea      	ST   -Y,R30
000340 e0a0      	LDI  R26,LOW(0)
000341 df3f      	RCALL _ks0108_gotoxp_G100
000342 e0e0      	LDI  R30,LOW(0)
000343 93ea      	ST   -Y,R30
000344 e0a0      	LDI  R26,LOW(0)
000345 940e 06dc 	CALL _glcd_moveto
000347 940c 06c4 	JMP  _0x2120008
                 ; .FEND
                 _glcd_putpixel:
                 ; .FSTART _glcd_putpixel
000349 940e 0b77 	CALL __SAVELOCR6
00034b 2f3a      	MOV  R19,R26
00034c 812e      	LDD  R18,Y+6
00034d 815f      	LDD  R21,Y+7
00034e 3850      	CPI  R21,128
00034f f410      	BRSH _0x200001D
000350 3420      	CPI  R18,64
000351 f008      	BRLO _0x200001C
                 _0x200001D:
000352 c014      	RJMP _0x212000E
                 _0x200001C:
000353 935a      	ST   -Y,R21
000354 2fa2      	MOV  R26,R18
000355 df62      	RCALL _ks0108_rdbyte_G100
000356 2f1e      	MOV  R17,R30
000357 df17      	RCALL _ks0108_setloc_G100
000358 2fe2      	MOV  R30,R18
000359 70e7      	ANDI R30,LOW(0x7)
00035a e0a1      	LDI  R26,LOW(1)
00035b 940e 0b89 	CALL __LSLB12
00035d 2f0e      	MOV  R16,R30
00035e 3030      	CPI  R19,0
00035f f011      	BREQ _0x200001F
000360 2b10      	OR   R17,R16
000361 c003      	RJMP _0x2000020
                 _0x200001F:
000362 2fe0      	MOV  R30,R16
000363 95e0      	COM  R30
000364 231e      	AND  R17,R30
                 _0x2000020:
000365 2fa1      	MOV  R26,R17
000366 df3e      	RCALL _ks0108_wrdata_G100
                 _0x212000E:
000367 940e 0b7e 	CALL __LOADLOCR6
000369 9628      	ADIW R28,8
00036a 9508      	RET
                 ; .FEND
                 _glcd_getpixel:
                 ; .FSTART _glcd_getpixel
00036b 940e 0a7f 	CALL SUBOPT_0x6
00036d 3800      	CPI  R16,128
00036e f410      	BRSH _0x2000022
00036f 3410      	CPI  R17,64
000370 f010      	BRLO _0x2000021
                 _0x2000022:
000371 e0e0      	LDI  R30,LOW(0)
000372 c00e      	RJMP _0x212000D
                 _0x2000021:
000373 930a      	ST   -Y,R16
000374 2fa1      	MOV  R26,R17
000375 df42      	RCALL _ks0108_rdbyte_G100
000376 2e1e      	MOV  R1,R30
000377 2fe1      	MOV  R30,R17
000378 70e7      	ANDI R30,LOW(0x7)
000379 e0a1      	LDI  R26,LOW(1)
00037a 940e 0b89 	CALL __LSLB12
00037c 21e1      	AND  R30,R1
00037d f011      	BREQ _0x2000024
00037e e0e1      	LDI  R30,LOW(1)
00037f c001      	RJMP _0x2000025
                 _0x2000024:
000380 e0e0      	LDI  R30,LOW(0)
                 _0x2000025:
                 _0x212000D:
000381 8119      	LDD  R17,Y+1
000382 8108      	LDD  R16,Y+0
000383 9623      	ADIW R28,3
000384 9508      	RET
                 ; .FEND
                 _ks0108_wrmasked_G100:
                 ; .FSTART _ks0108_wrmasked_G100
000385 940e 0b77 	CALL __SAVELOCR6
000387 2f0a      	MOV  R16,R26
000388 813e      	LDD  R19,Y+6
000389 812f      	LDD  R18,Y+7
00038a 8558      	LDD  R21,Y+8
00038b 8549      	LDD  R20,Y+9
00038c 934a      	ST   -Y,R20
00038d 2fa5      	MOV  R26,R21
00038e df29      	RCALL _ks0108_rdbyte_G100
00038f 2f1e      	MOV  R17,R30
000390 dede      	RCALL _ks0108_setloc_G100
000391 2fe0      	MOV  R30,R16
000392 30e7      	CPI  R30,LOW(0x7)
000393 f011      	BREQ _0x200002B
000394 30e8      	CPI  R30,LOW(0x8)
000395 f431      	BRNE _0x200002C
                 _0x200002B:
000396 932a      	ST   -Y,R18
000397 2fa0      	MOV  R26,R16
000398 940e 09e7 	CALL _glcd_mappixcolor1bit
00039a 2f2e      	MOV  R18,R30
00039b c006      	RJMP _0x200002D
                 _0x200002C:
00039c 30e3      	CPI  R30,LOW(0x3)
00039d f411      	BRNE _0x200002F
00039e 9520      	COM  R18
00039f c002      	RJMP _0x2000030
                 _0x200002F:
0003a0 30e0      	CPI  R30,0
0003a1 f421      	BRNE _0x2000031
                 _0x2000030:
                 _0x200002D:
0003a2 2fe3      	MOV  R30,R19
0003a3 95e0      	COM  R30
0003a4 231e      	AND  R17,R30
0003a5 c002      	RJMP _0x2000032
                 _0x2000031:
0003a6 30e2      	CPI  R30,LOW(0x2)
0003a7 f421      	BRNE _0x2000033
                 _0x2000032:
0003a8 2fe3      	MOV  R30,R19
0003a9 23e2      	AND  R30,R18
0003aa 2b1e      	OR   R17,R30
0003ab c00c      	RJMP _0x2000029
                 _0x2000033:
0003ac 30e1      	CPI  R30,LOW(0x1)
0003ad f421      	BRNE _0x2000034
0003ae 2fe3      	MOV  R30,R19
0003af 23e2      	AND  R30,R18
0003b0 271e      	EOR  R17,R30
0003b1 c006      	RJMP _0x2000029
                 _0x2000034:
0003b2 30e4      	CPI  R30,LOW(0x4)
0003b3 f421      	BRNE _0x2000029
0003b4 2fe3      	MOV  R30,R19
0003b5 95e0      	COM  R30
0003b6 2be2      	OR   R30,R18
0003b7 231e      	AND  R17,R30
                 _0x2000029:
0003b8 2fa1      	MOV  R26,R17
0003b9 940e 0a92 	CALL SUBOPT_0x9
0003bb 940e 0b7e 	CALL __LOADLOCR6
0003bd 962a      	ADIW R28,10
0003be 9508      	RET
                 ; .FEND
                 _glcd_block:
                 ; .FSTART _glcd_block
0003bf 93aa      	ST   -Y,R26
0003c0 9723      	SBIW R28,3
0003c1 940e 0b77 	CALL __SAVELOCR6
0003c3 89a8      	LDD  R26,Y+16
0003c4 38a0      	CPI  R26,LOW(0x80)
0003c5 f448      	BRSH _0x2000037
0003c6 85af      	LDD  R26,Y+15
0003c7 34a0      	CPI  R26,LOW(0x40)
0003c8 f430      	BRSH _0x2000037
0003c9 85ae      	LDD  R26,Y+14
0003ca 30a0      	CPI  R26,LOW(0x0)
0003cb f019      	BREQ _0x2000037
0003cc 85ad      	LDD  R26,Y+13
0003cd 30a0      	CPI  R26,LOW(0x0)
0003ce f409      	BRNE _0x2000036
                 _0x2000037:
0003cf c1c8      	RJMP _0x212000C
                 _0x2000036:
0003d0 85ee      	LDD  R30,Y+14
0003d1 87e8      	STD  Y+8,R30
0003d2 89a8      	LDD  R26,Y+16
0003d3 27bb      	CLR  R27
0003d4 85ee      	LDD  R30,Y+14
0003d5 e0f0      	LDI  R31,0
0003d6 0fae      	ADD  R26,R30
0003d7 1fbf      	ADC  R27,R31
0003d8 38a1      	CPI  R26,LOW(0x81)
0003d9 e0e0      	LDI  R30,HIGH(0x81)
0003da 07be      	CPC  R27,R30
0003db f020      	BRLO _0x2000039
0003dc 89a8      	LDD  R26,Y+16
0003dd e8e0      	LDI  R30,LOW(128)
0003de 1bea      	SUB  R30,R26
0003df 87ee      	STD  Y+14,R30
                 _0x2000039:
0003e0 852d      	LDD  R18,Y+13
0003e1 85af      	LDD  R26,Y+15
0003e2 27bb      	CLR  R27
0003e3 85ed      	LDD  R30,Y+13
0003e4 e0f0      	LDI  R31,0
0003e5 0fae      	ADD  R26,R30
0003e6 1fbf      	ADC  R27,R31
0003e7 34a1      	CPI  R26,LOW(0x41)
0003e8 e0e0      	LDI  R30,HIGH(0x41)
0003e9 07be      	CPC  R27,R30
0003ea f020      	BRLO _0x200003A
0003eb 85af      	LDD  R26,Y+15
0003ec e4e0      	LDI  R30,LOW(64)
0003ed 1bea      	SUB  R30,R26
0003ee 87ed      	STD  Y+13,R30
                 _0x200003A:
0003ef 85a9      	LDD  R26,Y+9
0003f0 30a6      	CPI  R26,LOW(0x6)
0003f1 f009      	BREQ PC+2
0003f2 c05b      	RJMP _0x200003B
0003f3 85ec      	LDD  R30,Y+12
0003f4 30e1      	CPI  R30,LOW(0x1)
0003f5 f409      	BRNE _0x200003F
0003f6 c1a1      	RJMP _0x212000C
                 _0x200003F:
0003f7 30e3      	CPI  R30,LOW(0x3)
0003f8 f439      	BRNE _0x2000042
                +
0003f9 91e0 0292+LDS R30 , _glcd_state + ( 27 )
0003fb 91f0 0293+LDS R31 , _glcd_state + ( 27 ) + 1
                 	__GETW1MN _glcd_state,27
0003fd 9730      	SBIW R30,0
0003fe f409      	BRNE _0x2000041
0003ff c198      	RJMP _0x212000C
                 _0x2000041:
                 _0x2000042:
000400 8508      	LDD  R16,Y+8
000401 85ed      	LDD  R30,Y+13
000402 95e6      	LSR  R30
000403 95e6      	LSR  R30
000404 95e6      	LSR  R30
000405 2f3e      	MOV  R19,R30
000406 2fe2      	MOV  R30,R18
000407 70e7      	ANDI R30,LOW(0x7)
000408 f419      	BRNE _0x2000044
000409 85ad      	LDD  R26,Y+13
00040a 172a      	CP   R18,R26
00040b f0e9      	BREQ _0x2000043
                 _0x2000044:
00040c 2fa0      	MOV  R26,R16
00040d 27bb      	CLR  R27
00040e 2fe3      	MOV  R30,R19
00040f e0f0      	LDI  R31,0
000410 940e 0ba3 	CALL __MULW12U
000412 85aa      	LDD  R26,Y+10
000413 85bb      	LDD  R27,Y+10+1
000414 940e 0a96 	CALL SUBOPT_0xA
000416 9526      	LSR  R18
000417 9526      	LSR  R18
000418 9526      	LSR  R18
000419 2f53      	MOV  R21,R19
                 _0x2000046:
00041a 935f      	PUSH R21
00041b 5f5f      	SUBI R21,-1
00041c 2fe2      	MOV  R30,R18
00041d 91af      	POP  R26
00041e 17ea      	CP   R30,R26
00041f f048      	BRLO _0x2000048
000420 2f10      	MOV  R17,R16
                 _0x2000049:
000421 2fe1      	MOV  R30,R17
000422 5011      	SUBI R17,1
000423 30e0      	CPI  R30,0
000424 f019      	BREQ _0x200004B
000425 940e 0a9b 	CALL SUBOPT_0xB
000427 cff9      	RJMP _0x2000049
                 _0x200004B:
000428 cff1      	RJMP _0x2000046
                 _0x2000048:
                 _0x2000043:
000429 85ae      	LDD  R26,Y+14
00042a 170a      	CP   R16,R26
00042b f111      	BREQ _0x200004C
00042c 85ee      	LDD  R30,Y+14
00042d 85aa      	LDD  R26,Y+10
00042e 85bb      	LDD  R27,Y+10+1
00042f e0f0      	LDI  R31,0
000430 940e 0a96 	CALL SUBOPT_0xA
000432 85ed      	LDD  R30,Y+13
000433 70e7      	ANDI R30,LOW(0x7)
000434 f009      	BREQ _0x200004D
000435 5f3f      	SUBI R19,-LOW(1)
                 _0x200004D:
000436 e020      	LDI  R18,LOW(0)
                 _0x200004E:
000437 932f      	PUSH R18
000438 5f2f      	SUBI R18,-1
000439 2fe3      	MOV  R30,R19
00043a 91af      	POP  R26
00043b 17ae      	CP   R26,R30
00043c f488      	BRSH _0x2000050
00043d 851e      	LDD  R17,Y+14
                 _0x2000051:
00043e 931f      	PUSH R17
00043f 5f1f      	SUBI R17,-1
000440 2fe0      	MOV  R30,R16
000441 91af      	POP  R26
000442 17ae      	CP   R26,R30
000443 f418      	BRSH _0x2000053
000444 940e 0a9b 	CALL SUBOPT_0xB
000446 cff7      	RJMP _0x2000051
                 _0x2000053:
000447 85ee      	LDD  R30,Y+14
000448 81ae      	LDD  R26,Y+6
000449 81bf      	LDD  R27,Y+6+1
00044a e0f0      	LDI  R31,0
00044b 940e 0a96 	CALL SUBOPT_0xA
00044d cfe9      	RJMP _0x200004E
                 _0x2000050:
                 _0x200004C:
                 _0x200003B:
00044e 85ef      	LDD  R30,Y+15
00044f 70e7      	ANDI R30,LOW(0x7)
000450 2f3e      	MOV  R19,R30
                 _0x2000054:
000451 85ed      	LDD  R30,Y+13
000452 30e0      	CPI  R30,0
000453 f409      	BRNE PC+2
000454 c143      	RJMP _0x2000056
000455 85ea      	LDD  R30,Y+10
000456 85fb      	LDD  R31,Y+10+1
000457 83ee      	STD  Y+6,R30
000458 83ff      	STD  Y+6+1,R31
000459 e010      	LDI  R17,LOW(0)
00045a 8908      	LDD  R16,Y+16
00045b 3030      	CPI  R19,0
00045c f009      	BREQ PC+2
00045d c065      	RJMP _0x2000057
00045e 85ad      	LDD  R26,Y+13
00045f 30a8      	CPI  R26,LOW(0x8)
000460 f408      	BRSH PC+2
000461 c05c      	RJMP _0x2000058
000462 85e9      	LDD  R30,Y+9
000463 30e0      	CPI  R30,0
000464 f011      	BREQ _0x200005D
000465 30e3      	CPI  R30,LOW(0x3)
000466 f409      	BRNE _0x200005E
                 _0x200005D:
000467 c002      	RJMP _0x200005F
                 _0x200005E:
000468 30e7      	CPI  R30,LOW(0x7)
000469 f409      	BRNE _0x2000060
                 _0x200005F:
00046a c002      	RJMP _0x2000061
                 _0x2000060:
00046b 30e8      	CPI  R30,LOW(0x8)
00046c f409      	BRNE _0x2000062
                 _0x2000061:
00046d c002      	RJMP _0x2000063
                 _0x2000062:
00046e 30e6      	CPI  R30,LOW(0x6)
00046f f409      	BRNE _0x2000064
                 _0x2000063:
000470 c002      	RJMP _0x2000065
                 _0x2000064:
000471 30e9      	CPI  R30,LOW(0x9)
000472 f409      	BRNE _0x2000066
                 _0x2000065:
000473 c002      	RJMP _0x2000067
                 _0x2000066:
000474 30ea      	CPI  R30,LOW(0xA)
000475 f421      	BRNE _0x200005B
                 _0x2000067:
000476 930a      	ST   -Y,R16
000477 89e8      	LDD  R30,Y+16
000478 940e 0a8c 	CALL SUBOPT_0x8
                 _0x200005B:
                 _0x2000069:
00047a 931f      	PUSH R17
00047b 5f1f      	SUBI R17,-1
00047c 85ee      	LDD  R30,Y+14
00047d 91af      	POP  R26
00047e 17ae      	CP   R26,R30
00047f f5b8      	BRSH _0x200006B
000480 85a9      	LDD  R26,Y+9
000481 30a6      	CPI  R26,LOW(0x6)
000482 f461      	BRNE _0x200006C
000483 de2b      	RCALL _ks0108_rddata_G100
000484 ddea      	RCALL _ks0108_setloc_G100
000485 940e 0aa8 	CALL SUBOPT_0xC
000487 93fa      	ST   -Y,R31
000488 93ea      	ST   -Y,R30
000489 de25      	RCALL _ks0108_rddata_G100
00048a 2fae      	MOV  R26,R30
00048b 940e 0a2c 	CALL _glcd_writemem
00048d de02      	RCALL _ks0108_nextx_G100
00048e c027      	RJMP _0x200006D
                 _0x200006C:
00048f 85e9      	LDD  R30,Y+9
000490 30e9      	CPI  R30,LOW(0x9)
000491 f411      	BRNE _0x2000071
000492 e050      	LDI  R21,LOW(0)
000493 c00e      	RJMP _0x2000072
                 _0x2000071:
000494 30ea      	CPI  R30,LOW(0xA)
000495 f411      	BRNE _0x2000070
000496 ef5f      	LDI  R21,LOW(255)
000497 c00a      	RJMP _0x2000072
                 _0x2000070:
000498 940e 0aa8 	CALL SUBOPT_0xC
00049a 940e 0ab1 	CALL SUBOPT_0xD
00049c 2f5e      	MOV  R21,R30
00049d 85e9      	LDD  R30,Y+9
00049e 30e7      	CPI  R30,LOW(0x7)
00049f f011      	BREQ _0x2000079
0004a0 30e8      	CPI  R30,LOW(0x8)
0004a1 f421      	BRNE _0x200007A
                 _0x2000079:
                 _0x2000072:
0004a2 940e 0ab7 	CALL SUBOPT_0xE
0004a4 2f5e      	MOV  R21,R30
0004a5 c006      	RJMP _0x200007B
                 _0x200007A:
0004a6 30e3      	CPI  R30,LOW(0x3)
0004a7 f411      	BRNE _0x200007D
0004a8 9550      	COM  R21
0004a9 c002      	RJMP _0x200007E
                 _0x200007D:
0004aa 30e0      	CPI  R30,0
0004ab f421      	BRNE _0x2000080
                 _0x200007E:
                 _0x200007B:
0004ac 2fa5      	MOV  R26,R21
0004ad 940e 0a92 	CALL SUBOPT_0x9
0004af c006      	RJMP _0x2000077
                 _0x2000080:
0004b0 940e 0abb 	CALL SUBOPT_0xF
0004b2 efef      	LDI  R30,LOW(255)
0004b3 93ea      	ST   -Y,R30
0004b4 85ad      	LDD  R26,Y+13
0004b5 decf      	RCALL _ks0108_wrmasked_G100
                 _0x2000077:
                 _0x200006D:
0004b6 cfc3      	RJMP _0x2000069
                 _0x200006B:
0004b7 85ef      	LDD  R30,Y+15
0004b8 5fe8      	SUBI R30,-LOW(8)
0004b9 87ef      	STD  Y+15,R30
0004ba 85ed      	LDD  R30,Y+13
0004bb 50e8      	SUBI R30,LOW(8)
0004bc 87ed      	STD  Y+13,R30
0004bd c0d1      	RJMP _0x2000081
                 _0x2000058:
0004be 855d      	LDD  R21,Y+13
0004bf e020      	LDI  R18,LOW(0)
0004c0 e0e0      	LDI  R30,LOW(0)
0004c1 87ed      	STD  Y+13,R30
0004c2 c07a      	RJMP _0x2000082
                 _0x2000057:
0004c3 2fe3      	MOV  R30,R19
0004c4 85ad      	LDD  R26,Y+13
0004c5 0fae      	ADD  R26,R30
0004c6 30a9      	CPI  R26,LOW(0x9)
0004c7 f420      	BRSH _0x2000083
0004c8 852d      	LDD  R18,Y+13
0004c9 e0e0      	LDI  R30,LOW(0)
0004ca 87ed      	STD  Y+13,R30
0004cb c003      	RJMP _0x2000084
                 _0x2000083:
0004cc e0e8      	LDI  R30,LOW(8)
0004cd 1be3      	SUB  R30,R19
0004ce 2f2e      	MOV  R18,R30
                 _0x2000084:
0004cf 933a      	ST   -Y,R19
0004d0 2fa2      	MOV  R26,R18
0004d1 940e 09d9 	CALL _glcd_getmask
0004d3 2f4e      	MOV  R20,R30
0004d4 85e9      	LDD  R30,Y+9
0004d5 30e6      	CPI  R30,LOW(0x6)
0004d6 f4f1      	BRNE _0x2000088
                 _0x2000089:
0004d7 931f      	PUSH R17
0004d8 5f1f      	SUBI R17,-1
0004d9 85ee      	LDD  R30,Y+14
0004da 91af      	POP  R26
0004db 17ae      	CP   R26,R30
0004dc f4b8      	BRSH _0x200008B
0004dd 940e 0ac1 	CALL SUBOPT_0x10
0004df 2fae      	MOV  R26,R30
0004e0 2fe3      	MOV  R30,R19
0004e1 940e 0b91 	CALL __LSRB12
0004e3 940e 0ac8 	CALL SUBOPT_0x11
0004e5 2fe3      	MOV  R30,R19
0004e6 2fa4      	MOV  R26,R20
0004e7 940e 0b91 	CALL __LSRB12
0004e9 95e0      	COM  R30
0004ea 21e1      	AND  R30,R1
0004eb 2b5e      	OR   R21,R30
0004ec 940e 0aa8 	CALL SUBOPT_0xC
0004ee 93fa      	ST   -Y,R31
0004ef 93ea      	ST   -Y,R30
0004f0 2fa5      	MOV  R26,R21
0004f1 940e 0a2c 	CALL _glcd_writemem
0004f3 cfe3      	RJMP _0x2000089
                 _0x200008B:
0004f4 c02c      	RJMP _0x2000087
                 _0x2000088:
0004f5 30e9      	CPI  R30,LOW(0x9)
0004f6 f411      	BRNE _0x200008C
0004f7 e050      	LDI  R21,LOW(0)
0004f8 c003      	RJMP _0x200008D
                 _0x200008C:
0004f9 30ea      	CPI  R30,LOW(0xA)
0004fa f4a9      	BRNE _0x2000093
0004fb ef5f      	LDI  R21,LOW(255)
                 _0x200008D:
0004fc 940e 0ab7 	CALL SUBOPT_0xE
0004fe 2fae      	MOV  R26,R30
0004ff 2fe3      	MOV  R30,R19
000500 940e 0b89 	CALL __LSLB12
000502 2f5e      	MOV  R21,R30
                 _0x2000090:
000503 931f      	PUSH R17
000504 5f1f      	SUBI R17,-1
000505 85ee      	LDD  R30,Y+14
000506 91af      	POP  R26
000507 17ae      	CP   R26,R30
000508 f430      	BRSH _0x2000092
000509 940e 0abb 	CALL SUBOPT_0xF
00050b 934a      	ST   -Y,R20
00050c e0a0      	LDI  R26,LOW(0)
00050d de77      	RCALL _ks0108_wrmasked_G100
00050e cff4      	RJMP _0x2000090
                 _0x2000092:
00050f c011      	RJMP _0x2000087
                 _0x2000093:
                 _0x2000094:
000510 931f      	PUSH R17
000511 5f1f      	SUBI R17,-1
000512 85ee      	LDD  R30,Y+14
000513 91af      	POP  R26
000514 17ae      	CP   R26,R30
000515 f458      	BRSH _0x2000096
000516 940e 0ad3 	CALL SUBOPT_0x12
000518 2fae      	MOV  R26,R30
000519 2fe3      	MOV  R30,R19
00051a 940e 0b89 	CALL __LSLB12
00051c 93ea      	ST   -Y,R30
00051d 934a      	ST   -Y,R20
00051e 85ad      	LDD  R26,Y+13
00051f de65      	RCALL _ks0108_wrmasked_G100
000520 cfef      	RJMP _0x2000094
                 _0x2000096:
                 _0x2000087:
000521 85ed      	LDD  R30,Y+13
000522 30e0      	CPI  R30,0
000523 f409      	BRNE _0x2000097
000524 c073      	RJMP _0x2000056
                 _0x2000097:
000525 85ad      	LDD  R26,Y+13
000526 30a8      	CPI  R26,LOW(0x8)
000527 f428      	BRSH _0x2000098
000528 85ed      	LDD  R30,Y+13
000529 1be2      	SUB  R30,R18
00052a 2f5e      	MOV  R21,R30
00052b e0e0      	LDI  R30,LOW(0)
00052c c003      	RJMP _0x20000AD
                 _0x2000098:
00052d 2f53      	MOV  R21,R19
00052e 85ed      	LDD  R30,Y+13
00052f 50e8      	SUBI R30,LOW(8)
                 _0x20000AD:
000530 87ed      	STD  Y+13,R30
000531 e010      	LDI  R17,LOW(0)
000532 85ef      	LDD  R30,Y+15
000533 5fe8      	SUBI R30,-LOW(8)
000534 87ef      	STD  Y+15,R30
000535 e0e8      	LDI  R30,LOW(8)
000536 1be3      	SUB  R30,R19
000537 2f2e      	MOV  R18,R30
000538 8908      	LDD  R16,Y+16
000539 85ea      	LDD  R30,Y+10
00053a 85fb      	LDD  R31,Y+10+1
00053b 83ee      	STD  Y+6,R30
00053c 83ff      	STD  Y+6+1,R31
                 _0x2000082:
00053d 2fe5      	MOV  R30,R21
00053e e0f0      	LDI  R31,0
00053f 5ce8      	SUBI R30,LOW(-__glcd_mask*2)
000540 4ffd      	SBCI R31,HIGH(-__glcd_mask*2)
000541 9144      	LPM  R20,Z
000542 85e9      	LDD  R30,Y+9
000543 30e6      	CPI  R30,LOW(0x6)
000544 f4f1      	BRNE _0x200009D
                 _0x200009E:
000545 931f      	PUSH R17
000546 5f1f      	SUBI R17,-1
000547 85ee      	LDD  R30,Y+14
000548 91af      	POP  R26
000549 17ae      	CP   R26,R30
00054a f4b8      	BRSH _0x20000A0
00054b 940e 0ac1 	CALL SUBOPT_0x10
00054d 2fae      	MOV  R26,R30
00054e 2fe2      	MOV  R30,R18
00054f 940e 0b89 	CALL __LSLB12
000551 940e 0ac8 	CALL SUBOPT_0x11
000553 2fe2      	MOV  R30,R18
000554 2fa4      	MOV  R26,R20
000555 940e 0b89 	CALL __LSLB12
000557 95e0      	COM  R30
000558 21e1      	AND  R30,R1
000559 2b5e      	OR   R21,R30
00055a 940e 0aa8 	CALL SUBOPT_0xC
00055c 93fa      	ST   -Y,R31
00055d 93ea      	ST   -Y,R30
00055e 2fa5      	MOV  R26,R21
00055f 940e 0a2c 	CALL _glcd_writemem
000561 cfe3      	RJMP _0x200009E
                 _0x20000A0:
000562 c02c      	RJMP _0x200009C
                 _0x200009D:
000563 30e9      	CPI  R30,LOW(0x9)
000564 f411      	BRNE _0x20000A1
000565 e050      	LDI  R21,LOW(0)
000566 c003      	RJMP _0x20000A2
                 _0x20000A1:
000567 30ea      	CPI  R30,LOW(0xA)
000568 f4a9      	BRNE _0x20000A8
000569 ef5f      	LDI  R21,LOW(255)
                 _0x20000A2:
00056a 940e 0ab7 	CALL SUBOPT_0xE
00056c 2fae      	MOV  R26,R30
00056d 2fe2      	MOV  R30,R18
00056e 940e 0b91 	CALL __LSRB12
000570 2f5e      	MOV  R21,R30
                 _0x20000A5:
000571 931f      	PUSH R17
000572 5f1f      	SUBI R17,-1
000573 85ee      	LDD  R30,Y+14
000574 91af      	POP  R26
000575 17ae      	CP   R26,R30
000576 f430      	BRSH _0x20000A7
000577 940e 0abb 	CALL SUBOPT_0xF
000579 934a      	ST   -Y,R20
00057a e0a0      	LDI  R26,LOW(0)
00057b de09      	RCALL _ks0108_wrmasked_G100
00057c cff4      	RJMP _0x20000A5
                 _0x20000A7:
00057d c011      	RJMP _0x200009C
                 _0x20000A8:
                 _0x20000A9:
00057e 931f      	PUSH R17
00057f 5f1f      	SUBI R17,-1
000580 85ee      	LDD  R30,Y+14
000581 91af      	POP  R26
000582 17ae      	CP   R26,R30
000583 f458      	BRSH _0x20000AB
000584 940e 0ad3 	CALL SUBOPT_0x12
000586 2fae      	MOV  R26,R30
000587 2fe2      	MOV  R30,R18
000588 940e 0b91 	CALL __LSRB12
00058a 93ea      	ST   -Y,R30
00058b 934a      	ST   -Y,R20
00058c 85ad      	LDD  R26,Y+13
00058d ddf7      	RCALL _ks0108_wrmasked_G100
00058e cfef      	RJMP _0x20000A9
                 _0x20000AB:
                 _0x200009C:
                 _0x2000081:
00058f 85e8      	LDD  R30,Y+8
000590 85aa      	LDD  R26,Y+10
000591 85bb      	LDD  R27,Y+10+1
000592 e0f0      	LDI  R31,0
000593 0fea      	ADD  R30,R26
000594 1ffb      	ADC  R31,R27
000595 87ea      	STD  Y+10,R30
000596 87fb      	STD  Y+10+1,R31
000597 ceb9      	RJMP _0x2000054
                 _0x2000056:
                 _0x212000C:
000598 940e 0b7e 	CALL __LOADLOCR6
00059a 9661      	ADIW R28,17
00059b 9508      	RET
                 ; .FEND
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 
                 	.CSEG
                 _glcd_clipx:
                 ; .FSTART _glcd_clipx
00059c 940e 0ae0 	CALL SUBOPT_0x13
00059e f01c      	BRLT _0x2020003
00059f e0e0      	LDI  R30,LOW(0)
0005a0 e0f0      	LDI  R31,HIGH(0)
0005a1 c016      	RJMP _0x212000A
                 _0x2020003:
                +
0005a2 3800     +CPI R16 , LOW ( 128 )
0005a3 e0e0     +LDI R30 , HIGH ( 128 )
0005a4 071e     +CPC R17 , R30
                 	__CPWRN 16,17,128
0005a5 f01c      	BRLT _0x2020004
0005a6 e7ef      	LDI  R30,LOW(127)
0005a7 e0f0      	LDI  R31,HIGH(127)
0005a8 c00f      	RJMP _0x212000A
                 _0x2020004:
0005a9 c00d      	RJMP _0x212000B
                 ; .FEND
                 _glcd_clipy:
                 ; .FSTART _glcd_clipy
0005aa 940e 0ae0 	CALL SUBOPT_0x13
0005ac f01c      	BRLT _0x2020005
0005ad e0e0      	LDI  R30,LOW(0)
0005ae e0f0      	LDI  R31,HIGH(0)
0005af c008      	RJMP _0x212000A
                 _0x2020005:
                +
0005b0 3400     +CPI R16 , LOW ( 64 )
0005b1 e0e0     +LDI R30 , HIGH ( 64 )
0005b2 071e     +CPC R17 , R30
                 	__CPWRN 16,17,64
0005b3 f01c      	BRLT _0x2020006
0005b4 e3ef      	LDI  R30,LOW(63)
0005b5 e0f0      	LDI  R31,HIGH(63)
0005b6 c001      	RJMP _0x212000A
                 _0x2020006:
                 _0x212000B:
0005b7 01f8      	MOVW R30,R16
                 _0x212000A:
0005b8 9109      	LD   R16,Y+
0005b9 9119      	LD   R17,Y+
0005ba 9508      	RET
                 ; .FEND
                 _glcd_setpixel:
                 ; .FSTART _glcd_setpixel
0005bb 940e 0a7f 	CALL SUBOPT_0x6
0005bd 930a      	ST   -Y,R16
0005be 931a      	ST   -Y,R17
0005bf 91a0 0277 	LDS  R26,_glcd_state
0005c1 dd87      	RCALL _glcd_putpixel
0005c2 940c 09e3 	JMP  _0x2120004
                 ; .FEND
                 _glcd_getcharw_G101:
                 ; .FSTART _glcd_getcharw_G101
0005c4 93ba      	ST   -Y,R27
0005c5 93aa      	ST   -Y,R26
0005c6 9723      	SBIW R28,3
0005c7 940e 0b77 	CALL __SAVELOCR6
0005c9 940e 0ae7 	CALL SUBOPT_0x14
0005cb 018f      	MOVW R16,R30
0005cc 2e00      	MOV  R0,R16
0005cd 2a01      	OR   R0,R17
0005ce f419      	BRNE _0x202000B
0005cf e0e0      	LDI  R30,LOW(0)
0005d0 e0f0      	LDI  R31,HIGH(0)
0005d1 c05f      	RJMP _0x2120009
                 _0x202000B:
0005d2 940e 0aec 	CALL SUBOPT_0x15
0005d4 820f      	STD  Y+7,R0
0005d5 940e 0aec 	CALL SUBOPT_0x15
0005d7 820e      	STD  Y+6,R0
0005d8 940e 0aec 	CALL SUBOPT_0x15
0005da 8608      	STD  Y+8,R0
0005db 85eb      	LDD  R30,Y+11
0005dc 85a8      	LDD  R26,Y+8
0005dd 17ea      	CP   R30,R26
0005de f418      	BRSH _0x202000C
0005df e0e0      	LDI  R30,LOW(0)
0005e0 e0f0      	LDI  R31,HIGH(0)
0005e1 c04f      	RJMP _0x2120009
                 _0x202000C:
0005e2 01f8      	MOVW R30,R16
                +
0005e3 5f0f     +SUBI R16 , LOW ( - 1 )
0005e4 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
0005e5 9154      	LPM  R21,Z
0005e6 85a8      	LDD  R26,Y+8
0005e7 27bb      	CLR  R27
0005e8 27ee      	CLR  R30
0005e9 0fa5      	ADD  R26,R21
0005ea 1fbe      	ADC  R27,R30
0005eb 85eb      	LDD  R30,Y+11
0005ec e0f0      	LDI  R31,0
0005ed 17ea      	CP   R30,R26
0005ee 07fb      	CPC  R31,R27
0005ef f018      	BRLO _0x202000D
0005f0 e0e0      	LDI  R30,LOW(0)
0005f1 e0f0      	LDI  R31,HIGH(0)
0005f2 c03e      	RJMP _0x2120009
                 _0x202000D:
0005f3 81ee      	LDD  R30,Y+6
0005f4 95e6      	LSR  R30
0005f5 95e6      	LSR  R30
0005f6 95e6      	LSR  R30
0005f7 2f4e      	MOV  R20,R30
0005f8 81ee      	LDD  R30,Y+6
0005f9 70e7      	ANDI R30,LOW(0x7)
0005fa f009      	BREQ _0x202000E
0005fb 5f4f      	SUBI R20,-LOW(1)
                 _0x202000E:
0005fc 81ef      	LDD  R30,Y+7
0005fd 30e0      	CPI  R30,0
0005fe f0a1      	BREQ _0x202000F
0005ff 85a9      	LDD  R26,Y+9
000600 85ba      	LDD  R27,Y+9+1
000601 93ec      	ST   X,R30
000602 85a8      	LDD  R26,Y+8
000603 85eb      	LDD  R30,Y+11
000604 1bea      	SUB  R30,R26
000605 e0f0      	LDI  R31,0
000606 01df      	MOVW R26,R30
000607 81ef      	LDD  R30,Y+7
000608 e0f0      	LDI  R31,0
000609 940e 0ba3 	CALL __MULW12U
00060b 01df      	MOVW R26,R30
00060c 2fe4      	MOV  R30,R20
00060d e0f0      	LDI  R31,0
00060e 940e 0ba3 	CALL __MULW12U
000610 0fe0      	ADD  R30,R16
000611 1ff1      	ADC  R31,R17
000612 c01e      	RJMP _0x2120009
                 _0x202000F:
000613 0198      	MOVW R18,R16
000614 2fe5      	MOV  R30,R21
000615 e0f0      	LDI  R31,0
                +
000616 0f0e     +ADD R16 , R30
000617 1f1f     +ADC R17 , R31
                 	__ADDWRR 16,17,30,31
                 _0x2020010:
000618 85a8      	LDD  R26,Y+8
000619 5faf      	SUBI R26,-LOW(1)
00061a 87a8      	STD  Y+8,R26
00061b 50a1      	SUBI R26,LOW(1)
00061c 85eb      	LDD  R30,Y+11
00061d 17ae      	CP   R26,R30
00061e f460      	BRSH _0x2020012
00061f 01f9      	MOVW R30,R18
                +
000620 5f2f     +SUBI R18 , LOW ( - 1 )
000621 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
000622 91a4      	LPM  R26,Z
000623 e0b0      	LDI  R27,0
000624 2fe4      	MOV  R30,R20
000625 e0f0      	LDI  R31,0
000626 940e 0ba3 	CALL __MULW12U
                +
000628 0f0e     +ADD R16 , R30
000629 1f1f     +ADC R17 , R31
                 	__ADDWRR 16,17,30,31
00062a cfed      	RJMP _0x2020010
                 _0x2020012:
00062b 01f9      	MOVW R30,R18
00062c 91e4      	LPM  R30,Z
00062d 85a9      	LDD  R26,Y+9
00062e 85ba      	LDD  R27,Y+9+1
00062f 93ec      	ST   X,R30
000630 01f8      	MOVW R30,R16
                 _0x2120009:
000631 940e 0b7e 	CALL __LOADLOCR6
000633 962c      	ADIW R28,12
000634 9508      	RET
                 ; .FEND
                 _glcd_new_line_G101:
                 ; .FSTART _glcd_new_line_G101
000635 e0e0      	LDI  R30,LOW(0)
                +
000636 93e0 0279+STS _glcd_state + ( 2 ) , R30
                 	__PUTB1MN _glcd_state,2
                +
000638 91a0 027a+LDS R26 , _glcd_state + ( 3 )
                 	__GETB2MN _glcd_state,3
00063a 27bb      	CLR  R27
00063b 940e 0ae7 	CALL SUBOPT_0x14
00063d 9631      	ADIW R30,1
00063e 91e4      	LPM  R30,Z
00063f e0f0      	LDI  R31,0
000640 0fae      	ADD  R26,R30
000641 1fbf      	ADC  R27,R31
                +
000642 91e0 027e+LDS R30 , _glcd_state + ( 7 )
                 	__GETB1MN _glcd_state,7
000644 e0f0      	LDI  R31,0
000645 0fae      	ADD  R26,R30
000646 1fbf      	ADC  R27,R31
000647 df62      	RCALL _glcd_clipy
                +
000648 93e0 027a+STS _glcd_state + ( 3 ) , R30
                 	__PUTB1MN _glcd_state,3
00064a 9508      	RET
                 ; .FEND
                 _glcd_putchar:
                 ; .FSTART _glcd_putchar
00064b 9721      	SBIW R28,1
00064c 940e 0b77 	CALL __SAVELOCR6
00064e 2f2a      	MOV  R18,R26
00064f 940e 0ae7 	CALL SUBOPT_0x14
000651 9730      	SBIW R30,0
000652 f409      	BRNE PC+2
000653 c05d      	RJMP _0x202003A
000654 302a      	CPI  R18,10
000655 f409      	BRNE _0x202003B
000656 c055      	RJMP _0x202003C
                 _0x202003B:
000657 932a      	ST   -Y,R18
000658 01de      	MOVW R26,R28
000659 9617      	ADIW R26,7
00065a df69      	RCALL _glcd_getcharw_G101
00065b 01af      	MOVW R20,R30
00065c 9730      	SBIW R30,0
00065d f421      	BRNE _0x202003D
00065e 940e 0b7e 	CALL __LOADLOCR6
000660 940c 0a4c 	JMP  _0x2120001
                 _0x202003D:
                +
000662 91e0 027d+LDS R30 , _glcd_state + ( 6 )
                 	__GETB1MN _glcd_state,6
000664 81ae      	LDD  R26,Y+6
000665 0fea      	ADD  R30,R26
000666 2f3e      	MOV  R19,R30
                +
000667 91a0 0279+LDS R26 , _glcd_state + ( 2 )
                 	__GETB2MN _glcd_state,2
000669 27bb      	CLR  R27
00066a 940e 0af1 	CALL SUBOPT_0x16
                +
00066c 3801     +CPI R16 , LOW ( 129 )
00066d e0e0     +LDI R30 , HIGH ( 129 )
00066e 071e     +CPC R17 , R30
                 	__CPWRN 16,17,129
00066f f018      	BRLO _0x202003E
000670 2f03      	MOV  R16,R19
000671 2711      	CLR  R17
000672 dfc2      	RCALL _glcd_new_line_G101
                 _0x202003E:
                +
000673 91e0 0279+LDS R30 , _glcd_state + ( 2 )
                 	__GETB1MN _glcd_state,2
000675 93ea      	ST   -Y,R30
                +
000676 91e0 027a+LDS R30 , _glcd_state + ( 3 )
                 	__GETB1MN _glcd_state,3
000678 93ea      	ST   -Y,R30
000679 85e8      	LDD  R30,Y+8
00067a 93ea      	ST   -Y,R30
00067b 940e 0ae7 	CALL SUBOPT_0x14
00067d 9631      	ADIW R30,1
00067e 91e4      	LPM  R30,Z
00067f 93ea      	ST   -Y,R30
000680 e0e1      	LDI  R30,LOW(1)
000681 93ea      	ST   -Y,R30
000682 935a      	ST   -Y,R21
000683 934a      	ST   -Y,R20
000684 e0a7      	LDI  R26,LOW(7)
000685 dd39      	RCALL _glcd_block
                +
000686 91e0 0279+LDS R30 , _glcd_state + ( 2 )
                 	__GETB1MN _glcd_state,2
000688 81ae      	LDD  R26,Y+6
000689 0fea      	ADD  R30,R26
00068a 93ea      	ST   -Y,R30
                +
00068b 91e0 027a+LDS R30 , _glcd_state + ( 3 )
                 	__GETB1MN _glcd_state,3
00068d 93ea      	ST   -Y,R30
                +
00068e 91e0 027d+LDS R30 , _glcd_state + ( 6 )
                 	__GETB1MN _glcd_state,6
000690 93ea      	ST   -Y,R30
000691 940e 0ae7 	CALL SUBOPT_0x14
000693 9631      	ADIW R30,1
000694 91e4      	LPM  R30,Z
000695 940e 0af6 	CALL SUBOPT_0x17
                +
000697 91e0 0279+LDS R30 , _glcd_state + ( 2 )
                 	__GETB1MN _glcd_state,2
000699 93ea      	ST   -Y,R30
                +
00069a 91a0 027a+LDS R26 , _glcd_state + ( 3 )
                 	__GETB2MN _glcd_state,3
00069c 940e 0ae7 	CALL SUBOPT_0x14
00069e 9631      	ADIW R30,1
00069f 91e4      	LPM  R30,Z
0006a0 0fea      	ADD  R30,R26
0006a1 93ea      	ST   -Y,R30
0006a2 933a      	ST   -Y,R19
                +
0006a3 91e0 027e+LDS R30 , _glcd_state + ( 7 )
                 	__GETB1MN _glcd_state,7
0006a5 940e 0af6 	CALL SUBOPT_0x17
0006a7 e8e0      	LDI  R30,LOW(128)
0006a8 e0f0      	LDI  R31,HIGH(128)
0006a9 17e0      	CP   R30,R16
0006aa 07f1      	CPC  R31,R17
0006ab f429      	BRNE _0x202003F
                 _0x202003C:
0006ac df88      	RCALL _glcd_new_line_G101
0006ad 940e 0b7e 	CALL __LOADLOCR6
0006af 940c 0a4c 	JMP  _0x2120001
                 _0x202003F:
                 _0x202003A:
                +
0006b1 9300 0279+STS _glcd_state + ( 2 ) , R16
                 	__PUTBMRN _glcd_state,2,16
0006b3 940e 0b7e 	CALL __LOADLOCR6
0006b5 940c 0a4c 	JMP  _0x2120001
                 ; .FEND
                 _glcd_outtext:
                 ; .FSTART _glcd_outtext
0006b7 940e 0b79 	CALL __SAVELOCR4
0006b9 019d      	MOVW R18,R26
                 _0x2020049:
0006ba 01d9      	MOVW R26,R18
                +
0006bb 5f2f     +SUBI R18 , LOW ( - 1 )
0006bc 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
0006bd 91ec      	LD   R30,X
0006be 2f1e      	MOV  R17,R30
0006bf 30e0      	CPI  R30,0
0006c0 f019      	BREQ _0x202004B
0006c1 2fa1      	MOV  R26,R17
0006c2 df88      	RCALL _glcd_putchar
0006c3 cff6      	RJMP _0x2020049
                 _0x202004B:
                 _0x2120008:
0006c4 940e 0b80 	CALL __LOADLOCR4
0006c6 9624      	ADIW R28,4
0006c7 9508      	RET
                 ; .FEND
                 _glcd_putpixelm_G101:
                 ; .FSTART _glcd_putpixelm_G101
0006c8 940e 0b00 	CALL SUBOPT_0x18
                +
0006ca 91e0 0280+LDS R30 , _glcd_state + ( 9 )
                 	__GETB1MN _glcd_state,9
0006cc 23e1      	AND  R30,R17
0006cd f019      	BREQ _0x2020068
0006ce 91e0 0277 	LDS  R30,_glcd_state
0006d0 c002      	RJMP _0x2020069
                 _0x2020068:
                +
0006d1 91e0 0278+LDS R30 , _glcd_state + ( 1 )
                 	__GETB1MN _glcd_state,1
                 _0x2020069:
0006d3 2fae      	MOV  R26,R30
0006d4 940e 0349 	CALL _glcd_putpixel
0006d6 0f11      	LSL  R17
0006d7 3010      	CPI  R17,0
0006d8 f409      	BRNE _0x202006B
0006d9 e011      	LDI  R17,LOW(1)
                 _0x202006B:
0006da 2fe1      	MOV  R30,R17
0006db c2ea      	RJMP _0x2120005
                 ; .FEND
                 _glcd_moveto:
                 ; .FSTART _glcd_moveto
0006dc 940e 0a7f 	CALL SUBOPT_0x6
0006de 2fa0      	MOV  R26,R16
0006df 27bb      	CLR  R27
0006e0 debb      	RCALL _glcd_clipx
                +
0006e1 93e0 0279+STS _glcd_state + ( 2 ) , R30
                 	__PUTB1MN _glcd_state,2
0006e3 2fa1      	MOV  R26,R17
0006e4 27bb      	CLR  R27
0006e5 dec4      	RCALL _glcd_clipy
                +
0006e6 93e0 027a+STS _glcd_state + ( 3 ) , R30
                 	__PUTB1MN _glcd_state,3
0006e8 940c 09e3 	JMP  _0x2120004
                 ; .FEND
                 _glcd_line:
                 ; .FSTART _glcd_line
0006ea 93aa      	ST   -Y,R26
0006eb 972b      	SBIW R28,11
0006ec 940e 0b77 	CALL __SAVELOCR6
0006ee 89ac      	LDD  R26,Y+20
0006ef 27bb      	CLR  R27
0006f0 deab      	RCALL _glcd_clipx
0006f1 8bec      	STD  Y+20,R30
0006f2 89aa      	LDD  R26,Y+18
0006f3 27bb      	CLR  R27
0006f4 dea7      	RCALL _glcd_clipx
0006f5 8bea      	STD  Y+18,R30
0006f6 89ab      	LDD  R26,Y+19
0006f7 27bb      	CLR  R27
0006f8 deb1      	RCALL _glcd_clipy
0006f9 8beb      	STD  Y+19,R30
0006fa 89a9      	LDD  R26,Y+17
0006fb 27bb      	CLR  R27
0006fc dead      	RCALL _glcd_clipy
0006fd 8be9      	STD  Y+17,R30
0006fe 89ea      	LDD  R30,Y+18
                +
0006ff 93e0 0279+STS _glcd_state + ( 2 ) , R30
                 	__PUTB1MN _glcd_state,2
000701 89e9      	LDD  R30,Y+17
                +
000702 93e0 027a+STS _glcd_state + ( 3 ) , R30
                 	__PUTB1MN _glcd_state,3
000704 e0e1      	LDI  R30,LOW(1)
000705 87e8      	STD  Y+8,R30
000706 89e9      	LDD  R30,Y+17
000707 89ab      	LDD  R26,Y+19
000708 17ea      	CP   R30,R26
000709 f579      	BRNE _0x202006C
00070a 891c      	LDD  R17,Y+20
00070b 89aa      	LDD  R26,Y+18
00070c 171a      	CP   R17,R26
00070d f431      	BRNE _0x202006D
00070e 931a      	ST   -Y,R17
00070f 89ec      	LDD  R30,Y+20
000710 93ea      	ST   -Y,R30
000711 e0a1      	LDI  R26,LOW(1)
000712 dfb5      	RCALL _glcd_putpixelm_G101
000713 c0cb      	RJMP _0x2120007
                 _0x202006D:
000714 89aa      	LDD  R26,Y+18
000715 171a      	CP   R17,R26
000716 f430      	BRSH _0x202006E
000717 89ea      	LDD  R30,Y+18
000718 1be1      	SUB  R30,R17
000719 2f0e      	MOV  R16,R30
                +
00071a e041     +LDI R20 , LOW ( 1 )
00071b e050     +LDI R21 , HIGH ( 1 )
                 	__GETWRN 20,21,1
00071c c006      	RJMP _0x202006F
                 _0x202006E:
00071d 89aa      	LDD  R26,Y+18
00071e 2fe1      	MOV  R30,R17
00071f 1bea      	SUB  R30,R26
000720 2f0e      	MOV  R16,R30
                +
000721 ef4f     +LDI R20 , LOW ( - 1 )
000722 ef5f     +LDI R21 , HIGH ( - 1 )
                 	__GETWRN 20,21,-1
                 _0x202006F:
                 _0x2020071:
000723 893b      	LDD  R19,Y+19
                +
000724 91e0 027f+LDS R30 , _glcd_state + ( 8 )
                 	__GETB1MN _glcd_state,8
000726 83ee      	STD  Y+6,R30
                 _0x2020073:
000727 940e 0b07 	CALL SUBOPT_0x19
000729 f039      	BREQ _0x2020075
00072a 931a      	ST   -Y,R17
00072b 933a      	ST   -Y,R19
00072c 9533      	INC  R19
00072d 85aa      	LDD  R26,Y+10
00072e df99      	RCALL _glcd_putpixelm_G101
00072f 83ef      	STD  Y+7,R30
000730 cff6      	RJMP _0x2020073
                 _0x2020075:
000731 81ef      	LDD  R30,Y+7
000732 87e8      	STD  Y+8,R30
000733 0f14      	ADD  R17,R20
000734 2fe0      	MOV  R30,R16
000735 5001      	SUBI R16,1
000736 30e0      	CPI  R30,0
000737 f759      	BRNE _0x2020071
000738 c0a6      	RJMP _0x2020076
                 _0x202006C:
000739 89ea      	LDD  R30,Y+18
00073a 89ac      	LDD  R26,Y+20
00073b 17ea      	CP   R30,R26
00073c f541      	BRNE _0x2020077
00073d 893b      	LDD  R19,Y+19
00073e 89a9      	LDD  R26,Y+17
00073f 173a      	CP   R19,R26
000740 f430      	BRSH _0x2020078
000741 89e9      	LDD  R30,Y+17
000742 1be3      	SUB  R30,R19
000743 2f2e      	MOV  R18,R30
000744 e0e1      	LDI  R30,LOW(1)
000745 e0f0      	LDI  R31,HIGH(1)
000746 c006      	RJMP _0x2020187
                 _0x2020078:
000747 89a9      	LDD  R26,Y+17
000748 2fe3      	MOV  R30,R19
000749 1bea      	SUB  R30,R26
00074a 2f2e      	MOV  R18,R30
00074b efef      	LDI  R30,LOW(65535)
00074c efff      	LDI  R31,HIGH(65535)
                 _0x2020187:
00074d 87ed      	STD  Y+13,R30
00074e 87fe      	STD  Y+13+1,R31
                 _0x202007B:
00074f 891c      	LDD  R17,Y+20
                +
000750 91e0 027f+LDS R30 , _glcd_state + ( 8 )
                 	__GETB1MN _glcd_state,8
000752 83ee      	STD  Y+6,R30
                 _0x202007D:
000753 940e 0b07 	CALL SUBOPT_0x19
000755 f031      	BREQ _0x202007F
000756 931a      	ST   -Y,R17
000757 9513      	INC  R17
000758 940e 0b0c 	CALL SUBOPT_0x1A
00075a 83ef      	STD  Y+7,R30
00075b cff7      	RJMP _0x202007D
                 _0x202007F:
00075c 81ef      	LDD  R30,Y+7
00075d 87e8      	STD  Y+8,R30
00075e 85ed      	LDD  R30,Y+13
00075f 0f3e      	ADD  R19,R30
000760 2fe2      	MOV  R30,R18
000761 5021      	SUBI R18,1
000762 30e0      	CPI  R30,0
000763 f759      	BRNE _0x202007B
000764 c07a      	RJMP _0x2020080
                 _0x2020077:
                +
000765 91e0 027f+LDS R30 , _glcd_state + ( 8 )
                 	__GETB1MN _glcd_state,8
000767 83ee      	STD  Y+6,R30
                 _0x2020081:
000768 940e 0b07 	CALL SUBOPT_0x19
00076a f409      	BRNE PC+2
00076b c073      	RJMP _0x2020083
00076c 891c      	LDD  R17,Y+20
00076d 893b      	LDD  R19,Y+19
00076e e0e1      	LDI  R30,LOW(1)
00076f 2f2e      	MOV  R18,R30
000770 2f0e      	MOV  R16,R30
000771 89aa      	LDD  R26,Y+18
000772 27bb      	CLR  R27
000773 89ec      	LDD  R30,Y+20
000774 e0f0      	LDI  R31,0
000775 1bae      	SUB  R26,R30
000776 0bbf      	SBC  R27,R31
000777 01ad      	MOVW R20,R26
000778 2355      	TST  R21
000779 f42a      	BRPL _0x2020084
00077a ef0f      	LDI  R16,LOW(255)
00077b 01fa      	MOVW R30,R20
00077c 940e 0b85 	CALL __ANEGW1
00077e 01af      	MOVW R20,R30
                 _0x2020084:
00077f 01fa      	MOVW R30,R20
000780 0fee      	LSL  R30
000781 1fff      	ROL  R31
000782 87ef      	STD  Y+15,R30
000783 8bf8      	STD  Y+15+1,R31
000784 89a9      	LDD  R26,Y+17
000785 27bb      	CLR  R27
000786 89eb      	LDD  R30,Y+19
000787 e0f0      	LDI  R31,0
000788 1bae      	SUB  R26,R30
000789 0bbf      	SBC  R27,R31
00078a 87ad      	STD  Y+13,R26
00078b 87be      	STD  Y+13+1,R27
00078c 85ae      	LDD  R26,Y+14
00078d 23aa      	TST  R26
00078e f43a      	BRPL _0x2020085
00078f ef2f      	LDI  R18,LOW(255)
000790 85ed      	LDD  R30,Y+13
000791 85fe      	LDD  R31,Y+13+1
000792 940e 0b85 	CALL __ANEGW1
000794 87ed      	STD  Y+13,R30
000795 87fe      	STD  Y+13+1,R31
                 _0x2020085:
000796 85ed      	LDD  R30,Y+13
000797 85fe      	LDD  R31,Y+13+1
000798 0fee      	LSL  R30
000799 1fff      	ROL  R31
00079a 87eb      	STD  Y+11,R30
00079b 87fc      	STD  Y+11+1,R31
00079c 931a      	ST   -Y,R17
00079d 933a      	ST   -Y,R19
00079e e0a1      	LDI  R26,LOW(1)
00079f df28      	RCALL _glcd_putpixelm_G101
0007a0 87e8      	STD  Y+8,R30
0007a1 e0e0      	LDI  R30,LOW(0)
0007a2 87e9      	STD  Y+9,R30
0007a3 87ea      	STD  Y+9+1,R30
0007a4 85ad      	LDD  R26,Y+13
0007a5 85be      	LDD  R27,Y+13+1
0007a6 174a      	CP   R20,R26
0007a7 075b      	CPC  R21,R27
0007a8 f0bc      	BRLT _0x2020086
                 _0x2020088:
0007a9 0f10      	ADD  R17,R16
0007aa 85eb      	LDD  R30,Y+11
0007ab 85fc      	LDD  R31,Y+11+1
0007ac 940e 0b10 	CALL SUBOPT_0x1B
0007ae 85a9      	LDD  R26,Y+9
0007af 85ba      	LDD  R27,Y+9+1
0007b0 174a      	CP   R20,R26
0007b1 075b      	CPC  R21,R27
0007b2 f42c      	BRGE _0x202008A
0007b3 0f32      	ADD  R19,R18
0007b4 85af      	LDD  R26,Y+15
0007b5 89b8      	LDD  R27,Y+15+1
0007b6 940e 0b17 	CALL SUBOPT_0x1C
                 _0x202008A:
0007b8 931a      	ST   -Y,R17
0007b9 940e 0b0c 	CALL SUBOPT_0x1A
0007bb 87e8      	STD  Y+8,R30
0007bc 89ea      	LDD  R30,Y+18
0007bd 17e1      	CP   R30,R17
0007be f751      	BRNE _0x2020088
0007bf c018      	RJMP _0x202008B
                 _0x2020086:
                 _0x202008D:
0007c0 0f32      	ADD  R19,R18
0007c1 85ef      	LDD  R30,Y+15
0007c2 89f8      	LDD  R31,Y+15+1
0007c3 940e 0b10 	CALL SUBOPT_0x1B
0007c5 85ed      	LDD  R30,Y+13
0007c6 85fe      	LDD  R31,Y+13+1
0007c7 85a9      	LDD  R26,Y+9
0007c8 85ba      	LDD  R27,Y+9+1
0007c9 17ea      	CP   R30,R26
0007ca 07fb      	CPC  R31,R27
0007cb f42c      	BRGE _0x202008F
0007cc 0f10      	ADD  R17,R16
0007cd 85ab      	LDD  R26,Y+11
0007ce 85bc      	LDD  R27,Y+11+1
0007cf 940e 0b17 	CALL SUBOPT_0x1C
                 _0x202008F:
0007d1 931a      	ST   -Y,R17
0007d2 940e 0b0c 	CALL SUBOPT_0x1A
0007d4 87e8      	STD  Y+8,R30
0007d5 89e9      	LDD  R30,Y+17
0007d6 17e3      	CP   R30,R19
0007d7 f741      	BRNE _0x202008D
                 _0x202008B:
0007d8 89eb      	LDD  R30,Y+19
0007d9 5fef      	SUBI R30,-LOW(1)
0007da 8beb      	STD  Y+19,R30
0007db 89e9      	LDD  R30,Y+17
0007dc 5fef      	SUBI R30,-LOW(1)
0007dd 8be9      	STD  Y+17,R30
0007de cf89      	RJMP _0x2020081
                 _0x2020083:
                 _0x2020080:
                 _0x2020076:
                 _0x2120007:
0007df 940e 0b7e 	CALL __LOADLOCR6
0007e1 9665      	ADIW R28,21
0007e2 9508      	RET
                 ; .FEND
                 _glcd_plot8_G101:
                 ; .FSTART _glcd_plot8_G101
0007e3 93ba      	ST   -Y,R27
0007e4 93aa      	ST   -Y,R26
0007e5 9723      	SBIW R28,3
0007e6 940e 0b77 	CALL __SAVELOCR6
0007e8 85ed      	LDD  R30,Y+13
0007e9 87e8      	STD  Y+8,R30
                +
0007ea 91e0 027f+LDS R30 , _glcd_state + ( 8 )
                 	__GETB1MN _glcd_state,8
0007ec 83ef      	STD  Y+7,R30
0007ed 91e0 0277 	LDS  R30,_glcd_state
0007ef 83ee      	STD  Y+6,R30
0007f0 89aa      	LDD  R26,Y+18
0007f1 27bb      	CLR  R27
0007f2 85ef      	LDD  R30,Y+15
0007f3 940e 0af1 	CALL SUBOPT_0x16
0007f5 89a9      	LDD  R26,Y+17
0007f6 27bb      	CLR  R27
0007f7 89e8      	LDD  R30,Y+16
0007f8 940e 0b1e 	CALL SUBOPT_0x1D
0007fa 89e8      	LDD  R30,Y+16
0007fb 940e 0b25 	CALL SUBOPT_0x1E
0007fd f071      	BREQ _0x20200AB
0007fe 85e8      	LDD  R30,Y+8
0007ff 78e0      	ANDI R30,LOW(0x80)
000800 f4f1      	BRNE _0x20200AD
000801 85ad      	LDD  R26,Y+13
000802 85be      	LDD  R27,Y+13+1
000803 e5ea      	LDI  R30,LOW(90)
000804 e0f0      	LDI  R31,HIGH(90)
000805 940e 0b2d 	CALL SUBOPT_0x1F
000807 f01c      	BRLT _0x20200AF
000808 940e 0b36 	CALL SUBOPT_0x20
00080a f40c      	BRGE _0x20200B0
                 _0x20200AF:
00080b c013      	RJMP _0x20200AE
                 _0x20200B0:
                 _0x20200AB:
00080c 2333      	TST  R19
00080d f012      	BRMI _0x20200B1
00080e 940e 0b3b 	CALL SUBOPT_0x21
                 _0x20200B1:
000810 81af      	LDD  R26,Y+7
000811 30a2      	CPI  R26,LOW(0x2)
000812 f020      	BRLO _0x20200B3
                +
000813 3022     +CPI R18 , LOW ( 2 )
000814 e0e0     +LDI R30 , HIGH ( 2 )
000815 073e     +CPC R19 , R30
                 	__CPWRN 18,19,2
000816 f40c      	BRGE _0x20200B4
                 _0x20200B3:
000817 c007      	RJMP _0x20200B2
                 _0x20200B4:
000818 940e 0b3f 	CALL SUBOPT_0x22
00081a f421      	BRNE _0x20200B5
00081b 930a      	ST   -Y,R16
00081c 2fa2      	MOV  R26,R18
00081d 50a1      	SUBI R26,LOW(1)
00081e dd9c      	RCALL _glcd_setpixel
                 _0x20200B5:
                 _0x20200B2:
                 _0x20200AE:
                 _0x20200AD:
00081f 85e8      	LDD  R30,Y+8
000820 78e8      	ANDI R30,LOW(0x88)
000821 38e8      	CPI  R30,LOW(0x88)
000822 f091      	BREQ _0x20200B7
000823 85e8      	LDD  R30,Y+8
000824 78e0      	ANDI R30,LOW(0x80)
000825 f4c9      	BRNE _0x20200B9
000826 85ad      	LDD  R26,Y+13
000827 85be      	LDD  R27,Y+13+1
000828 5fa2      	SUBI R26,LOW(-270)
000829 4fbe      	SBCI R27,HIGH(-270)
00082a 940e 0b48 	CALL SUBOPT_0x23
00082c f03c      	BRLT _0x20200BB
00082d 85ad      	LDD  R26,Y+13
00082e 85be      	LDD  R27,Y+13+1
00082f 5fa2      	SUBI R26,LOW(-270)
000830 4fbe      	SBCI R27,HIGH(-270)
000831 940e 0b4d 	CALL SUBOPT_0x24
000833 f40c      	BRGE _0x20200BC
                 _0x20200BB:
000834 c00a      	RJMP _0x20200BA
                 _0x20200BC:
                 _0x20200B7:
000835 940e 0b52 	CALL SUBOPT_0x25
000837 f038      	BRLO _0x20200BD
000838 940e 0b59 	CALL SUBOPT_0x26
00083a f421      	BRNE _0x20200BE
00083b 930a      	ST   -Y,R16
00083c 2fa4      	MOV  R26,R20
00083d 5faf      	SUBI R26,-LOW(1)
00083e dd7c      	RCALL _glcd_setpixel
                 _0x20200BE:
                 _0x20200BD:
                 _0x20200BA:
                 _0x20200B9:
00083f 89aa      	LDD  R26,Y+18
000840 27bb      	CLR  R27
000841 85ef      	LDD  R30,Y+15
000842 e0f0      	LDI  R31,0
000843 1bae      	SUB  R26,R30
000844 0bbf      	SBC  R27,R31
000845 018d      	MOVW R16,R26
000846 2311      	TST  R17
000847 f40a      	BRPL PC+2
000848 c045      	RJMP _0x20200BF
000849 85e8      	LDD  R30,Y+8
00084a 78e2      	ANDI R30,LOW(0x82)
00084b 38e2      	CPI  R30,LOW(0x82)
00084c f091      	BREQ _0x20200C1
00084d 85e8      	LDD  R30,Y+8
00084e 78e0      	ANDI R30,LOW(0x80)
00084f f511      	BRNE _0x20200C3
000850 85ad      	LDD  R26,Y+13
000851 85be      	LDD  R27,Y+13+1
000852 5aa6      	SUBI R26,LOW(-90)
000853 4fbf      	SBCI R27,HIGH(-90)
000854 940e 0b48 	CALL SUBOPT_0x23
000856 f03c      	BRLT _0x20200C5
000857 85ad      	LDD  R26,Y+13
000858 85be      	LDD  R27,Y+13+1
000859 5aa6      	SUBI R26,LOW(-90)
00085a 4fbf      	SBCI R27,HIGH(-90)
00085b 940e 0b4d 	CALL SUBOPT_0x24
00085d f40c      	BRGE _0x20200C6
                 _0x20200C5:
00085e c013      	RJMP _0x20200C4
                 _0x20200C6:
                 _0x20200C1:
00085f 2333      	TST  R19
000860 f012      	BRMI _0x20200C7
000861 940e 0b3b 	CALL SUBOPT_0x21
                 _0x20200C7:
000863 81af      	LDD  R26,Y+7
000864 30a2      	CPI  R26,LOW(0x2)
000865 f020      	BRLO _0x20200C9
                +
000866 3022     +CPI R18 , LOW ( 2 )
000867 e0e0     +LDI R30 , HIGH ( 2 )
000868 073e     +CPC R19 , R30
                 	__CPWRN 18,19,2
000869 f40c      	BRGE _0x20200CA
                 _0x20200C9:
00086a c007      	RJMP _0x20200C8
                 _0x20200CA:
00086b 940e 0b3f 	CALL SUBOPT_0x22
00086d f421      	BRNE _0x20200CB
00086e 930a      	ST   -Y,R16
00086f 2fa2      	MOV  R26,R18
000870 50a1      	SUBI R26,LOW(1)
000871 dd49      	RCALL _glcd_setpixel
                 _0x20200CB:
                 _0x20200C8:
                 _0x20200C4:
                 _0x20200C3:
000872 85e8      	LDD  R30,Y+8
000873 78e4      	ANDI R30,LOW(0x84)
000874 38e4      	CPI  R30,LOW(0x84)
000875 f071      	BREQ _0x20200CD
000876 85e8      	LDD  R30,Y+8
000877 78e0      	ANDI R30,LOW(0x80)
000878 f4a9      	BRNE _0x20200CF
000879 85ad      	LDD  R26,Y+13
00087a 85be      	LDD  R27,Y+13+1
00087b e0ee      	LDI  R30,LOW(270)
00087c e0f1      	LDI  R31,HIGH(270)
00087d 940e 0b2d 	CALL SUBOPT_0x1F
00087f f01c      	BRLT _0x20200D1
000880 940e 0b36 	CALL SUBOPT_0x20
000882 f40c      	BRGE _0x20200D2
                 _0x20200D1:
000883 c00a      	RJMP _0x20200D0
                 _0x20200D2:
                 _0x20200CD:
000884 940e 0b52 	CALL SUBOPT_0x25
000886 f038      	BRLO _0x20200D3
000887 940e 0b59 	CALL SUBOPT_0x26
000889 f421      	BRNE _0x20200D4
00088a 930a      	ST   -Y,R16
00088b 2fa4      	MOV  R26,R20
00088c 5faf      	SUBI R26,-LOW(1)
00088d dd2d      	RCALL _glcd_setpixel
                 _0x20200D4:
                 _0x20200D3:
                 _0x20200D0:
                 _0x20200CF:
                 _0x20200BF:
00088e 89aa      	LDD  R26,Y+18
00088f 27bb      	CLR  R27
000890 89e8      	LDD  R30,Y+16
000891 940e 0af1 	CALL SUBOPT_0x16
000893 89a9      	LDD  R26,Y+17
000894 27bb      	CLR  R27
000895 85ef      	LDD  R30,Y+15
000896 940e 0b1e 	CALL SUBOPT_0x1D
000898 85ef      	LDD  R30,Y+15
000899 940e 0b25 	CALL SUBOPT_0x1E
00089b f081      	BREQ _0x20200D6
00089c 85e8      	LDD  R30,Y+8
00089d 78e0      	ANDI R30,LOW(0x80)
00089e f4f1      	BRNE _0x20200D8
00089f 85eb      	LDD  R30,Y+11
0008a0 85fc      	LDD  R31,Y+11+1
0008a1 85ad      	LDD  R26,Y+13
0008a2 85be      	LDD  R27,Y+13+1
0008a3 17ae      	CP   R26,R30
0008a4 07bf      	CPC  R27,R31
0008a5 f02c      	BRLT _0x20200DA
0008a6 85e9      	LDD  R30,Y+9
0008a7 85fa      	LDD  R31,Y+9+1
0008a8 17ea      	CP   R30,R26
0008a9 07fb      	CPC  R31,R27
0008aa f40c      	BRGE _0x20200DB
                 _0x20200DA:
0008ab c011      	RJMP _0x20200D9
                 _0x20200DB:
                 _0x20200D6:
0008ac 2333      	TST  R19
0008ad f07a      	BRMI _0x20200DC
0008ae 940e 0b3b 	CALL SUBOPT_0x21
0008b0 81af      	LDD  R26,Y+7
0008b1 30a2      	CPI  R26,LOW(0x2)
0008b2 f050      	BRLO _0x20200DD
0008b3 2fe0      	MOV  R30,R16
0008b4 5fee      	SUBI R30,-LOW(2)
0008b5 940e 0b62 	CALL SUBOPT_0x27
0008b7 f429      	BRNE _0x20200DE
0008b8 2fe0      	MOV  R30,R16
0008b9 5fef      	SUBI R30,-LOW(1)
0008ba 93ea      	ST   -Y,R30
0008bb 2fa2      	MOV  R26,R18
0008bc dcfe      	RCALL _glcd_setpixel
                 _0x20200DE:
                 _0x20200DD:
                 _0x20200DC:
                 _0x20200D9:
                 _0x20200D8:
0008bd 85e8      	LDD  R30,Y+8
0008be 78e8      	ANDI R30,LOW(0x88)
0008bf 38e8      	CPI  R30,LOW(0x88)
0008c0 f071      	BREQ _0x20200E0
0008c1 85e8      	LDD  R30,Y+8
0008c2 78e0      	ANDI R30,LOW(0x80)
0008c3 f4c1      	BRNE _0x20200E2
0008c4 85ad      	LDD  R26,Y+13
0008c5 85be      	LDD  R27,Y+13+1
0008c6 e6e8      	LDI  R30,LOW(360)
0008c7 e0f1      	LDI  R31,HIGH(360)
0008c8 940e 0b2d 	CALL SUBOPT_0x1F
0008ca f01c      	BRLT _0x20200E4
0008cb 940e 0b36 	CALL SUBOPT_0x20
0008cd f40c      	BRGE _0x20200E5
                 _0x20200E4:
0008ce c00d      	RJMP _0x20200E3
                 _0x20200E5:
                 _0x20200E0:
0008cf 940e 0b52 	CALL SUBOPT_0x25
0008d1 f050      	BRLO _0x20200E6
0008d2 2fe0      	MOV  R30,R16
0008d3 5fee      	SUBI R30,-LOW(2)
0008d4 940e 0b6a 	CALL SUBOPT_0x28
0008d6 f429      	BRNE _0x20200E7
0008d7 2fe0      	MOV  R30,R16
0008d8 5fef      	SUBI R30,-LOW(1)
0008d9 93ea      	ST   -Y,R30
0008da 2fa4      	MOV  R26,R20
0008db dcdf      	RCALL _glcd_setpixel
                 _0x20200E7:
                 _0x20200E6:
                 _0x20200E3:
                 _0x20200E2:
0008dc 89aa      	LDD  R26,Y+18
0008dd 27bb      	CLR  R27
0008de 89e8      	LDD  R30,Y+16
0008df e0f0      	LDI  R31,0
0008e0 1bae      	SUB  R26,R30
0008e1 0bbf      	SBC  R27,R31
0008e2 018d      	MOVW R16,R26
0008e3 2311      	TST  R17
0008e4 f40a      	BRPL PC+2
0008e5 c050      	RJMP _0x20200E8
0008e6 85e8      	LDD  R30,Y+8
0008e7 78e2      	ANDI R30,LOW(0x82)
0008e8 38e2      	CPI  R30,LOW(0x82)
0008e9 f071      	BREQ _0x20200EA
0008ea 85e8      	LDD  R30,Y+8
0008eb 78e0      	ANDI R30,LOW(0x80)
0008ec f509      	BRNE _0x20200EC
0008ed 85ad      	LDD  R26,Y+13
0008ee 85be      	LDD  R27,Y+13+1
0008ef ebe4      	LDI  R30,LOW(180)
0008f0 e0f0      	LDI  R31,HIGH(180)
0008f1 940e 0b2d 	CALL SUBOPT_0x1F
0008f3 f01c      	BRLT _0x20200EE
0008f4 940e 0b36 	CALL SUBOPT_0x20
0008f6 f40c      	BRGE _0x20200EF
                 _0x20200EE:
0008f7 c016      	RJMP _0x20200ED
                 _0x20200EF:
                 _0x20200EA:
0008f8 2333      	TST  R19
0008f9 f0a2      	BRMI _0x20200F0
0008fa 940e 0b3b 	CALL SUBOPT_0x21
0008fc 81af      	LDD  R26,Y+7
0008fd 30a2      	CPI  R26,LOW(0x2)
0008fe f020      	BRLO _0x20200F2
                +
0008ff 3002     +CPI R16 , LOW ( 2 )
000900 e0e0     +LDI R30 , HIGH ( 2 )
000901 071e     +CPC R17 , R30
                 	__CPWRN 16,17,2
000902 f40c      	BRGE _0x20200F3
                 _0x20200F2:
000903 c00a      	RJMP _0x20200F1
                 _0x20200F3:
000904 2fe0      	MOV  R30,R16
000905 50e2      	SUBI R30,LOW(2)
000906 940e 0b62 	CALL SUBOPT_0x27
000908 f429      	BRNE _0x20200F4
000909 2fe0      	MOV  R30,R16
00090a 50e1      	SUBI R30,LOW(1)
00090b 93ea      	ST   -Y,R30
00090c 2fa2      	MOV  R26,R18
00090d dcad      	RCALL _glcd_setpixel
                 _0x20200F4:
                 _0x20200F1:
                 _0x20200F0:
                 _0x20200ED:
                 _0x20200EC:
00090e 85e8      	LDD  R30,Y+8
00090f 78e4      	ANDI R30,LOW(0x84)
000910 38e4      	CPI  R30,LOW(0x84)
000911 f091      	BREQ _0x20200F6
000912 85e8      	LDD  R30,Y+8
000913 78e0      	ANDI R30,LOW(0x80)
000914 f509      	BRNE _0x20200F8
000915 85ad      	LDD  R26,Y+13
000916 85be      	LDD  R27,Y+13+1
000917 54ac      	SUBI R26,LOW(-180)
000918 4fbf      	SBCI R27,HIGH(-180)
000919 940e 0b48 	CALL SUBOPT_0x23
00091b f03c      	BRLT _0x20200FA
00091c 85ad      	LDD  R26,Y+13
00091d 85be      	LDD  R27,Y+13+1
00091e 54ac      	SUBI R26,LOW(-180)
00091f 4fbf      	SBCI R27,HIGH(-180)
000920 940e 0b4d 	CALL SUBOPT_0x24
000922 f40c      	BRGE _0x20200FB
                 _0x20200FA:
000923 c012      	RJMP _0x20200F9
                 _0x20200FB:
                 _0x20200F6:
000924 940e 0b52 	CALL SUBOPT_0x25
000926 f020      	BRLO _0x20200FD
                +
000927 3002     +CPI R16 , LOW ( 2 )
000928 e0e0     +LDI R30 , HIGH ( 2 )
000929 071e     +CPC R17 , R30
                 	__CPWRN 16,17,2
00092a f40c      	BRGE _0x20200FE
                 _0x20200FD:
00092b c00a      	RJMP _0x20200FC
                 _0x20200FE:
00092c 2fe0      	MOV  R30,R16
00092d 50e2      	SUBI R30,LOW(2)
00092e 940e 0b6a 	CALL SUBOPT_0x28
000930 f429      	BRNE _0x20200FF
000931 2fe0      	MOV  R30,R16
000932 50e1      	SUBI R30,LOW(1)
000933 93ea      	ST   -Y,R30
000934 2fa4      	MOV  R26,R20
000935 dc85      	RCALL _glcd_setpixel
                 _0x20200FF:
                 _0x20200FC:
                 _0x20200F9:
                 _0x20200F8:
                 _0x20200E8:
000936 940e 0b7e 	CALL __LOADLOCR6
000938 9663      	ADIW R28,19
000939 9508      	RET
                 ; .FEND
                 _glcd_line2_G101:
                 ; .FSTART _glcd_line2_G101
00093a 940e 0b77 	CALL __SAVELOCR6
00093c 2f5a      	MOV  R21,R26
00093d 814e      	LDD  R20,Y+6
00093e 85a8      	LDD  R26,Y+8
00093f 27bb      	CLR  R27
000940 2fe4      	MOV  R30,R20
000941 e0f0      	LDI  R31,0
000942 1bae      	SUB  R26,R30
000943 0bbf      	SBC  R27,R31
000944 dc57      	RCALL _glcd_clipx
000945 2f1e      	MOV  R17,R30
000946 85a8      	LDD  R26,Y+8
000947 27bb      	CLR  R27
000948 27ee      	CLR  R30
000949 0fa4      	ADD  R26,R20
00094a 1fbe      	ADC  R27,R30
00094b dc50      	RCALL _glcd_clipx
00094c 2f0e      	MOV  R16,R30
00094d 81af      	LDD  R26,Y+7
00094e 27bb      	CLR  R27
00094f 2fe5      	MOV  R30,R21
000950 e0f0      	LDI  R31,0
000951 1bae      	SUB  R26,R30
000952 0bbf      	SBC  R27,R31
000953 dc56      	RCALL _glcd_clipy
000954 2f3e      	MOV  R19,R30
000955 81af      	LDD  R26,Y+7
000956 27bb      	CLR  R27
000957 27ee      	CLR  R30
000958 0fa5      	ADD  R26,R21
000959 1fbe      	ADC  R27,R30
00095a dc4f      	RCALL _glcd_clipy
00095b 2f2e      	MOV  R18,R30
00095c 931a      	ST   -Y,R17
00095d 933a      	ST   -Y,R19
00095e 930a      	ST   -Y,R16
00095f 2fa3      	MOV  R26,R19
000960 dd89      	RCALL _glcd_line
000961 931a      	ST   -Y,R17
000962 932a      	ST   -Y,R18
000963 930a      	ST   -Y,R16
000964 2fa2      	MOV  R26,R18
000965 dd84      	RCALL _glcd_line
000966 c056      	RJMP _0x2120006
                 ; .FEND
                 _glcd_quadrant_G101:
                 ; .FSTART _glcd_quadrant_G101
000967 940e 0b77 	CALL __SAVELOCR6
000969 2f4a      	MOV  R20,R26
00096a 85a8      	LDD  R26,Y+8
00096b 38a0      	CPI  R26,LOW(0x80)
00096c f418      	BRSH _0x2020101
00096d 81af      	LDD  R26,Y+7
00096e 34a0      	CPI  R26,LOW(0x40)
00096f f008      	BRLO _0x2020100
                 _0x2020101:
000970 c04c      	RJMP _0x2120006
                 _0x2020100:
                +
000971 9150 027f+LDS R21 , _glcd_state + ( 8 )
                 	__GETBRMN 21,_glcd_state,8
                 _0x2020103:
000973 2fe5      	MOV  R30,R21
000974 5051      	SUBI R21,1
000975 30e0      	CPI  R30,0
000976 f409      	BRNE PC+2
000977 c045      	RJMP _0x2020105
000978 81ee      	LDD  R30,Y+6
000979 30e0      	CPI  R30,0
00097a f409      	BRNE _0x2020106
00097b c041      	RJMP _0x2120006
                 _0x2020106:
00097c 940e 0b07 	CALL SUBOPT_0x19
00097e 2f0e      	MOV  R16,R30
00097f e0f0      	LDI  R31,0
000980 e0a5      	LDI  R26,LOW(5)
000981 e0b0      	LDI  R27,HIGH(5)
000982 1bae      	SUB  R26,R30
000983 0bbf      	SBC  R27,R31
000984 01fd      	MOVW R30,R26
000985 940e 0b99 	CALL __LSLW2
000987 940e 0b9e 	CALL __ASRW2
000989 019f      	MOVW R18,R30
00098a e010      	LDI  R17,LOW(0)
                 _0x2020108:
00098b 3440      	CPI  R20,64
00098c f459      	BRNE _0x202010A
00098d 940e 0b72 	CALL SUBOPT_0x29
00098f 931a      	ST   -Y,R17
000990 2fa0      	MOV  R26,R16
000991 dfa8      	RCALL _glcd_line2_G101
000992 940e 0b72 	CALL SUBOPT_0x29
000994 930a      	ST   -Y,R16
000995 2fa1      	MOV  R26,R17
000996 dfa3      	RCALL _glcd_line2_G101
000997 c00f      	RJMP _0x202010B
                 _0x202010A:
000998 940e 0b72 	CALL SUBOPT_0x29
00099a 931a      	ST   -Y,R17
00099b 930a      	ST   -Y,R16
00099c 2fe4      	MOV  R30,R20
00099d e0f0      	LDI  R31,0
00099e 93fa      	ST   -Y,R31
00099f 93ea      	ST   -Y,R30
0009a0 e0e0      	LDI  R30,LOW(0)
0009a1 e0f0      	LDI  R31,HIGH(0)
0009a2 93fa      	ST   -Y,R31
0009a3 93ea      	ST   -Y,R30
0009a4 e0a0      	LDI  R26,LOW(0)
0009a5 e0b0      	LDI  R27,0
0009a6 de3c      	RCALL _glcd_plot8_G101
                 _0x202010B:
0009a7 5f1f      	SUBI R17,-1
0009a8 2333      	TST  R19
0009a9 f41a      	BRPL _0x202010C
0009aa 2fe1      	MOV  R30,R17
0009ab e0f0      	LDI  R31,0
0009ac c008      	RJMP _0x2020188
                 _0x202010C:
0009ad 5001      	SUBI R16,1
0009ae 2fa1      	MOV  R26,R17
0009af 27bb      	CLR  R27
0009b0 2fe0      	MOV  R30,R16
0009b1 e0f0      	LDI  R31,0
0009b2 1bae      	SUB  R26,R30
0009b3 0bbf      	SBC  R27,R31
0009b4 01fd      	MOVW R30,R26
                 _0x2020188:
0009b5 0fee      	LSL  R30
0009b6 1fff      	ROL  R31
0009b7 9631      	ADIW R30,1
                +
0009b8 0f2e     +ADD R18 , R30
0009b9 1f3f     +ADC R19 , R31
                 	__ADDWRR 18,19,30,31
0009ba 1701      	CP   R16,R17
0009bb f678      	BRSH _0x2020108
0009bc cfb6      	RJMP _0x2020103
                 _0x2020105:
                 _0x2120006:
0009bd 940e 0b7e 	CALL __LOADLOCR6
0009bf 9629      	ADIW R28,9
0009c0 9508      	RET
                 ; .FEND
                 _glcd_circle:
                 ; .FSTART _glcd_circle
0009c1 940e 0b00 	CALL SUBOPT_0x18
0009c3 931a      	ST   -Y,R17
0009c4 e8af      	LDI  R26,LOW(143)
0009c5 dfa1      	RCALL _glcd_quadrant_G101
                 _0x2120005:
0009c6 940e 0b80 	CALL __LOADLOCR4
0009c8 9626      	ADIW R28,6
0009c9 9508      	RET
                 ; .FEND
                 
                 	.CSEG
                 _memset:
                 ; .FSTART _memset
0009ca 93ba      	ST   -Y,R27
0009cb 93aa      	ST   -Y,R26
0009cc 81b9          ldd  r27,y+1
0009cd 81a8          ld   r26,y
0009ce 9610          adiw r26,0
0009cf f031          breq memset1
0009d0 81fc          ldd  r31,y+4
0009d1 81eb          ldd  r30,y+3
0009d2 816a          ldd  r22,y+2
                 memset0:
0009d3 9361          st   z+,r22
0009d4 9711          sbiw r26,1
0009d5 f7e9          brne memset0
                 memset1:
0009d6 81eb          ldd  r30,y+3
0009d7 81fc          ldd  r31,y+4
0009d8 c051      	RJMP _0x2120003
                 ; .FEND
                 
                 	.CSEG
                 _glcd_getmask:
                 ; .FSTART _glcd_getmask
0009d9 940e 0a7f 	CALL SUBOPT_0x6
0009db 2fe1      	MOV  R30,R17
0009dc e0f0      	LDI  R31,0
0009dd 5ce8      	SUBI R30,LOW(-__glcd_mask*2)
0009de 4ffd      	SBCI R31,HIGH(-__glcd_mask*2)
0009df 91a4      	LPM  R26,Z
0009e0 2fe0      	MOV  R30,R16
0009e1 940e 0b89 	CALL __LSLB12
                 _0x2120004:
0009e3 8119      	LDD  R17,Y+1
0009e4 8108      	LDD  R16,Y+0
0009e5 9623      	ADIW R28,3
0009e6 9508      	RET
                 ; .FEND
                 _glcd_mappixcolor1bit:
                 ; .FSTART _glcd_mappixcolor1bit
0009e7 940e 0b79 	CALL __SAVELOCR4
0009e9 2f0a      	MOV  R16,R26
0009ea 813c      	LDD  R19,Y+4
0009eb 2fe0      	MOV  R30,R16
0009ec 30e7      	CPI  R30,LOW(0x7)
0009ed f011      	BREQ _0x2080007
0009ee 30ea      	CPI  R30,LOW(0xA)
0009ef f419      	BRNE _0x2080008
                 _0x2080007:
0009f0 9110 0277 	LDS  R17,_glcd_state
0009f2 c009      	RJMP _0x2080009
                 _0x2080008:
0009f3 30e9      	CPI  R30,LOW(0x9)
0009f4 f419      	BRNE _0x208000B
                +
0009f5 9110 0278+LDS R17 , _glcd_state + ( 1 )
                 	__GETBRMN 17,_glcd_state,1
0009f7 c004      	RJMP _0x2080009
                 _0x208000B:
0009f8 30e8      	CPI  R30,LOW(0x8)
0009f9 f489      	BRNE _0x2080005
                +
0009fa 9110 0287+LDS R17 , _glcd_state + ( 16 )
                 	__GETBRMN 17,_glcd_state,16
                 _0x2080009:
                +
0009fc 91e0 0278+LDS R30 , _glcd_state + ( 1 )
                 	__GETB1MN _glcd_state,1
0009fe 30e0      	CPI  R30,0
0009ff f039      	BREQ _0x208000E
000a00 3010      	CPI  R17,0
000a01 f011      	BREQ _0x208000F
000a02 efef      	LDI  R30,LOW(255)
000a03 c024      	RJMP _0x2120002
                 _0x208000F:
000a04 2fe3      	MOV  R30,R19
000a05 95e0      	COM  R30
000a06 c021      	RJMP _0x2120002
                 _0x208000E:
000a07 3010      	CPI  R17,0
000a08 f411      	BRNE _0x2080011
000a09 e0e0      	LDI  R30,LOW(0)
000a0a c01d      	RJMP _0x2120002
                 _0x2080011:
                 _0x2080005:
000a0b 2fe3      	MOV  R30,R19
000a0c c01b      	RJMP _0x2120002
                 ; .FEND
                 _glcd_readmem:
                 ; .FSTART _glcd_readmem
000a0d 940e 0b79 	CALL __SAVELOCR4
000a0f 018d      	MOVW R16,R26
000a10 813c      	LDD  R19,Y+4
000a11 2fe3      	MOV  R30,R19
000a12 30e1      	CPI  R30,LOW(0x1)
000a13 f419      	BRNE _0x2080015
000a14 01f8      	MOVW R30,R16
000a15 91e4      	LPM  R30,Z
000a16 c011      	RJMP _0x2120002
                 _0x2080015:
000a17 30e2      	CPI  R30,LOW(0x2)
000a18 f421      	BRNE _0x2080016
000a19 01d8      	MOVW R26,R16
000a1a 940e 0baf 	CALL __EEPROMRDB
000a1c c00b      	RJMP _0x2120002
                 _0x2080016:
000a1d 30e3      	CPI  R30,LOW(0x3)
000a1e f439      	BRNE _0x2080018
000a1f 01d8      	MOVW R26,R16
                +
000a20 91e0 0290+LDS R30 , _glcd_state + ( 25 )
000a22 91f0 0291+LDS R31 , _glcd_state + ( 25 ) + 1
000a24 9509     +ICALL
                 	__CALL1MN _glcd_state,25
000a25 c002      	RJMP _0x2120002
                 _0x2080018:
000a26 01d8      	MOVW R26,R16
000a27 91ec      	LD   R30,X
                 _0x2120002:
000a28 940e 0b80 	CALL __LOADLOCR4
                 _0x2120003:
000a2a 9625      	ADIW R28,5
000a2b 9508      	RET
                 ; .FEND
                 _glcd_writemem:
                 ; .FSTART _glcd_writemem
000a2c 940e 0b79 	CALL __SAVELOCR4
000a2e 2f1a      	MOV  R17,R26
                +
000a2f 812c     +LDD R18 , Y + 4
000a30 813d     +LDD R19 , Y + 4 + 1
                 	__GETWRS 18,19,4
000a31 810e      	LDD  R16,Y+6
000a32 2fe0      	MOV  R30,R16
000a33 30e0      	CPI  R30,0
000a34 f421      	BRNE _0x208001C
000a35 2fe1      	MOV  R30,R17
000a36 01d9      	MOVW R26,R18
000a37 93ec      	ST   X,R30
000a38 c011      	RJMP _0x208001B
                 _0x208001C:
000a39 30e2      	CPI  R30,LOW(0x2)
000a3a f429      	BRNE _0x208001D
000a3b 2fe1      	MOV  R30,R17
000a3c 01d9      	MOVW R26,R18
000a3d 940e 0bbb 	CALL __EEPROMWRB
000a3f c00a      	RJMP _0x208001B
                 _0x208001D:
000a40 30e3      	CPI  R30,LOW(0x3)
000a41 f441      	BRNE _0x208001B
000a42 933a      	ST   -Y,R19
000a43 932a      	ST   -Y,R18
000a44 2fa1      	MOV  R26,R17
                +
000a45 91e0 0292+LDS R30 , _glcd_state + ( 27 )
000a47 91f0 0293+LDS R31 , _glcd_state + ( 27 ) + 1
000a49 9509     +ICALL
                 	__CALL1MN _glcd_state,27
                 _0x208001B:
000a4a 940e 0b80 	CALL __LOADLOCR4
                 _0x2120001:
000a4c 9627      	ADIW R28,7
000a4d 9508      	RET
                 ; .FEND
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 
                 	.CSEG
                 
                 	.CSEG
                 
                 	.CSEG
                 
                 	.CSEG
                 
                 	.DSEG
                 
                 	.CSEG
                 
                 	.DSEG
                 _glcd_state:
000277           	.BYTE 0x1D
                 _ks0108_coord_G100:
000294           	.BYTE 0x3
                 __seed_G108:
000297           	.BYTE 0x4
                 
                 	.CSEG
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x0:
000a4e edac      	LDI  R26,LOW(1500)
000a4f e0b5      	LDI  R27,HIGH(1500)
000a50 940e 0bcc 	CALL _delay_ms
000a52 940c 0324 	JMP  _glcd_clear
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x1:
000a54 93ea      	ST   -Y,R30
000a55 e2ec      	LDI  R30,LOW(44)
000a56 93ea      	ST   -Y,R30
000a57 e0aa      	LDI  R26,LOW(10)
000a58 940e 06ea 	CALL _glcd_line
000a5a e1e4      	LDI  R30,LOW(20)
000a5b 93ea      	ST   -Y,R30
000a5c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x2:
000a5d 93ea      	ST   -Y,R30
000a5e e0aa      	LDI  R26,LOW(10)
000a5f 940e 06ea 	CALL _glcd_line
000a61 e2e6      	LDI  R30,LOW(38)
000a62 93ea      	ST   -Y,R30
000a63 e0ea      	LDI  R30,LOW(10)
000a64 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0x3:
000a65 93ea      	ST   -Y,R30
000a66 e4e0      	LDI  R30,LOW(64)
000a67 93ea      	ST   -Y,R30
000a68 e0a4      	LDI  R26,LOW(4)
000a69 940e 06ea 	CALL _glcd_line
000a6b e7ed      	LDI  R30,LOW(125)
000a6c 93ea      	ST   -Y,R30
000a6d e2e0      	LDI  R30,LOW(32)
000a6e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0x4:
000a6f 93ea      	ST   -Y,R30
000a70 e1e7      	LDI  R30,LOW(23)
000a71 93ea      	ST   -Y,R30
000a72 e2a1      	LDI  R26,LOW(33)
000a73 940e 06ea 	CALL _glcd_line
000a75 e0e4      	LDI  R30,LOW(4)
000a76 93ea      	ST   -Y,R30
000a77 e2e1      	LDI  R30,LOW(33)
000a78 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x5:
000a79 93ea      	ST   -Y,R30
000a7a e1e8      	LDI  R30,LOW(24)
000a7b 93ea      	ST   -Y,R30
000a7c e1a7      	LDI  R26,LOW(23)
000a7d 940c 06ea 	JMP  _glcd_line
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x6:
000a7f 931a      	ST   -Y,R17
000a80 930a      	ST   -Y,R16
000a81 2f1a      	MOV  R17,R26
000a82 810a      	LDD  R16,Y+2
000a83 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x7:
000a84 98c1      	CBI  0x18,1
000a85 efef      	LDI  R30,LOW(255)
000a86 bbea      	OUT  0x1A,R30
000a87 bb1b      	OUT  0x1B,R17
000a88 940e 0241 	CALL _ks0108_enable_G100
000a8a 940c 0245 	JMP  _ks0108_disable_G100
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x8:
000a8c 95e6      	LSR  R30
000a8d 95e6      	LSR  R30
000a8e 95e6      	LSR  R30
000a8f 2fae      	MOV  R26,R30
000a90 940c 0281 	JMP  _ks0108_gotoxp_G100
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x9:
000a92 940e 02a5 	CALL _ks0108_wrdata_G100
000a94 940c 0290 	JMP  _ks0108_nextx_G100
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xA:
000a96 0fea      	ADD  R30,R26
000a97 1ffb      	ADC  R31,R27
000a98 83ee      	STD  Y+6,R30
000a99 83ff      	STD  Y+6+1,R31
000a9a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:8 WORDS
                 SUBOPT_0xB:
000a9b 85ec      	LDD  R30,Y+12
000a9c 93ea      	ST   -Y,R30
000a9d 81ef      	LDD  R30,Y+7
000a9e 85f8      	LDD  R31,Y+7+1
000a9f 9631      	ADIW R30,1
000aa0 83ef      	STD  Y+7,R30
000aa1 87f8      	STD  Y+7+1,R31
000aa2 9731      	SBIW R30,1
000aa3 93fa      	ST   -Y,R31
000aa4 93ea      	ST   -Y,R30
000aa5 e0a0      	LDI  R26,LOW(0)
000aa6 940c 0a2c 	JMP  _glcd_writemem
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:15 WORDS
                 SUBOPT_0xC:
000aa8 85ec      	LDD  R30,Y+12
000aa9 93ea      	ST   -Y,R30
000aaa 81ef      	LDD  R30,Y+7
000aab 85f8      	LDD  R31,Y+7+1
000aac 9631      	ADIW R30,1
000aad 83ef      	STD  Y+7,R30
000aae 87f8      	STD  Y+7+1,R31
000aaf 9731      	SBIW R30,1
000ab0 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0xD:
000ab1 2766      	CLR  R22
000ab2 2777      	CLR  R23
000ab3 01df      	MOVW R26,R30
000ab4 01cb      	MOVW R24,R22
000ab5 940c 0a0d 	JMP  _glcd_readmem
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xE:
000ab7 935a      	ST   -Y,R21
000ab8 85aa      	LDD  R26,Y+10
000ab9 940c 09e7 	JMP  _glcd_mappixcolor1bit
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0xF:
000abb 930a      	ST   -Y,R16
000abc 9503      	INC  R16
000abd 89e8      	LDD  R30,Y+16
000abe 93ea      	ST   -Y,R30
000abf 935a      	ST   -Y,R21
000ac0 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x10:
000ac1 930a      	ST   -Y,R16
000ac2 9503      	INC  R16
000ac3 89a8      	LDD  R26,Y+16
000ac4 940e 02b8 	CALL _ks0108_rdbyte_G100
000ac6 23e4      	AND  R30,R20
000ac7 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x11:
000ac8 2f5e      	MOV  R21,R30
000ac9 85ec      	LDD  R30,Y+12
000aca 93ea      	ST   -Y,R30
000acb 81af      	LDD  R26,Y+7
000acc 85b8      	LDD  R27,Y+7+1
000acd 2788      	CLR  R24
000ace 2799      	CLR  R25
000acf 940e 0a0d 	CALL _glcd_readmem
000ad1 2e1e      	MOV  R1,R30
000ad2 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x12:
000ad3 930a      	ST   -Y,R16
000ad4 9503      	INC  R16
000ad5 89e8      	LDD  R30,Y+16
000ad6 93ea      	ST   -Y,R30
000ad7 85ee      	LDD  R30,Y+14
000ad8 93ea      	ST   -Y,R30
000ad9 85e9      	LDD  R30,Y+9
000ada 85fa      	LDD  R31,Y+9+1
000adb 9631      	ADIW R30,1
000adc 87e9      	STD  Y+9,R30
000add 87fa      	STD  Y+9+1,R31
000ade 9731      	SBIW R30,1
000adf cfd1      	RJMP SUBOPT_0xD
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x13:
000ae0 931a      	ST   -Y,R17
000ae1 930a      	ST   -Y,R16
000ae2 018d      	MOVW R16,R26
000ae3 2400      	CLR  R0
000ae4 1600      	CP   R0,R16
000ae5 0601      	CPC  R0,R17
000ae6 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x14:
                +
000ae7 91e0 027b+LDS R30 , _glcd_state + ( 4 )
000ae9 91f0 027c+LDS R31 , _glcd_state + ( 4 ) + 1
                 	__GETW1MN _glcd_state,4
000aeb 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x15:
000aec 01f8      	MOVW R30,R16
                +
000aed 5f0f     +SUBI R16 , LOW ( - 1 )
000aee 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
000aef 9004      	LPM  R0,Z
000af0 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x16:
000af1 e0f0      	LDI  R31,0
000af2 0fea      	ADD  R30,R26
000af3 1ffb      	ADC  R31,R27
000af4 018f      	MOVW R16,R30
000af5 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x17:
000af6 93ea      	ST   -Y,R30
000af7 e0e0      	LDI  R30,LOW(0)
000af8 93ea      	ST   -Y,R30
000af9 e0e0      	LDI  R30,LOW(0)
000afa e0f0      	LDI  R31,HIGH(0)
000afb 93fa      	ST   -Y,R31
000afc 93ea      	ST   -Y,R30
000afd e0a9      	LDI  R26,LOW(9)
000afe 940c 03bf 	JMP  _glcd_block
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x18:
000b00 d078      	RCALL __SAVELOCR4
000b01 2f1a      	MOV  R17,R26
000b02 810c      	LDD  R16,Y+4
000b03 813d      	LDD  R19,Y+5
000b04 933a      	ST   -Y,R19
000b05 930a      	ST   -Y,R16
000b06 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x19:
000b07 81ee      	LDD  R30,Y+6
000b08 50e1      	SUBI R30,LOW(1)
000b09 83ee      	STD  Y+6,R30
000b0a 5fef      	SUBI R30,-LOW(1)
000b0b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x1A:
000b0c 933a      	ST   -Y,R19
000b0d 85aa      	LDD  R26,Y+10
000b0e 940c 06c8 	JMP  _glcd_putpixelm_G101
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x1B:
000b10 85a9      	LDD  R26,Y+9
000b11 85ba      	LDD  R27,Y+9+1
000b12 0fea      	ADD  R30,R26
000b13 1ffb      	ADC  R31,R27
000b14 87e9      	STD  Y+9,R30
000b15 87fa      	STD  Y+9+1,R31
000b16 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x1C:
000b17 85e9      	LDD  R30,Y+9
000b18 85fa      	LDD  R31,Y+9+1
000b19 1bea      	SUB  R30,R26
000b1a 0bfb      	SBC  R31,R27
000b1b 87e9      	STD  Y+9,R30
000b1c 87fa      	STD  Y+9+1,R31
000b1d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x1D:
000b1e e0f0      	LDI  R31,0
000b1f 1bae      	SUB  R26,R30
000b20 0bbf      	SBC  R27,R31
000b21 019d      	MOVW R18,R26
000b22 89a9      	LDD  R26,Y+17
000b23 27bb      	CLR  R27
000b24 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x1E:
000b25 e0f0      	LDI  R31,0
000b26 0fea      	ADD  R30,R26
000b27 1ffb      	ADC  R31,R27
000b28 01af      	MOVW R20,R30
000b29 85e8      	LDD  R30,Y+8
000b2a 78e1      	ANDI R30,LOW(0x81)
000b2b 38e1      	CPI  R30,LOW(0x81)
000b2c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:15 WORDS
                 SUBOPT_0x1F:
000b2d 1bea      	SUB  R30,R26
000b2e 0bfb      	SBC  R31,R27
000b2f 010f      	MOVW R0,R30
000b30 01df      	MOVW R26,R30
000b31 85eb      	LDD  R30,Y+11
000b32 85fc      	LDD  R31,Y+11+1
000b33 17ae      	CP   R26,R30
000b34 07bf      	CPC  R27,R31
000b35 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x20:
000b36 85e9      	LDD  R30,Y+9
000b37 85fa      	LDD  R31,Y+9+1
000b38 15e0      	CP   R30,R0
000b39 05f1      	CPC  R31,R1
000b3a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x21:
000b3b 930a      	ST   -Y,R16
000b3c 2fa2      	MOV  R26,R18
000b3d 940c 05bb 	JMP  _glcd_setpixel
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x22:
000b3f 930a      	ST   -Y,R16
000b40 2fa2      	MOV  R26,R18
000b41 50a2      	SUBI R26,LOW(2)
000b42 940e 036b 	CALL _glcd_getpixel
000b44 2fae      	MOV  R26,R30
000b45 81ee      	LDD  R30,Y+6
000b46 17ea      	CP   R30,R26
000b47 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x23:
000b48 85eb      	LDD  R30,Y+11
000b49 85fc      	LDD  R31,Y+11+1
000b4a 17ae      	CP   R26,R30
000b4b 07bf      	CPC  R27,R31
000b4c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x24:
000b4d 85e9      	LDD  R30,Y+9
000b4e 85fa      	LDD  R31,Y+9+1
000b4f 17ea      	CP   R30,R26
000b50 07fb      	CPC  R31,R27
000b51 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x25:
000b52 930a      	ST   -Y,R16
000b53 2fa4      	MOV  R26,R20
000b54 940e 05bb 	CALL _glcd_setpixel
000b56 81af      	LDD  R26,Y+7
000b57 30a2      	CPI  R26,LOW(0x2)
000b58 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x26:
000b59 930a      	ST   -Y,R16
000b5a 2fa4      	MOV  R26,R20
000b5b 5fae      	SUBI R26,-LOW(2)
000b5c 940e 036b 	CALL _glcd_getpixel
000b5e 2fae      	MOV  R26,R30
000b5f 81ee      	LDD  R30,Y+6
000b60 17ea      	CP   R30,R26
000b61 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x27:
000b62 93ea      	ST   -Y,R30
000b63 2fa2      	MOV  R26,R18
000b64 940e 036b 	CALL _glcd_getpixel
000b66 2fae      	MOV  R26,R30
000b67 81ee      	LDD  R30,Y+6
000b68 17ea      	CP   R30,R26
000b69 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x28:
000b6a 93ea      	ST   -Y,R30
000b6b 2fa4      	MOV  R26,R20
000b6c 940e 036b 	CALL _glcd_getpixel
000b6e 2fae      	MOV  R26,R30
000b6f 81ee      	LDD  R30,Y+6
000b70 17ea      	CP   R30,R26
000b71 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x29:
000b72 85e8      	LDD  R30,Y+8
000b73 93ea      	ST   -Y,R30
000b74 85e8      	LDD  R30,Y+8
000b75 93ea      	ST   -Y,R30
000b76 9508      	RET
                 
                 ;RUNTIME LIBRARY
                 
                 	.CSEG
                 __SAVELOCR6:
000b77 935a      	ST   -Y,R21
                 __SAVELOCR5:
000b78 934a      	ST   -Y,R20
                 __SAVELOCR4:
000b79 933a      	ST   -Y,R19
                 __SAVELOCR3:
000b7a 932a      	ST   -Y,R18
                 __SAVELOCR2:
000b7b 931a      	ST   -Y,R17
000b7c 930a      	ST   -Y,R16
000b7d 9508      	RET
                 
                 __LOADLOCR6:
000b7e 815d      	LDD  R21,Y+5
                 __LOADLOCR5:
000b7f 814c      	LDD  R20,Y+4
                 __LOADLOCR4:
000b80 813b      	LDD  R19,Y+3
                 __LOADLOCR3:
000b81 812a      	LDD  R18,Y+2
                 __LOADLOCR2:
000b82 8119      	LDD  R17,Y+1
000b83 8108      	LD   R16,Y
000b84 9508      	RET
                 
                 __ANEGW1:
000b85 95f1      	NEG  R31
000b86 95e1      	NEG  R30
000b87 40f0      	SBCI R31,0
000b88 9508      	RET
                 
                 __LSLB12:
000b89 23ee      	TST  R30
000b8a 2e0e      	MOV  R0,R30
000b8b 2fea      	MOV  R30,R26
000b8c f019      	BREQ __LSLB12R
                 __LSLB12L:
000b8d 0fee      	LSL  R30
000b8e 940a      	DEC  R0
000b8f f7e9      	BRNE __LSLB12L
                 __LSLB12R:
000b90 9508      	RET
                 
                 __LSRB12:
000b91 23ee      	TST  R30
000b92 2e0e      	MOV  R0,R30
000b93 2fea      	MOV  R30,R26
000b94 f019      	BREQ __LSRB12R
                 __LSRB12L:
000b95 95e6      	LSR  R30
000b96 940a      	DEC  R0
000b97 f7e9      	BRNE __LSRB12L
                 __LSRB12R:
000b98 9508      	RET
                 
                 __LSLW2:
000b99 0fee      	LSL  R30
000b9a 1fff      	ROL  R31
000b9b 0fee      	LSL  R30
000b9c 1fff      	ROL  R31
000b9d 9508      	RET
                 
                 __ASRW2:
000b9e 95f5      	ASR  R31
000b9f 95e7      	ROR  R30
000ba0 95f5      	ASR  R31
000ba1 95e7      	ROR  R30
000ba2 9508      	RET
                 
                 __MULW12U:
000ba3 9ffa      	MUL  R31,R26
000ba4 2df0      	MOV  R31,R0
000ba5 9feb      	MUL  R30,R27
000ba6 0df0      	ADD  R31,R0
000ba7 9fea      	MUL  R30,R26
000ba8 2de0      	MOV  R30,R0
000ba9 0df1      	ADD  R31,R1
000baa 9508      	RET
                 
                 __GETW1P:
000bab 91ed      	LD   R30,X+
000bac 91fc      	LD   R31,X
000bad 9711      	SBIW R26,1
000bae 9508      	RET
                 
                 __EEPROMRDB:
000baf 99e1      	SBIC EECR,EEWE
000bb0 cffe      	RJMP __EEPROMRDB
000bb1 93ff      	PUSH R31
000bb2 b7ff      	IN   R31,SREG
000bb3 94f8      	CLI
000bb4 bbae      	OUT  EEARL,R26
000bb5 bbbf      	OUT  EEARH,R27
000bb6 9ae0      	SBI  EECR,EERE
000bb7 b3ed      	IN   R30,EEDR
000bb8 bfff      	OUT  SREG,R31
000bb9 91ff      	POP  R31
000bba 9508      	RET
                 
                 __EEPROMWRB:
000bbb 9be1      	SBIS EECR,EEWE
000bbc c002      	RJMP __EEPROMWRB1
000bbd 95a8      	WDR
000bbe cffc      	RJMP __EEPROMWRB
                 __EEPROMWRB1:
000bbf b79f      	IN   R25,SREG
000bc0 94f8      	CLI
000bc1 bbae      	OUT  EEARL,R26
000bc2 bbbf      	OUT  EEARH,R27
000bc3 9ae0      	SBI  EECR,EERE
000bc4 b38d      	IN   R24,EEDR
000bc5 17e8      	CP   R30,R24
000bc6 f019      	BREQ __EEPROMWRB0
000bc7 bbed      	OUT  EEDR,R30
000bc8 9ae2      	SBI  EECR,EEMWE
000bc9 9ae1      	SBI  EECR,EEWE
                 __EEPROMWRB0:
000bca bf9f      	OUT  SREG,R25
000bcb 9508      	RET
                 
                 _delay_ms:
000bcc 9610      	adiw r26,0
000bcd f039      	breq __delay_ms1
                 __delay_ms0:
000bce 95a8      	wdr
                +
000bcf ed80     +LDI R24 , LOW ( 0x7D0 )
000bd0 e097     +LDI R25 , HIGH ( 0x7D0 )
                +__DELAY_USW_LOOP :
000bd1 9701     +SBIW R24 , 1
000bd2 f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 0x7D0
000bd3 9711      	sbiw r26,1
000bd4 f7c9      	brne __delay_ms0
                 __delay_ms1:
000bd5 9508      	ret
                 
                 ;END OF CODE MARKER
                 __END_OF_CODE:


RESOURCE USE INFORMATION
------------------------

Notice:
The register and instruction counts are symbol table hit counts,
and hence implicitly used resources are not counted, eg, the
'lpm' instruction without operands implicitly uses r0 and z,
none of which are counted.

x,y,z are separate entities in the symbol table and are
counted separately from r26..r31 here.

.dseg memory usage only counts static data declared with .byte

ATmega32 register use summary:
r0 :  24 r1 :   8 r2 :   0 r3 :   0 r4 :   4 r5 :   3 r6 :   4 r7 :   3 
r8 :   3 r9 :   1 r10:   3 r11:   1 r12:   0 r13:   0 r14:   0 r15:   0 
r16: 113 r17: 130 r18:  75 r19:  69 r20:  42 r21:  48 r22:   6 r23:   1 
r24:  13 r25:   6 r26: 356 r27: 110 r28:  22 r29:   1 r30: 855 r31: 168 
x  :  14 y  : 519 z  :  19 
Registers used: 29 out of 35 (82.9%)

ATmega32 instruction use summary:
.lds  :   0 .lds.l:   0 .sts  :   0 .sts.l:   0 adc   :  18 add   :  30 
adiw  :  26 and   :  10 andi  :  25 asr   :   2 bclr  :   0 bld   :   0 
brbc  :   0 brbs  :   0 brcc  :   0 brcs  :   0 break :   0 breq  :  37 
brge  :  14 brhc  :   0 brhs  :   0 brid  :   0 brie  :   0 brlo  :  17 
brlt  :  13 brmi  :   4 brne  :  88 brpl  :   5 brsh  :  25 brtc  :   0 
brts  :   0 brvc  :   0 brvs  :   0 bset  :   0 bst   :   0 call  : 199 
cbi   :   9 cbr   :   0 clc   :   0 clh   :   0 cli   :   3 cln   :   0 
clr   :  37 cls   :   0 clt   :   0 clv   :   0 clz   :   0 com   :   8 
cp    :  43 cpc   :  25 cpi   :  96 cpse  :   0 dec   :   3 des   :   0 
eor   :   1 fmul  :   0 fmuls :   0 fmulsu:   0 icall :   2 ijmp  :   0 
in    :   5 inc   :   6 jmp   :  41 ld    :  13 ldd   : 278 ldi   : 249 
lds   :  45 lpm   :  29 lsl   :   7 lsr   :  15 mov   : 169 movw  :  50 
mul   :   3 muls  :   0 mulsu :   0 neg   :   2 nop   :   2 or    :   7 
ori   :   2 out   :  51 pop   :  11 push  :  11 rcall :  72 ret   :  63 
reti  :   0 rjmp  : 127 rol   :   5 ror   :   2 sbc   :  11 sbci  :  13 
sbi   :  19 sbic  :   1 sbis  :   1 sbiw  :  19 sbr   :   0 sbrc  :   0 
sbrs  :   2 sec   :   0 seh   :   0 sei   :   0 sen   :   0 ser   :   0 
ses   :   0 set   :   0 sev   :   0 sez   :   0 sleep :   0 spm   :   0 
st    : 174 std   :  69 sts   :  29 sub   :  21 subi  :  58 swap  :   1 
tst   :  11 wdr   :   2 
Instructions used: 65 out of 116 (56.0%)

ATmega32 memory use summary [bytes]:
Segment   Begin    End      Code   Data   Used    Size   Use%
---------------------------------------------------------------
[.cseg] 0x000000 0x0017ac   5478    582   6060   32768  18.5%
[.dseg] 0x000060 0x00029b      0     59     59    2048   2.9%
[.eseg] 0x000000 0x000000      0      0      0    1024   0.0%

Assembly complete, 0 errors, 12 warnings
