
AVRASM ver. 2.1.30  E:\University\Term 6\Micro\ex-11\ex-11\Debug\List\ex-11.asm Tue May 21 00:24:13 2024

E:\University\Term 6\Micro\ex-11\ex-11\Debug\List\ex-11.asm(1083): warning: Register r5 already defined by the .DEF directive
E:\University\Term 6\Micro\ex-11\ex-11\Debug\List\ex-11.asm(1084): warning: Register r4 already defined by the .DEF directive
E:\University\Term 6\Micro\ex-11\ex-11\Debug\List\ex-11.asm(1085): warning: Register r7 already defined by the .DEF directive
E:\University\Term 6\Micro\ex-11\ex-11\Debug\List\ex-11.asm(1086): warning: Register r6 already defined by the .DEF directive
E:\University\Term 6\Micro\ex-11\ex-11\Debug\List\ex-11.asm(1087): warning: Register r9 already defined by the .DEF directive
E:\University\Term 6\Micro\ex-11\ex-11\Debug\List\ex-11.asm(1088): warning: Register r8 already defined by the .DEF directive
E:\University\Term 6\Micro\ex-11\ex-11\Debug\List\ex-11.asm(1089): warning: Register r11 already defined by the .DEF directive
E:\University\Term 6\Micro\ex-11\ex-11\Debug\List\ex-11.asm(1090): warning: Register r12 already defined by the .DEF directive
E:\University\Term 6\Micro\ex-11\ex-11\Debug\List\ex-11.asm(1091): warning: Register r13 already defined by the .DEF directive
E:\University\Term 6\Micro\ex-11\ex-11\Debug\List\ex-11.asm(1092): warning: Register r10 already defined by the .DEF directive
                 
                 
                 ;CodeVisionAVR C Compiler V3.40 Advanced
                 ;(C) Copyright 1998-2020 Pavel Haiduc, HP InfoTech S.R.L.
                 ;http://www.hpinfotech.ro
                 
                 ;Build configuration    : Debug
                 ;Chip type              : ATmega32
                 ;Program type           : Application
                 ;Clock frequency        : 8.000000 MHz
                 ;Memory model           : Small
                 ;Optimize for           : Size
                 ;(s)printf features     : int, width
                 ;(s)scanf features      : int, width
                 ;External RAM size      : 0
                 ;Data Stack size        : 512 byte(s)
                 ;Heap size              : 0 byte(s)
                 ;Promote 'char' to 'int': Yes
                 ;'char' is unsigned     : Yes
                 ;8 bit enums            : Yes
                 ;Global 'const' stored in FLASH: Yes
                 ;Enhanced function parameter passing: Mode 1
                 ;Enhanced core instructions: On
                 ;Automatic register allocation for global variables: On
                 ;Smart register allocation: On
                 
                 	#define _MODEL_SMALL_
                 
                 	#pragma AVRPART ADMIN PART_NAME ATmega32
                 	#pragma AVRPART MEMORY PROG_FLASH 32768
                 	#pragma AVRPART MEMORY EEPROM 1024
                 	#pragma AVRPART MEMORY INT_SRAM SIZE 2048
                 	#pragma AVRPART MEMORY INT_SRAM START_ADDR 0x60
                 
                 	#define CALL_SUPPORTED 1
                 
                 	.LISTMAC
                 	.EQU UDRE=0x5
                 	.EQU RXC=0x7
                 	.EQU USR=0xB
                 	.EQU UDR=0xC
                 	.EQU SPSR=0xE
                 	.EQU SPDR=0xF
                 	.EQU EERE=0x0
                 	.EQU EEWE=0x1
                 	.EQU EEMWE=0x2
                 	.EQU EECR=0x1C
                 	.EQU EEDR=0x1D
                 	.EQU EEARL=0x1E
                 	.EQU EEARH=0x1F
                 	.EQU WDTCR=0x21
                 	.EQU MCUCR=0x35
                 	.EQU GICR=0x3B
                 	.EQU SPL=0x3D
                 	.EQU SPH=0x3E
                 	.EQU SREG=0x3F
                 
                 	.DEF R0X0=R0
                 	.DEF R0X1=R1
                 	.DEF R0X2=R2
                 	.DEF R0X3=R3
                 	.DEF R0X4=R4
                 	.DEF R0X5=R5
                 	.DEF R0X6=R6
                 	.DEF R0X7=R7
                 	.DEF R0X8=R8
                 	.DEF R0X9=R9
                 	.DEF R0XA=R10
                 	.DEF R0XB=R11
                 	.DEF R0XC=R12
                 	.DEF R0XD=R13
                 	.DEF R0XE=R14
                 	.DEF R0XF=R15
                 	.DEF R0X10=R16
                 	.DEF R0X11=R17
                 	.DEF R0X12=R18
                 	.DEF R0X13=R19
                 	.DEF R0X14=R20
                 	.DEF R0X15=R21
                 	.DEF R0X16=R22
                 	.DEF R0X17=R23
                 	.DEF R0X18=R24
                 	.DEF R0X19=R25
                 	.DEF R0X1A=R26
                 	.DEF R0X1B=R27
                 	.DEF R0X1C=R28
                 	.DEF R0X1D=R29
                 	.DEF R0X1E=R30
                 	.DEF R0X1F=R31
                 
                 	.EQU __SRAM_START=0x0060
                 	.EQU __SRAM_END=0x085F
                 	.EQU __DSTACK_SIZE=0x0200
                 	.EQU __HEAP_SIZE=0x0000
                 	.EQU __CLEAR_SRAM_SIZE=__SRAM_END-__SRAM_START+1
                 
                 	.MACRO __CPD1N
                 	CPI  R30,LOW(@0)
                 	LDI  R26,HIGH(@0)
                 	CPC  R31,R26
                 	LDI  R26,BYTE3(@0)
                 	CPC  R22,R26
                 	LDI  R26,BYTE4(@0)
                 	CPC  R23,R26
                 	.ENDM
                 
                 	.MACRO __CPD2N
                 	CPI  R26,LOW(@0)
                 	LDI  R30,HIGH(@0)
                 	CPC  R27,R30
                 	LDI  R30,BYTE3(@0)
                 	CPC  R24,R30
                 	LDI  R30,BYTE4(@0)
                 	CPC  R25,R30
                 	.ENDM
                 
                 	.MACRO __CPWRR
                 	CP   R@0,R@2
                 	CPC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __CPWRN
                 	CPI  R@0,LOW(@2)
                 	LDI  R30,HIGH(@2)
                 	CPC  R@1,R30
                 	.ENDM
                 
                 	.MACRO __ADDB1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDB2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	SBCI R31,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	SBCI R27,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	SBCI R22,BYTE3(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1N
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	SBCI R22,BYTE3(-@0)
                 	SBCI R23,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __ADDD2N
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	SBCI R24,BYTE3(-@0)
                 	SBCI R25,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __SUBD1N
                 	SUBI R30,LOW(@0)
                 	SBCI R31,HIGH(@0)
                 	SBCI R22,BYTE3(@0)
                 	SBCI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __SUBD2N
                 	SUBI R26,LOW(@0)
                 	SBCI R27,HIGH(@0)
                 	SBCI R24,BYTE3(@0)
                 	SBCI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDBMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ANDWMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ANDI R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ANDD1N
                 	ANDI R30,LOW(@0)
                 	ANDI R31,HIGH(@0)
                 	ANDI R22,BYTE3(@0)
                 	ANDI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDD2N
                 	ANDI R26,LOW(@0)
                 	ANDI R27,HIGH(@0)
                 	ANDI R24,BYTE3(@0)
                 	ANDI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORBMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ORWMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ORI  R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ORD1N
                 	ORI  R30,LOW(@0)
                 	ORI  R31,HIGH(@0)
                 	ORI  R22,BYTE3(@0)
                 	ORI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORD2N
                 	ORI  R26,LOW(@0)
                 	ORI  R27,HIGH(@0)
                 	ORI  R24,BYTE3(@0)
                 	ORI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __DELAY_USB
                 	LDI  R24,LOW(@0)
                 __DELAY_USB_LOOP:
                 	DEC  R24
                 	BRNE __DELAY_USB_LOOP
                 	.ENDM
                 
                 	.MACRO __DELAY_USW
                 	LDI  R24,LOW(@0)
                 	LDI  R25,HIGH(@0)
                 __DELAY_USW_LOOP:
                 	SBIW R24,1
                 	BRNE __DELAY_USW_LOOP
                 	.ENDM
                 
                 	.MACRO __GETD1S
                 	LDD  R30,Y+@0
                 	LDD  R31,Y+@0+1
                 	LDD  R22,Y+@0+2
                 	LDD  R23,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __GETD2S
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	LDD  R24,Y+@0+2
                 	LDD  R25,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __PUTD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R31
                 	STD  Y+@0+2,R22
                 	STD  Y+@0+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTD2S
                 	STD  Y+@0,R26
                 	STD  Y+@0+1,R27
                 	STD  Y+@0+2,R24
                 	STD  Y+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __PUTDZ2
                 	STD  Z+@0,R26
                 	STD  Z+@0+1,R27
                 	STD  Z+@0+2,R24
                 	STD  Z+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __CLRD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R30
                 	STD  Y+@0+2,R30
                 	STD  Y+@0+3,R30
                 	.ENDM
                 
                 	.MACRO __POINTB1MN
                 	LDI  R30,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW1MN
                 	LDI  R30,LOW(@0+(@1))
                 	LDI  R31,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1M
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __POINTW1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	LDI  R22,BYTE3(2*@0+(@1))
                 	LDI  R23,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTB2MN
                 	LDI  R26,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2MN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD2M
                 	LDI  R26,LOW(@0)
                 	LDI  R27,HIGH(@0)
                 	LDI  R24,BYTE3(@0)
                 	LDI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __POINTW2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	LDI  R24,BYTE3(2*@0+(@1))
                 	LDI  R25,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTBRM
                 	LDI  R@0,LOW(@1)
                 	.ENDM
                 
                 	.MACRO __POINTWRM
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __POINTBRMN
                 	LDI  R@0,LOW(@1+(@2))
                 	.ENDM
                 
                 	.MACRO __POINTWRMN
                 	LDI  R@0,LOW(@2+(@3))
                 	LDI  R@1,HIGH(@2+(@3))
                 	.ENDM
                 
                 	.MACRO __POINTWRFN
                 	LDI  R@0,LOW(@2*2+(@3))
                 	LDI  R@1,HIGH(@2*2+(@3))
                 	.ENDM
                 
                 	.MACRO __GETD1N
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETD2N
                 	LDI  R26,LOW(@0)
                 	LDI  R27,HIGH(@0)
                 	LDI  R24,BYTE3(@0)
                 	LDI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETB1MN
                 	LDS  R30,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETB1HMN
                 	LDS  R31,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	LDS  R22,@0+(@1)+2
                 	LDS  R23,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __GETBRMN
                 	LDS  R@0,@1+(@2)
                 	.ENDM
                 
                 	.MACRO __GETWRMN
                 	LDS  R@0,@2+(@3)
                 	LDS  R@1,@2+(@3)+1
                 	.ENDM
                 
                 	.MACRO __GETWRZ
                 	LDD  R@0,Z+@2
                 	LDD  R@1,Z+@2+1
                 	.ENDM
                 
                 	.MACRO __GETD2Z
                 	LDD  R26,Z+@0
                 	LDD  R27,Z+@0+1
                 	LDD  R24,Z+@0+2
                 	LDD  R25,Z+@0+3
                 	.ENDM
                 
                 	.MACRO __GETB2MN
                 	LDS  R26,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	LDS  R24,@0+(@1)+2
                 	LDS  R25,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __PUTB1MN
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __PUTW1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	STS  @0+(@1)+2,R22
                 	STS  @0+(@1)+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRB
                 	.ENDM
                 
                 	.MACRO __PUTW1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRW
                 	.ENDM
                 
                 	.MACRO __PUTD1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRD
                 	.ENDM
                 
                 	.MACRO __PUTBR0MN
                 	STS  @0+(@1),R0
                 	.ENDM
                 
                 	.MACRO __PUTBMRN
                 	STS  @0+(@1),R@2
                 	.ENDM
                 
                 	.MACRO __PUTWMRN
                 	STS  @0+(@1),R@2
                 	STS  @0+(@1)+1,R@3
                 	.ENDM
                 
                 	.MACRO __PUTBZR
                 	STD  Z+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWZR
                 	STD  Z+@2,R@0
                 	STD  Z+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __GETW1R
                 	MOV  R30,R@0
                 	MOV  R31,R@1
                 	.ENDM
                 
                 	.MACRO __GETW2R
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	.ENDM
                 
                 	.MACRO __GETWRN
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __PUTW1R
                 	MOV  R@0,R30
                 	MOV  R@1,R31
                 	.ENDM
                 
                 	.MACRO __PUTW2R
                 	MOV  R@0,R26
                 	MOV  R@1,R27
                 	.ENDM
                 
                 	.MACRO __ADDWRN
                 	SUBI R@0,LOW(-@2)
                 	SBCI R@1,HIGH(-@2)
                 	.ENDM
                 
                 	.MACRO __ADDWRR
                 	ADD  R@0,R@2
                 	ADC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __SUBWRN
                 	SUBI R@0,LOW(@2)
                 	SBCI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __SUBWRR
                 	SUB  R@0,R@2
                 	SBC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ANDWRN
                 	ANDI R@0,LOW(@2)
                 	ANDI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ANDWRR
                 	AND  R@0,R@2
                 	AND  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ORWRN
                 	ORI  R@0,LOW(@2)
                 	ORI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ORWRR
                 	OR   R@0,R@2
                 	OR   R@1,R@3
                 	.ENDM
                 
                 	.MACRO __EORWRR
                 	EOR  R@0,R@2
                 	EOR  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __GETWRS
                 	LDD  R@0,Y+@2
                 	LDD  R@1,Y+@2+1
                 	.ENDM
                 
                 	.MACRO __PUTBSR
                 	STD  Y+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSR
                 	STD  Y+@2,R@0
                 	STD  Y+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __MOVEWRR
                 	MOV  R@0,R@2
                 	MOV  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __INWR
                 	IN   R@0,@2
                 	IN   R@1,@2+1
                 	.ENDM
                 
                 	.MACRO __OUTWR
                 	OUT  @2+1,R@1
                 	OUT  @2,R@0
                 	.ENDM
                 
                 	.MACRO __CALL1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	CALL __GETW1PF
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EN
                 	PUSH R26
                 	PUSH R27
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMRDW
                 	POP  R27
                 	POP  R26
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EX
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	CALL __EEPROMRDD
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __GETW1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __NBST
                 	BST  R@0,@1
                 	IN   R30,SREG
                 	LDI  R31,0x40
                 	EOR  R30,R31
                 	OUT  SREG,R30
                 	.ENDM
                 
                 
                 	.MACRO __PUTB1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	CALL __PUTDP1
                 	.ENDM
                 
                 
                 	.MACRO __GETB1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R30,Z
                 	.ENDM
                 
                 	.MACRO __GETB1HSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	.ENDM
                 
                 	.MACRO __GETW1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	CALL __GETW1Z
                 	.ENDM
                 
                 	.MACRO __GETD1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	CALL __GETD1Z
                 	.ENDM
                 
                 	.MACRO __GETB2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R26,X
                 	.ENDM
                 
                 	.MACRO __GETW2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	CALL __GETW2X
                 	.ENDM
                 
                 	.MACRO __GETD2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	CALL __GETD2X
                 	.ENDM
                 
                 	.MACRO __GETBRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	LD   R@0,Z
                 	.ENDM
                 
                 	.MACRO __GETWRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	LD   R@0,Z+
                 	LD   R@1,Z
                 	.ENDM
                 
                 	.MACRO __GETBRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	LD   R@0,X
                 	.ENDM
                 
                 	.MACRO __GETWRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	LD   R@0,X+
                 	LD   R@1,X
                 	.ENDM
                 
                 	.MACRO __LSLW8SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __PUTB1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __CLRW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __CLRD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTB2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z,R26
                 	.ENDM
                 
                 	.MACRO __PUTW2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z,R27
                 	.ENDM
                 
                 	.MACRO __PUTD2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z+,R27
                 	ST   Z+,R24
                 	ST   Z,R25
                 	.ENDM
                 
                 	.MACRO __PUTBSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	ST   Z,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	ST   Z+,R@0
                 	ST   Z,R@1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __MULBRR
                 	MULS R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRRU
                 	MUL  R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRR0
                 	MULS R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBRRU0
                 	MUL  R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBNWRU
                 	LDI  R26,@2
                 	MUL  R26,R@0
                 	MOVW R30,R0
                 	MUL  R26,R@1
                 	ADD  R31,R0
                 	.ENDM
                 
                 ;NAME DEFINITIONS FOR GLOBAL VARIABLES ALLOCATED TO REGISTERS
                 	.DEF __hour=R5
                 	.DEF __min=R4
                 	.DEF __sec=R7
                 	.DEF _week_day=R6
                 	.DEF __day=R9
                 	.DEF __month=R8
                 	.DEF __year=R11
                 	.DEF _s1=R12
                 	.DEF _s1_msb=R13
                 	.DEF __lcd_x=R10
                 
                 	.CSEG
                 	.ORG 0x00
                 
                 ;START OF CODE MARKER
                 __START_OF_CODE:
                 
                 ;INTERRUPT VECTORS
000000 940c 0056 	JMP  __RESET
000002 940c 0000 	JMP  0x00
000004 940c 0000 	JMP  0x00
000006 940c 0000 	JMP  0x00
000008 940c 0000 	JMP  0x00
00000a 940c 0000 	JMP  0x00
00000c 940c 0000 	JMP  0x00
00000e 940c 0000 	JMP  0x00
000010 940c 0000 	JMP  0x00
000012 940c 0000 	JMP  0x00
000014 940c 0000 	JMP  0x00
000016 940c 0000 	JMP  0x00
000018 940c 0000 	JMP  0x00
00001a 940c 0000 	JMP  0x00
00001c 940c 0000 	JMP  0x00
00001e 940c 0000 	JMP  0x00
000020 940c 0000 	JMP  0x00
000022 940c 0000 	JMP  0x00
000024 940c 0000 	JMP  0x00
000026 940c 0000 	JMP  0x00
000028 940c 0000 	JMP  0x00
                 
                 _tbl10_G104:
00002a 2710
00002b 03e8
00002c 0064
00002d 000a      	.DB  0x10,0x27,0xE8,0x3,0x64,0x0,0xA,0x0
00002e 0001      	.DB  0x1,0x0
                 _tbl16_G104:
00002f 1000
000030 0100
000031 0010
000032 0001      	.DB  0x0,0x10,0x0,0x1,0x10,0x0,0x1,0x0
                 
                 _0x0:
000033 4954
000034 454d
000035 203e
000036 4400      	.DB  0x54,0x49,0x4D,0x45,0x3E,0x20,0x0,0x44
000037 5441
000038 3e45
000039 0020
00003a 3032      	.DB  0x41,0x54,0x45,0x3E,0x20,0x0,0x32,0x30
00003b 4100
00003c 696c
00003d 5320
00003e 6f68      	.DB  0x0,0x41,0x6C,0x69,0x20,0x53,0x68,0x6F
00003f 6f6b
000040 686f
000041 0069      	.DB  0x6B,0x6F,0x6F,0x68,0x69,0x0
                 _0x2020003:
000042 c080      	.DB  0x80,0xC0
                 _0x2040060:
E:\University\Term 6\Micro\ex-11\ex-11\Debug\List\ex-11.asm(1137): warning: .cseg .db misalignment - padding zero byte
000043 0001      	.DB  0x1
                 _0x2040000:
000044 4e2d
000045 4e41
000046 4900
000047 464e      	.DB  0x2D,0x4E,0x41,0x4E,0x0,0x49,0x4E,0x46
E:\University\Term 6\Micro\ex-11\ex-11\Debug\List\ex-11.asm(1140): warning: .cseg .db misalignment - padding zero byte
000048 0000      	.DB  0x0
                 
                 __GLOBAL_INI_TBL:
000049 0007      	.DW  0x07
00004a 0260      	.DW  _0x6
00004b 0066      	.DW  _0x0*2
                 
00004c 0007      	.DW  0x07
00004d 0267      	.DW  _0x6+7
00004e 006d      	.DW  _0x0*2+7
                 
00004f 0002      	.DW  0x02
000050 0278      	.DW  __base_y_G101
000051 0084      	.DW  _0x2020003*2
                 
000052 0001      	.DW  0x01
000053 027e      	.DW  __seed_G102
000054 0086      	.DW  _0x2040060*2
                 
                 _0xFFFFFFFF:
000055 0000      	.DW  0
                 
                 #define __GLOBAL_INI_TBL_PRESENT 1
                 
                 __RESET:
000056 94f8      	CLI
000057 27ee      	CLR  R30
000058 bbec      	OUT  EECR,R30
                 
                 ;INTERRUPT VECTORS ARE PLACED
                 ;AT THE START OF FLASH
000059 e0f1      	LDI  R31,1
00005a bffb      	OUT  GICR,R31
00005b bfeb      	OUT  GICR,R30
00005c bfe5      	OUT  MCUCR,R30
                 
                 ;CLEAR R2-R14
00005d e08d      	LDI  R24,(14-2)+1
00005e e0a2      	LDI  R26,2
00005f 27bb      	CLR  R27
                 __CLEAR_REG:
000060 93ed      	ST   X+,R30
000061 958a      	DEC  R24
000062 f7e9      	BRNE __CLEAR_REG
                 
                 ;CLEAR SRAM
000063 e080      	LDI  R24,LOW(__CLEAR_SRAM_SIZE)
000064 e098      	LDI  R25,HIGH(__CLEAR_SRAM_SIZE)
000065 e6a0      	LDI  R26,__SRAM_START
                 __CLEAR_SRAM:
000066 93ed      	ST   X+,R30
000067 9701      	SBIW R24,1
000068 f7e9      	BRNE __CLEAR_SRAM
                 
                 ;GLOBAL VARIABLES INITIALIZATION
000069 e9e2      	LDI  R30,LOW(__GLOBAL_INI_TBL*2)
00006a e0f0      	LDI  R31,HIGH(__GLOBAL_INI_TBL*2)
                 __GLOBAL_INI_NEXT:
00006b 9185      	LPM  R24,Z+
00006c 9195      	LPM  R25,Z+
00006d 9700      	SBIW R24,0
00006e f061      	BREQ __GLOBAL_INI_END
00006f 91a5      	LPM  R26,Z+
000070 91b5      	LPM  R27,Z+
000071 9005      	LPM  R0,Z+
000072 9015      	LPM  R1,Z+
000073 01bf      	MOVW R22,R30
000074 01f0      	MOVW R30,R0
                 __GLOBAL_INI_LOOP:
000075 9005      	LPM  R0,Z+
000076 920d      	ST   X+,R0
000077 9701      	SBIW R24,1
000078 f7e1      	BRNE __GLOBAL_INI_LOOP
000079 01fb      	MOVW R30,R22
00007a cff0      	RJMP __GLOBAL_INI_NEXT
                 __GLOBAL_INI_END:
                 
                 ;HARDWARE STACK POINTER INITIALIZATION
00007b e5ef      	LDI  R30,LOW(__SRAM_END-__HEAP_SIZE)
00007c bfed      	OUT  SPL,R30
00007d e0e8      	LDI  R30,HIGH(__SRAM_END-__HEAP_SIZE)
00007e bfee      	OUT  SPH,R30
                 
                 ;DATA STACK POINTER INITIALIZATION
00007f e6c0      	LDI  R28,LOW(__SRAM_START+__DSTACK_SIZE)
000080 e0d2      	LDI  R29,HIGH(__SRAM_START+__DSTACK_SIZE)
                 
000081 940c 0083 	JMP  _main
                 
                 	.ESEG
                 	.ORG 0x00
                 
                 	.DSEG
                 	.ORG 0x260
                 
                 	.CSEG
                 	#ifndef __SLEEP_DEFINED__
                 	#define __SLEEP_DEFINED__
                 	.EQU __se_bit=0x80
                 	.EQU __sm_mask=0x70
                 	.EQU __sm_powerdown=0x20
                 	.EQU __sm_powersave=0x30
                 	.EQU __sm_standby=0x60
                 	.EQU __sm_ext_standby=0x70
                 	.EQU __sm_adc_noise_red=0x10
                 	.SET power_ctrl_reg=mcucr
                 	#endif
                 ;unsigned char _hour, _min, _sec;
                 ;unsigned char week_day, _day,_month,_year;
                 ;unsigned char* s1;
                 ;unsigned char* s2;
                 ;unsigned char* s3;
                 ;unsigned char* s4;
                 ;unsigned char* s5;
                 ;unsigned char* s6;
                 ;void main(void) {
                 ; 0000 0014 void main(void) {
                 
                 	.CSEG
                 _main:
                 ; .FSTART _main
                 ; 0000 0015 PORTA = 0x00;
000083 e0e0      	LDI  R30,LOW(0)
000084 bbeb      	OUT  0x1B,R30
                 ; 0000 0016 DDRA = 0x00;
000085 bbea      	OUT  0x1A,R30
                 ; 0000 0017 PORTB = 0x00;
000086 bbe8      	OUT  0x18,R30
                 ; 0000 0018 DDRB = 0x00;
000087 bbe7      	OUT  0x17,R30
                 ; 0000 0019 PORTC = 0x00;
000088 bbe5      	OUT  0x15,R30
                 ; 0000 001A DDRC = 0x00;
000089 bbe4      	OUT  0x14,R30
                 ; 0000 001B PORTD = 0x00;
00008a bbe2      	OUT  0x12,R30
                 ; 0000 001C DDRD = 0x00;
00008b bbe1      	OUT  0x11,R30
                 ; 0000 001D i2c_init();
00008c 940e 0291 	CALL _i2c_init
                 ; 0000 001E rtc_init(0, 0, 0);
00008e e0e0      	LDI  R30,LOW(0)
00008f 93ea      	ST   -Y,R30
000090 93ea      	ST   -Y,R30
000091 e0a0      	LDI  R26,LOW(0)
000092 d097      	RCALL _rtc_init
                 ; 0000 001F lcd_init(20);
000093 e1a4      	LDI  R26,LOW(20)
000094 d15a      	RCALL _lcd_init
                 ; 0000 0020 
                 ; 0000 0021 while (1) {
                 _0x3:
                 ; 0000 0022 lcd_clear();
000095 d110      	RCALL _lcd_clear
                 ; 0000 0023 
                 ; 0000 0024 lcd_puts("TIME> ");
                +
000096 e6a0     +LDI R26 , LOW ( _0x6 + ( 0 ) )
000097 e0b2     +LDI R27 , HIGH ( _0x6 + ( 0 ) )
                 	__POINTW2MN _0x6,0
000098 d134      	RCALL _lcd_puts
                 ; 0000 0025 lcd_gotoxy(0, 1);
000099 e0e0      	LDI  R30,LOW(0)
00009a 93ea      	ST   -Y,R30
00009b e0a1      	LDI  R26,LOW(1)
00009c d0fa      	RCALL _lcd_gotoxy
                 ; 0000 0026 lcd_puts("DATE> ");
                +
00009d e6a7     +LDI R26 , LOW ( _0x6 + ( 7 ) )
00009e e0b2     +LDI R27 , HIGH ( _0x6 + ( 7 ) )
                 	__POINTW2MN _0x6,7
00009f d12d      	RCALL _lcd_puts
                 ; 0000 0027 
                 ; 0000 0028 rtc_get_time(&_hour, &_min, &_sec);
0000a0 e0e5      	LDI  R30,LOW(5)
0000a1 e0f0      	LDI  R31,HIGH(5)
0000a2 93fa      	ST   -Y,R31
0000a3 93ea      	ST   -Y,R30
0000a4 e0e4      	LDI  R30,LOW(4)
0000a5 e0f0      	LDI  R31,HIGH(4)
0000a6 93fa      	ST   -Y,R31
0000a7 93ea      	ST   -Y,R30
0000a8 e0a7      	LDI  R26,LOW(7)
0000a9 e0b0      	LDI  R27,HIGH(7)
0000aa d098      	RCALL _rtc_get_time
                 ; 0000 0029 rtc_get_date(&week_day, &_day, &_month, &_year);
0000ab e0e6      	LDI  R30,LOW(6)
0000ac e0f0      	LDI  R31,HIGH(6)
0000ad 93fa      	ST   -Y,R31
0000ae 93ea      	ST   -Y,R30
0000af e0e9      	LDI  R30,LOW(9)
0000b0 e0f0      	LDI  R31,HIGH(9)
0000b1 93fa      	ST   -Y,R31
0000b2 93ea      	ST   -Y,R30
0000b3 e0e8      	LDI  R30,LOW(8)
0000b4 e0f0      	LDI  R31,HIGH(8)
0000b5 93fa      	ST   -Y,R31
0000b6 93ea      	ST   -Y,R30
0000b7 e0ab      	LDI  R26,LOW(11)
0000b8 e0b0      	LDI  R27,HIGH(11)
0000b9 d0a2      	RCALL _rtc_get_date
                 ; 0000 002A 
                 ; 0000 002B lcd_gotoxy(6, 0);
0000ba e0e6      	LDI  R30,LOW(6)
0000bb 93ea      	ST   -Y,R30
0000bc e0a0      	LDI  R26,LOW(0)
0000bd d0d9      	RCALL _lcd_gotoxy
                 ; 0000 002C 
                 ; 0000 002D itoa(_hour, s1);
0000be 2de5      	MOV  R30,R5
0000bf e0f0      	LDI  R31,0
0000c0 93fa      	ST   -Y,R31
0000c1 93ea      	ST   -Y,R30
0000c2 01d6      	MOVW R26,R12
0000c3 940e 021e 	CALL _itoa
                 ; 0000 002E lcd_puts(s1);
0000c5 01d6      	MOVW R26,R12
0000c6 940e 0259 	CALL SUBOPT_0x0
                 ; 0000 002F lcd_putsf(" ");
                 ; 0000 0030 
                 ; 0000 0031 itoa(_min, s2);
0000c8 2de4      	MOV  R30,R4
0000c9 e0f0      	LDI  R31,0
0000ca 93fa      	ST   -Y,R31
0000cb 93ea      	ST   -Y,R30
0000cc 91a0 026e 	LDS  R26,_s2
0000ce 91b0 026f 	LDS  R27,_s2+1
0000d0 940e 021e 	CALL _itoa
                 ; 0000 0032 lcd_puts(s2);
0000d2 91a0 026e 	LDS  R26,_s2
0000d4 91b0 026f 	LDS  R27,_s2+1
0000d6 940e 0259 	CALL SUBOPT_0x0
                 ; 0000 0033 lcd_putsf(" ");
                 ; 0000 0034 
                 ; 0000 0035 itoa(_sec, s3);
0000d8 2de7      	MOV  R30,R7
0000d9 e0f0      	LDI  R31,0
0000da 93fa      	ST   -Y,R31
0000db 93ea      	ST   -Y,R30
0000dc 91a0 0270 	LDS  R26,_s3
0000de 91b0 0271 	LDS  R27,_s3+1
0000e0 940e 021e 	CALL _itoa
                 ; 0000 0036 lcd_puts(s3);
0000e2 91a0 0270 	LDS  R26,_s3
0000e4 91b0 0271 	LDS  R27,_s3+1
0000e6 d0e6      	RCALL _lcd_puts
                 ; 0000 0037 
                 ; 0000 0038 lcd_gotoxy(6, 1);
0000e7 e0e6      	LDI  R30,LOW(6)
0000e8 93ea      	ST   -Y,R30
0000e9 e0a1      	LDI  R26,LOW(1)
0000ea d0ac      	RCALL _lcd_gotoxy
                 ; 0000 0039 
                 ; 0000 003A itoa(_day, s4);
0000eb 2de9      	MOV  R30,R9
0000ec e0f0      	LDI  R31,0
0000ed 93fa      	ST   -Y,R31
0000ee 93ea      	ST   -Y,R30
0000ef 91a0 0272 	LDS  R26,_s4
0000f1 91b0 0273 	LDS  R27,_s4+1
0000f3 940e 021e 	CALL _itoa
                 ; 0000 003B lcd_puts(s4);
0000f5 91a0 0272 	LDS  R26,_s4
0000f7 91b0 0273 	LDS  R27,_s4+1
0000f9 940e 0259 	CALL SUBOPT_0x0
                 ; 0000 003C lcd_putsf(" ");
                 ; 0000 003D 
                 ; 0000 003E itoa(_month, s5);
0000fb 2de8      	MOV  R30,R8
0000fc e0f0      	LDI  R31,0
0000fd 93fa      	ST   -Y,R31
0000fe 93ea      	ST   -Y,R30
0000ff 91a0 0274 	LDS  R26,_s5
000101 91b0 0275 	LDS  R27,_s5+1
000103 940e 021e 	CALL _itoa
                 ; 0000 003F lcd_puts(s5);
000105 91a0 0274 	LDS  R26,_s5
000107 91b0 0275 	LDS  R27,_s5+1
000109 940e 0259 	CALL SUBOPT_0x0
                 ; 0000 0040 lcd_putsf(" ");
                 ; 0000 0041 
                 ; 0000 0042 lcd_putsf("20");
                +
00010b e7a4     +LDI R26 , LOW ( 2 * _0x0 + ( 14 ) )
00010c e0b0     +LDI R27 , HIGH ( 2 * _0x0 + ( 14 ) )
                 	__POINTW2FN _0x0,14
00010d d0ce      	RCALL _lcd_putsf
                 ; 0000 0043 itoa(_year, s6);
00010e 2deb      	MOV  R30,R11
00010f e0f0      	LDI  R31,0
000110 93fa      	ST   -Y,R31
000111 93ea      	ST   -Y,R30
000112 91a0 0276 	LDS  R26,_s6
000114 91b0 0277 	LDS  R27,_s6+1
000116 940e 021e 	CALL _itoa
                 ; 0000 0044 lcd_puts(s6);
000118 91a0 0276 	LDS  R26,_s6
00011a 91b0 0277 	LDS  R27,_s6+1
00011c d0b0      	RCALL _lcd_puts
                 ; 0000 0045 
                 ; 0000 0046 lcd_gotoxy(0, 2);
00011d e0e0      	LDI  R30,LOW(0)
00011e 93ea      	ST   -Y,R30
00011f e0a2      	LDI  R26,LOW(2)
000120 d076      	RCALL _lcd_gotoxy
                 ; 0000 0047 lcd_putsf("Ali Shokoohi");
                +
000121 e7a7     +LDI R26 , LOW ( 2 * _0x0 + ( 17 ) )
000122 e0b0     +LDI R27 , HIGH ( 2 * _0x0 + ( 17 ) )
                 	__POINTW2FN _0x0,17
000123 d0b8      	RCALL _lcd_putsf
                 ; 0000 0048 
                 ; 0000 0049 delay_ms(1000);
000124 eea8      	LDI  R26,LOW(1000)
000125 e0b3      	LDI  R27,HIGH(1000)
000126 940e 02e1 	CALL _delay_ms
                 ; 0000 004A }
000128 cf6c      	RJMP _0x3
                 ; 0000 004B }
                 _0x7:
000129 cfff      	RJMP _0x7
                 ; .FEND
                 
                 	.DSEG
                 _0x6:
000260           	.BYTE 0xE
                 
                 	.CSEG
                 _rtc_init:
                 ; .FSTART _rtc_init
00012a 93aa      	ST   -Y,R26
00012b 81ea      	LDD  R30,Y+2
00012c 70e3      	ANDI R30,LOW(0x3)
00012d 83ea      	STD  Y+2,R30
00012e 81e9      	LDD  R30,Y+1
00012f 30e0      	CPI  R30,0
000130 f019      	BREQ _0x2000003
000131 81ea      	LDD  R30,Y+2
000132 61e0      	ORI  R30,0x10
000133 83ea      	STD  Y+2,R30
                 _0x2000003:
000134 81e8      	LD   R30,Y
000135 30e0      	CPI  R30,0
000136 f019      	BREQ _0x2000004
000137 81ea      	LDD  R30,Y+2
000138 68e0      	ORI  R30,0x80
000139 83ea      	STD  Y+2,R30
                 _0x2000004:
00013a 940e 025f 	CALL SUBOPT_0x1
00013c e0a7      	LDI  R26,LOW(7)
00013d 940e 02c9 	CALL _i2c_write
00013f 81aa      	LDD  R26,Y+2
000140 940e 0264 	CALL SUBOPT_0x2
000142 c0aa      	RJMP _0x2100003
                 ; .FEND
                 _rtc_get_time:
                 ; .FSTART _rtc_get_time
000143 93ba      	ST   -Y,R27
000144 93aa      	ST   -Y,R26
000145 940e 025f 	CALL SUBOPT_0x1
000147 e0a0      	LDI  R26,LOW(0)
000148 940e 0264 	CALL SUBOPT_0x2
00014a 940e 0268 	CALL SUBOPT_0x3
00014c 940e 0270 	CALL SUBOPT_0x4
00014e 940e 0277 	CALL SUBOPT_0x5
000150 940e 027d 	CALL SUBOPT_0x6
000152 2fae      	MOV  R26,R30
000153 940e 024c 	CALL _bcd2bin
000155 81ac      	LDD  R26,Y+4
000156 81bd      	LDD  R27,Y+4+1
000157 93ec      	ST   X,R30
000158 940e 02a5 	CALL _i2c_stop
00015a 9626      	ADIW R28,6
00015b 9508      	RET
                 ; .FEND
                 _rtc_get_date:
                 ; .FSTART _rtc_get_date
00015c 93ba      	ST   -Y,R27
00015d 93aa      	ST   -Y,R26
00015e 940e 025f 	CALL SUBOPT_0x1
000160 e0a3      	LDI  R26,LOW(3)
000161 940e 0264 	CALL SUBOPT_0x2
000163 940e 0268 	CALL SUBOPT_0x3
000165 81ae      	LDD  R26,Y+6
000166 81bf      	LDD  R27,Y+6+1
000167 93ec      	ST   X,R30
000168 940e 0277 	CALL SUBOPT_0x5
00016a 81ac      	LDD  R26,Y+4
00016b 81bd      	LDD  R27,Y+4+1
00016c 93ec      	ST   X,R30
00016d 940e 0277 	CALL SUBOPT_0x5
00016f 940e 027d 	CALL SUBOPT_0x6
000171 940e 0270 	CALL SUBOPT_0x4
000173 940e 02a5 	CALL _i2c_stop
000175 9628      	ADIW R28,8
000176 9508      	RET
                 ; .FEND
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 
                 	.DSEG
                 
                 	.CSEG
                 __lcd_write_nibble_G101:
                 ; .FSTART __lcd_write_nibble_G101
000177 93aa      	ST   -Y,R26
000178 b3eb      	IN   R30,0x1B
000179 70ef      	ANDI R30,LOW(0xF)
00017a 2fae      	MOV  R26,R30
00017b 81e8      	LD   R30,Y
00017c 7fe0      	ANDI R30,LOW(0xF0)
00017d 2bea      	OR   R30,R26
00017e bbeb      	OUT  0x1B,R30
                +
00017f e08d     +LDI R24 , LOW ( 13 )
                +__DELAY_USB_LOOP :
000180 958a     +DEC R24
000181 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 13
000182 9ada      	SBI  0x1B,2
                +
000183 e08d     +LDI R24 , LOW ( 13 )
                +__DELAY_USB_LOOP :
000184 958a     +DEC R24
000185 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 13
000186 98da      	CBI  0x1B,2
                +
000187 e08d     +LDI R24 , LOW ( 13 )
                +__DELAY_USB_LOOP :
000188 958a     +DEC R24
000189 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 13
00018a c091      	RJMP _0x2100001
                 ; .FEND
                 __lcd_write_data:
                 ; .FSTART __lcd_write_data
00018b 93aa      	ST   -Y,R26
00018c 81a8      	LD   R26,Y
00018d dfe9      	RCALL __lcd_write_nibble_G101
00018e 81e8          ld    r30,y
00018f 95e2          swap  r30
000190 83e8          st    y,r30
000191 81a8      	LD   R26,Y
000192 dfe4      	RCALL __lcd_write_nibble_G101
                +
000193 e885     +LDI R24 , LOW ( 133 )
                +__DELAY_USB_LOOP :
000194 958a     +DEC R24
000195 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 133
000196 c085      	RJMP _0x2100001
                 ; .FEND
                 _lcd_gotoxy:
                 ; .FSTART _lcd_gotoxy
000197 93aa      	ST   -Y,R26
000198 81e8      	LD   R30,Y
000199 e0f0      	LDI  R31,0
00019a 58e8      	SUBI R30,LOW(-__base_y_G101)
00019b 4ffd      	SBCI R31,HIGH(-__base_y_G101)
00019c 81e0      	LD   R30,Z
00019d 81a9      	LDD  R26,Y+1
00019e 0fae      	ADD  R26,R30
00019f dfeb      	RCALL __lcd_write_data
0001a0 80a9      	LDD  R10,Y+1
0001a1 81e8      	LD   R30,Y
0001a2 93e0 027c 	STS  __lcd_y,R30
0001a4 9622      	ADIW R28,2
0001a5 9508      	RET
                 ; .FEND
                 _lcd_clear:
                 ; .FSTART _lcd_clear
0001a6 e0a2      	LDI  R26,LOW(2)
0001a7 940e 0283 	CALL SUBOPT_0x7
0001a9 e0ac      	LDI  R26,LOW(12)
0001aa dfe0      	RCALL __lcd_write_data
0001ab e0a1      	LDI  R26,LOW(1)
0001ac 940e 0283 	CALL SUBOPT_0x7
0001ae e0e0      	LDI  R30,LOW(0)
0001af 93e0 027c 	STS  __lcd_y,R30
0001b1 2eae      	MOV  R10,R30
0001b2 9508      	RET
                 ; .FEND
                 _lcd_putchar:
                 ; .FSTART _lcd_putchar
0001b3 93aa      	ST   -Y,R26
0001b4 81a8      	LD   R26,Y
0001b5 30aa      	CPI  R26,LOW(0xA)
0001b6 f021      	BREQ _0x2020005
0001b7 91e0 027d 	LDS  R30,__lcd_maxx
0001b9 16ae      	CP   R10,R30
0001ba f060      	BRLO _0x2020004
                 _0x2020005:
0001bb e0e0      	LDI  R30,LOW(0)
0001bc 93ea      	ST   -Y,R30
0001bd 91a0 027c 	LDS  R26,__lcd_y
0001bf 5faf      	SUBI R26,-LOW(1)
0001c0 93a0 027c 	STS  __lcd_y,R26
0001c2 dfd4      	RCALL _lcd_gotoxy
0001c3 81a8      	LD   R26,Y
0001c4 30aa      	CPI  R26,LOW(0xA)
0001c5 f409      	BRNE _0x2020007
0001c6 c055      	RJMP _0x2100001
                 _0x2020007:
                 _0x2020004:
0001c7 94a3      	INC  R10
0001c8 9ad8      	SBI  0x1B,0
0001c9 81a8      	LD   R26,Y
0001ca dfc0      	RCALL __lcd_write_data
0001cb 98d8      	CBI  0x1B,0
0001cc c04f      	RJMP _0x2100001
                 ; .FEND
                 _lcd_puts:
                 ; .FSTART _lcd_puts
0001cd 93ba      	ST   -Y,R27
0001ce 93aa      	ST   -Y,R26
0001cf 931a      	ST   -Y,R17
                 _0x2020008:
0001d0 81a9      	LDD  R26,Y+1
0001d1 81ba      	LDD  R27,Y+1+1
0001d2 91ed      	LD   R30,X+
0001d3 83a9      	STD  Y+1,R26
0001d4 83ba      	STD  Y+1+1,R27
0001d5 2f1e      	MOV  R17,R30
0001d6 30e0      	CPI  R30,0
0001d7 f019      	BREQ _0x202000A
0001d8 2fa1      	MOV  R26,R17
0001d9 dfd9      	RCALL _lcd_putchar
0001da cff5      	RJMP _0x2020008
                 _0x202000A:
0001db c010      	RJMP _0x2100002
                 ; .FEND
                 _lcd_putsf:
                 ; .FSTART _lcd_putsf
0001dc 93ba      	ST   -Y,R27
0001dd 93aa      	ST   -Y,R26
0001de 931a      	ST   -Y,R17
                 _0x202000B:
0001df 81e9      	LDD  R30,Y+1
0001e0 81fa      	LDD  R31,Y+1+1
0001e1 9631      	ADIW R30,1
0001e2 83e9      	STD  Y+1,R30
0001e3 83fa      	STD  Y+1+1,R31
0001e4 9731      	SBIW R30,1
0001e5 91e4      	LPM  R30,Z
0001e6 2f1e      	MOV  R17,R30
0001e7 30e0      	CPI  R30,0
0001e8 f019      	BREQ _0x202000D
0001e9 2fa1      	MOV  R26,R17
0001ea dfc8      	RCALL _lcd_putchar
0001eb cff3      	RJMP _0x202000B
                 _0x202000D:
                 _0x2100002:
0001ec 8118      	LDD  R17,Y+0
                 _0x2100003:
0001ed 9623      	ADIW R28,3
0001ee 9508      	RET
                 ; .FEND
                 _lcd_init:
                 ; .FSTART _lcd_init
0001ef 93aa      	ST   -Y,R26
0001f0 b3ea      	IN   R30,0x1A
0001f1 6fe0      	ORI  R30,LOW(0xF0)
0001f2 bbea      	OUT  0x1A,R30
0001f3 9ad2      	SBI  0x1A,2
0001f4 9ad0      	SBI  0x1A,0
0001f5 9ad1      	SBI  0x1A,1
0001f6 98da      	CBI  0x1B,2
0001f7 98d8      	CBI  0x1B,0
0001f8 98d9      	CBI  0x1B,1
0001f9 81e8      	LD   R30,Y
0001fa 93e0 027d 	STS  __lcd_maxx,R30
0001fc 58e0      	SUBI R30,-LOW(128)
                +
0001fd 93e0 027a+STS __base_y_G101 + ( 2 ) , R30
                 	__PUTB1MN __base_y_G101,2
0001ff 81e8      	LD   R30,Y
000200 54e0      	SUBI R30,-LOW(192)
                +
000201 93e0 027b+STS __base_y_G101 + ( 3 ) , R30
                 	__PUTB1MN __base_y_G101,3
000203 e1a4      	LDI  R26,LOW(20)
000204 e0b0      	LDI  R27,0
000205 940e 02e1 	CALL _delay_ms
000207 940e 0289 	CALL SUBOPT_0x8
000209 940e 0289 	CALL SUBOPT_0x8
00020b 940e 0289 	CALL SUBOPT_0x8
00020d e2a0      	LDI  R26,LOW(32)
00020e df68      	RCALL __lcd_write_nibble_G101
                +
00020f ec88     +LDI R24 , LOW ( 200 )
000210 e090     +LDI R25 , HIGH ( 200 )
                +__DELAY_USW_LOOP :
000211 9701     +SBIW R24 , 1
000212 f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 200
000213 e2a8      	LDI  R26,LOW(40)
000214 df76      	RCALL __lcd_write_data
000215 e0a4      	LDI  R26,LOW(4)
000216 df74      	RCALL __lcd_write_data
000217 e8a5      	LDI  R26,LOW(133)
000218 df72      	RCALL __lcd_write_data
000219 e0a6      	LDI  R26,LOW(6)
00021a df70      	RCALL __lcd_write_data
00021b df8a      	RCALL _lcd_clear
                 _0x2100001:
00021c 9621      	ADIW R28,1
00021d 9508      	RET
                 ; .FEND
                 
                 	.CSEG
                 _itoa:
                 ; .FSTART _itoa
00021e 93ba      	ST   -Y,R27
00021f 93aa      	ST   -Y,R26
000220 91a9          ld   r26,y+
000221 91b9          ld   r27,y+
000222 91e9          ld   r30,y+
000223 91f9          ld   r31,y+
000224 9630          adiw r30,0
000225 f42a          brpl __itoa0
000226 95e0          com  r30
000227 95f0          com  r31
000228 9631          adiw r30,1
000229 e26d          ldi  r22,'-'
00022a 936d          st   x+,r22
                 __itoa0:
00022b 94e8          clt
00022c e180          ldi  r24,low(10000)
00022d e297          ldi  r25,high(10000)
00022e d00d          rcall __itoa1
00022f ee88          ldi  r24,low(1000)
000230 e093          ldi  r25,high(1000)
000231 d00a          rcall __itoa1
000232 e684          ldi  r24,100
000233 2799          clr  r25
000234 d007          rcall __itoa1
000235 e08a          ldi  r24,10
000236 d005          rcall __itoa1
000237 2f6e          mov  r22,r30
000238 d010          rcall __itoa5
000239 2766          clr  r22
00023a 936c          st   x,r22
00023b 9508          ret
                 
                 __itoa1:
00023c 2766          clr	 r22
                 __itoa2:
00023d 17e8          cp   r30,r24
00023e 07f9          cpc  r31,r25
00023f f020          brlo __itoa3
000240 9563          inc  r22
000241 1be8          sub  r30,r24
000242 0bf9          sbc  r31,r25
000243 f7c9          brne __itoa2
                 __itoa3:
000244 2366          tst  r22
000245 f411          brne __itoa4
000246 f016          brts __itoa5
000247 9508          ret
                 __itoa4:
000248 9468          set
                 __itoa5:
000249 5d60          subi r22,-0x30
00024a 936d          st   x+,r22
00024b 9508          ret
                 ; .FEND
                 
                 	.DSEG
                 
                 	.CSEG
                 
                 	.CSEG
                 _bcd2bin:
                 ; .FSTART _bcd2bin
00024c 93aa      	ST   -Y,R26
00024d 81e8          ld   r30,y
00024e 95e2          swap r30
00024f 70ef          andi r30,0xf
000250 2fae          mov  r26,r30
000251 0faa          lsl  r26
000252 0faa          lsl  r26
000253 0fea          add  r30,r26
000254 0fee          lsl  r30
000255 91a9          ld   r26,y+
000256 70af          andi r26,0xf
000257 0fea          add  r30,r26
000258 9508          ret
                 ; .FEND
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 
                 	.CSEG
                 
                 	.CSEG
                 
                 	.CSEG
                 
                 	.CSEG
                 
                 	.DSEG
                 _s2:
00026e           	.BYTE 0x2
                 _s3:
000270           	.BYTE 0x2
                 _s4:
000272           	.BYTE 0x2
                 _s5:
000274           	.BYTE 0x2
                 _s6:
000276           	.BYTE 0x2
                 __base_y_G101:
000278           	.BYTE 0x4
                 __lcd_y:
00027c           	.BYTE 0x1
                 __lcd_maxx:
00027d           	.BYTE 0x1
                 __seed_G102:
00027e           	.BYTE 0x4
                 
                 	.CSEG
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x0:
000259 940e 01cd 	CALL _lcd_puts
                +
00025b e6ab     +LDI R26 , LOW ( 2 * _0x0 + ( 5 ) )
00025c e0b0     +LDI R27 , HIGH ( 2 * _0x0 + ( 5 ) )
                 	__POINTW2FN _0x0,5
00025d 940c 01dc 	JMP  _lcd_putsf
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x1:
00025f 940e 0296 	CALL _i2c_start
000261 eda0      	LDI  R26,LOW(208)
000262 940c 02c9 	JMP  _i2c_write
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x2:
000264 940e 02c9 	CALL _i2c_write
000266 940c 02a5 	JMP  _i2c_stop
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x3:
000268 940e 0296 	CALL _i2c_start
00026a eda1      	LDI  R26,LOW(209)
00026b 940e 02c9 	CALL _i2c_write
00026d e0a1      	LDI  R26,LOW(1)
00026e 940c 02af 	JMP  _i2c_read
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x4:
000270 2fae      	MOV  R26,R30
000271 940e 024c 	CALL _bcd2bin
000273 81a8      	LD   R26,Y
000274 81b9      	LDD  R27,Y+1
000275 93ec      	ST   X,R30
000276 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x5:
000277 e0a1      	LDI  R26,LOW(1)
000278 940e 02af 	CALL _i2c_read
00027a 2fae      	MOV  R26,R30
00027b 940c 024c 	JMP  _bcd2bin
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x6:
00027d 81aa      	LDD  R26,Y+2
00027e 81bb      	LDD  R27,Y+2+1
00027f 93ec      	ST   X,R30
000280 e0a0      	LDI  R26,LOW(0)
000281 940c 02af 	JMP  _i2c_read
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x7:
000283 940e 018b 	CALL __lcd_write_data
000285 e0a3      	LDI  R26,LOW(3)
000286 e0b0      	LDI  R27,0
000287 940c 02e1 	JMP  _delay_ms
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x8:
000289 e3a0      	LDI  R26,LOW(48)
00028a 940e 0177 	CALL __lcd_write_nibble_G101
                +
00028c ec88     +LDI R24 , LOW ( 200 )
00028d e090     +LDI R25 , HIGH ( 200 )
                +__DELAY_USW_LOOP :
00028e 9701     +SBIW R24 , 1
00028f f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 200
000290 9508      	RET
                 
                 ;RUNTIME LIBRARY
                 
                 	.CSEG
                 	.equ __scl_bit=0
                 	.equ __sda_bit=1
                 	.equ __i2c_port_scl=0x15
                 	.equ __i2c_dir_scl=__i2c_port_scl-1
                 	.equ __i2c_pin_scl=__i2c_port_scl-2
                 	.equ __i2c_port_sda=0x15
                 	.equ __i2c_dir_sda=__i2c_port_sda-1
                 	.equ __i2c_pin_sda=__i2c_port_sda-2
                 
                 _i2c_init:
000291 98a8      	cbi  __i2c_port_scl,__scl_bit
000292 98a9      	cbi  __i2c_port_sda,__sda_bit
000293 9aa0      	sbi  __i2c_dir_scl,__scl_bit
000294 98a1      	cbi  __i2c_dir_sda,__sda_bit
000295 c015      	rjmp __i2c_delay2
                 
                 _i2c_start:
000296 98a1      	cbi  __i2c_dir_sda,__sda_bit
000297 98a0      	cbi  __i2c_dir_scl,__scl_bit
000298 27ee      	clr  r30
000299 0000      	nop
00029a 9b99      	sbis __i2c_pin_sda,__sda_bit
00029b 9508      	ret
00029c 9b98      	sbis __i2c_pin_scl,__scl_bit
00029d 9508      	ret
00029e d004      	rcall __i2c_delay1
00029f 9aa1      	sbi  __i2c_dir_sda,__sda_bit
0002a0 d002      	rcall __i2c_delay1
0002a1 9aa0      	sbi  __i2c_dir_scl,__scl_bit
0002a2 e0e1      	ldi  r30,1
                 __i2c_delay1:
0002a3 e065      	ldi  r22,5
0002a4 c007      	rjmp __i2c_delay2l
                 
                 _i2c_stop:
0002a5 9aa1      	sbi  __i2c_dir_sda,__sda_bit
0002a6 9aa0      	sbi  __i2c_dir_scl,__scl_bit
0002a7 d003      	rcall __i2c_delay2
0002a8 98a0      	cbi  __i2c_dir_scl,__scl_bit
0002a9 dff9      	rcall __i2c_delay1
0002aa 98a1      	cbi  __i2c_dir_sda,__sda_bit
                 __i2c_delay2:
0002ab e06a      	ldi  r22,10
                 __i2c_delay2l:
0002ac 956a      	dec  r22
0002ad f7f1      	brne __i2c_delay2l
0002ae 9508      	ret
                 
                 _i2c_read:
0002af e078      	ldi  r23,8
                 __i2c_read0:
0002b0 98a0      	cbi  __i2c_dir_scl,__scl_bit
0002b1 dff1      	rcall __i2c_delay1
                 __i2c_read3:
0002b2 9b98      	sbis __i2c_pin_scl,__scl_bit
0002b3 cffe      	rjmp __i2c_read3
0002b4 dfee      	rcall __i2c_delay1
0002b5 9488      	clc
0002b6 9999      	sbic __i2c_pin_sda,__sda_bit
0002b7 9408      	sec
0002b8 9aa0      	sbi  __i2c_dir_scl,__scl_bit
0002b9 dff1      	rcall __i2c_delay2
0002ba 1fee      	rol  r30
0002bb 957a      	dec  r23
0002bc f799      	brne __i2c_read0
0002bd 23aa      	tst  r26
0002be f411      	brne __i2c_read1
0002bf 98a1      	cbi  __i2c_dir_sda,__sda_bit
0002c0 c001      	rjmp __i2c_read2
                 __i2c_read1:
0002c1 9aa1      	sbi  __i2c_dir_sda,__sda_bit
                 __i2c_read2:
0002c2 dfe0      	rcall __i2c_delay1
0002c3 98a0      	cbi  __i2c_dir_scl,__scl_bit
0002c4 dfe6      	rcall __i2c_delay2
0002c5 9aa0      	sbi  __i2c_dir_scl,__scl_bit
0002c6 dfdc      	rcall __i2c_delay1
0002c7 98a1      	cbi  __i2c_dir_sda,__sda_bit
0002c8 cfda      	rjmp __i2c_delay1
                 
                 _i2c_write:
0002c9 e078      	ldi  r23,8
                 __i2c_write0:
0002ca 0faa      	lsl  r26
0002cb f410      	brcc __i2c_write1
0002cc 98a1      	cbi  __i2c_dir_sda,__sda_bit
0002cd c001      	rjmp __i2c_write2
                 __i2c_write1:
0002ce 9aa1      	sbi  __i2c_dir_sda,__sda_bit
                 __i2c_write2:
0002cf dfdb      	rcall __i2c_delay2
0002d0 98a0      	cbi  __i2c_dir_scl,__scl_bit
0002d1 dfd1      	rcall __i2c_delay1
                 __i2c_write3:
0002d2 9b98      	sbis __i2c_pin_scl,__scl_bit
0002d3 cffe      	rjmp __i2c_write3
0002d4 dfce      	rcall __i2c_delay1
0002d5 9aa0      	sbi  __i2c_dir_scl,__scl_bit
0002d6 957a      	dec  r23
0002d7 f791      	brne __i2c_write0
0002d8 98a1      	cbi  __i2c_dir_sda,__sda_bit
0002d9 dfc9      	rcall __i2c_delay1
0002da 98a0      	cbi  __i2c_dir_scl,__scl_bit
0002db dfcf      	rcall __i2c_delay2
0002dc e0e1      	ldi  r30,1
0002dd 9999      	sbic __i2c_pin_sda,__sda_bit
0002de 27ee      	clr  r30
0002df 9aa0      	sbi  __i2c_dir_scl,__scl_bit
0002e0 cfc2      	rjmp __i2c_delay1
                 
                 _delay_ms:
0002e1 9610      	adiw r26,0
0002e2 f039      	breq __delay_ms1
                 __delay_ms0:
0002e3 95a8      	wdr
                +
0002e4 ed80     +LDI R24 , LOW ( 0x7D0 )
0002e5 e097     +LDI R25 , HIGH ( 0x7D0 )
                +__DELAY_USW_LOOP :
0002e6 9701     +SBIW R24 , 1
0002e7 f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 0x7D0
0002e8 9711      	sbiw r26,1
0002e9 f7c9      	brne __delay_ms0
                 __delay_ms1:
0002ea 9508      	ret
                 
                 ;END OF CODE MARKER
                 __END_OF_CODE:


RESOURCE USE INFORMATION
------------------------

Notice:
The register and instruction counts are symbol table hit counts,
and hence implicitly used resources are not counted, eg, the
'lpm' instruction without operands implicitly uses r0 and z,
none of which are counted.

x,y,z are separate entities in the symbol table and are
counted separately from r26..r31 here.

.dseg memory usage only counts static data declared with .byte

ATmega32 register use summary:
r0 :   4 r1 :   1 r2 :   0 r3 :   0 r4 :   1 r5 :   1 r6 :   0 r7 :   1 
r8 :   1 r9 :   1 r10:   4 r11:   1 r12:   2 r13:   0 r14:   0 r15:   0 
r16:   0 r17:   7 r18:   0 r19:   0 r20:   0 r21:   0 r22:  15 r23:   4 
r24:  27 r25:  10 r26:  99 r27:  35 r28:   6 r29:   1 r30: 139 r31:  33 
x  :  12 y  :  96 z  :   9 
Registers used: 24 out of 35 (68.6%)

ATmega32 instruction use summary:
.lds  :   0 .lds.l:   0 .sts  :   0 .sts.l:   0 adc   :   0 add   :   3 
adiw  :   9 and   :   0 andi  :   5 asr   :   0 bclr  :   0 bld   :   0 
brbc  :   0 brbs  :   0 brcc  :   1 brcs  :   0 break :   0 breq  :   7 
brge  :   0 brhc  :   0 brhs  :   0 brid  :   0 brie  :   0 brlo  :   2 
brlt  :   0 brmi  :   0 brne  :  18 brpl  :   1 brsh  :   0 brtc  :   0 
brts  :   1 brvc  :   0 brvs  :   0 bset  :   0 bst   :   0 call  :  46 
cbi   :  20 cbr   :   0 clc   :   1 clh   :   0 cli   :   1 cln   :   0 
clr   :   7 cls   :   0 clt   :   1 clv   :   0 clz   :   0 com   :   2 
cp    :   2 cpc   :   1 cpi   :   6 cpse  :   0 dec   :   8 des   :   0 
eor   :   0 fmul  :   0 fmuls :   0 fmulsu:   0 icall :   0 ijmp  :   0 
in    :   2 inc   :   2 jmp   :  29 ld    :  21 ldd   :  21 ldi   : 103 
lds   :  22 lpm   :   9 lsl   :   4 lsr   :   0 mov   :  17 movw  :   5 
mul   :   0 muls  :   0 mulsu :   0 neg   :   0 nop   :   1 or    :   1 
ori   :   3 out   :  16 pop   :   0 push  :   0 rcall :  49 ret   :  16 
reti  :   0 rjmp  :  19 rol   :   1 ror   :   0 sbc   :   1 sbci  :   1 
sbi   :  16 sbic  :   2 sbis  :   4 sbiw  :   8 sbr   :   0 sbrc  :   0 
sbrs  :   0 sec   :   1 seh   :   0 sei   :   0 sen   :   0 ser   :   0 
ses   :   0 set   :   1 sev   :   0 sez   :   0 sleep :   0 spm   :   0 
st    :  60 std   :   7 sts   :   6 sub   :   1 subi  :   5 swap  :   2 
tst   :   2 wdr   :   1 
Instructions used: 55 out of 116 (47.4%)

ATmega32 memory use summary [bytes]:
Segment   Begin    End      Code   Data   Used    Size   Use%
---------------------------------------------------------------
[.cseg] 0x000000 0x0005d6   1406     88   1494   32768   4.6%
[.dseg] 0x000060 0x000282      0     34     34    2048   1.7%
[.eseg] 0x000000 0x000000      0      0      0    1024   0.0%

Assembly complete, 0 errors, 12 warnings
